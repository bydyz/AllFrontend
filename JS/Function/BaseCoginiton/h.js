// 局部作用域就是在函数中定义的变量，并且在函数中定义的变量如果不使用var关键字时，默认定义就是全局变量，默认是window.变量名

// 函数作用域（局部作用域）

// 调用函数时创建函数作用域，函数执行完毕后，函数作用域销毁
// 每调用一次函数就会创建一个新的函数作用域，他们之间是相互独立的
// 在函数作用域中可以访问全局作用域的变量
// 当在全局作用域中无法访问到函数作用域中的变量
// 在函数作用中如果有与全局作用域的变量名相同，需要访问全局作用域中的变量时，可以使用window.变量名来访问全局变量





// 在函数作用域中也有提前声明的特性





// var a = 123;
//   function fun() {
//       console.log(a);
//       var a = 456;
//   }
//   fun();
//   console.log(a);
//   // 结果 ：undefined 123
//   // 倘若没有   var a = 456  ， 则结果是   123  123




//   var a = 123;
//     function fun() {
//         console.log(a);
//         a = 456;
//     }
//     fun();
//     console.log(a);
//     // 结果 ： 123  456




//     var a = 123;
//   function fun(a) {// 形参相当于在：函数体中声明一个var a;  
//       console.log(a);
//       a = 456;
//   }
//   fun();
//   console.log(a);
//   // 结果：undefined  123




  var a = 123;
  function fun() {
    console.log(a);
      a = 456;
  }
  fun(678);   //最后的结果与传入无关
  console.log(a);
  // 结果：123 456