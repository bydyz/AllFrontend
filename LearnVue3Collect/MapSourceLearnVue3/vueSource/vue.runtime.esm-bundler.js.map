{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/location.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parse-error/module-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parse-error.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/options.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/estree.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/tokenizer/context.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/tokenizer/types.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/identifier.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/flow/scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/flow/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/whitespace.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/jsx/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/production-parameter.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/base.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/comments.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/tokenizer/state.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/babel-helper-string-parser/src/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/tokenizer/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/class-scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/util/expression-scope.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/util.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/node.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/lval.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/typescript/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/placeholders.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/plugin-utils.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/expression.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/statement.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/parser/index.ts", "../../../node_modules/.pnpm/@babel+parser@7.27.1/node_modules/@babel/parser/src/index.ts", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/base64.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/base64-vlq.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/util.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/array-set.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/mapping-list.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/source-map-generator.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/binary-search.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/quick-sort.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/source-map-consumer.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/source-node.js", "../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/source-map.js", "../../runtime-dom/src/index.ts", "../../shared/src/makeMap.ts", "../../shared/src/general.ts", "../../shared/src/patchFlags.ts", "../../shared/src/slotFlags.ts", "../../shared/src/globalsAllowList.ts", "../../shared/src/codeframe.ts", "../../shared/src/normalizeProp.ts", "../../shared/src/domTagConfig.ts", "../../shared/src/domAttrConfig.ts", "../../shared/src/escapeHtml.ts", "../../shared/src/looseEqual.ts", "../../shared/src/toDisplayString.ts", "../../reactivity/src/constants.ts", "../../reactivity/src/warning.ts", "../../reactivity/src/effectScope.ts", "../../reactivity/src/effect.ts", "../../reactivity/src/dep.ts", "../../reactivity/src/arrayInstrumentations.ts", "../../reactivity/src/baseHandlers.ts", "../../reactivity/src/collectionHandlers.ts", "../../reactivity/src/reactive.ts", "../../reactivity/src/ref.ts", "../../reactivity/src/computed.ts", "../../reactivity/src/watch.ts", "../../runtime-core/src/warning.ts", "../../runtime-core/src/errorHandling.ts", "../../runtime-core/src/scheduler.ts", "../../runtime-core/src/hmr.ts", "../../runtime-core/src/devtools.ts", "../../runtime-core/src/componentRenderContext.ts", "../../runtime-core/src/directives.ts", "../../runtime-core/src/components/Teleport.ts", "../../runtime-core/src/components/BaseTransition.ts", "../../runtime-core/src/apiDefineComponent.ts", "../../runtime-core/src/helpers/useId.ts", "../../runtime-core/src/helpers/useTemplateRef.ts", "../../runtime-core/src/rendererTemplateRef.ts", "../../runtime-core/src/hydration.ts", "../../runtime-core/src/hydrationStrategies.ts", "../../runtime-core/src/apiAsyncComponent.ts", "../../runtime-core/src/components/KeepAlive.ts", "../../runtime-core/src/apiLifecycle.ts", "../../runtime-core/src/helpers/resolveAssets.ts", "../../runtime-core/src/helpers/renderList.ts", "../../runtime-core/src/helpers/createSlots.ts", "../../runtime-core/src/helpers/renderSlot.ts", "../../runtime-core/src/helpers/toHandlers.ts", "../../runtime-core/src/componentPublicInstance.ts", "../../runtime-core/src/apiSetupHelpers.ts", "../../runtime-core/src/componentOptions.ts", "../../runtime-core/src/apiCreateApp.ts", "../../runtime-core/src/apiInject.ts", "../../runtime-core/src/helpers/useSsrContext.ts", "../../runtime-core/src/apiWatch.ts", "../../runtime-core/src/helpers/useModel.ts", "../../runtime-core/src/componentEmits.ts", "../../runtime-core/src/componentRenderUtils.ts", "../../runtime-core/src/internalObject.ts", "../../runtime-core/src/componentProps.ts", "../../runtime-core/src/componentSlots.ts", "../../runtime-core/src/profiling.ts", "../../runtime-core/src/featureFlags.ts", "../../runtime-core/src/renderer.ts", "../../runtime-core/src/components/Suspense.ts", "../../runtime-core/src/vnode.ts", "../../runtime-core/src/component.ts", "../../runtime-core/src/apiComputed.ts", "../../runtime-core/src/h.ts", "../../runtime-core/src/customFormatter.ts", "../../runtime-core/src/helpers/withMemo.ts", "../../runtime-core/src/index.ts", "../../runtime-dom/src/nodeOps.ts", "../../runtime-dom/src/components/Transition.ts", "../../runtime-dom/src/modules/class.ts", "../../runtime-dom/src/directives/vShow.ts", "../../runtime-dom/src/helpers/useCssVars.ts", "../../runtime-dom/src/modules/style.ts", "../../runtime-dom/src/modules/attrs.ts", "../../runtime-dom/src/modules/props.ts", "../../runtime-dom/src/modules/events.ts", "../../runtime-dom/src/patchProp.ts", "../../runtime-dom/src/apiCustomElement.ts", "../../runtime-dom/src/helpers/useCssModule.ts", "../../runtime-dom/src/components/TransitionGroup.ts", "../../runtime-dom/src/directives/vModel.ts", "../../runtime-dom/src/directives/vOn.ts", "../src/dev.ts", "../../compiler-core/src/runtimeHelpers.ts", "../../compiler-core/src/ast.ts", "../../compiler-core/src/errors.ts", "../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.ts", "../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.ts", "../../compiler-core/src/tokenizer.ts", "../../compiler-core/src/utils.ts", "../../../node_modules/.pnpm/estree-walker@2.0.2/node_modules/estree-walker/dist/esm/estree-walker.js", "../../compiler-core/src/babelUtils.ts", "../../compiler-core/src/parser.ts", "../../compiler-core/src/transforms/cacheStatic.ts", "../../compiler-core/src/transform.ts", "../../compiler-core/src/codegen.ts", "../../compiler-core/src/validateExpression.ts", "../../compiler-core/src/transforms/transformExpression.ts", "../../compiler-core/src/transforms/vIf.ts", "../../compiler-core/src/transforms/vBind.ts", "../../compiler-core/src/transforms/vFor.ts", "../../compiler-core/src/transforms/vSlot.ts", "../../compiler-core/src/transforms/transformElement.ts", "../../compiler-core/src/transforms/transformSlotOutlet.ts", "../../compiler-core/src/transforms/vOn.ts", "../../compiler-core/src/transforms/transformText.ts", "../../compiler-core/src/transforms/vOnce.ts", "../../compiler-core/src/transforms/vModel.ts", "../../compiler-core/src/transforms/vMemo.ts", "../../compiler-core/src/compile.ts", "../../compiler-core/src/transforms/noopDirectiveTransform.ts", "../../compiler-dom/src/runtimeHelpers.ts", "../../compiler-dom/src/decodeHtmlBrowser.ts", "../../compiler-dom/src/parserOptions.ts", "../../compiler-dom/src/transforms/transformStyle.ts", "../../compiler-dom/src/errors.ts", "../../compiler-dom/src/transforms/vHtml.ts", "../../compiler-dom/src/transforms/vText.ts", "../../compiler-dom/src/transforms/vModel.ts", "../../compiler-dom/src/transforms/vOn.ts", "../../compiler-dom/src/transforms/vShow.ts", "../../compiler-dom/src/transforms/Transition.ts", "../../compiler-dom/src/transforms/ignoreSideEffectTags.ts", "../../compiler-dom/src/htmlNesting.ts", "../../compiler-dom/src/transforms/validateHtmlNesting.ts", "../../compiler-dom/src/index.ts", "../src/index.ts"],
  "sourcesContent": ["export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "import type { ParseErrorTemplates } from \"../parse-error.ts\";\n\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n} satisfies ParseErrorTemplates;\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\nconst toNodeDescription = (node: NodeWithDescription) =>\n  node.type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[`${node.prefix}`]\n    : NodeDescriptions[node.type];\n\nexport default toNodeDescription;\n", "import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext:\n    \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"await using\" | \"const\" | \"destructuring\" | \"using\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace:\n    'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({ phase }: { phase: string }) =>\n    `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert:\n    \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedImportAssert` parser plugin to suppress this error.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArity: `\\`import()\\` requires exactly one or two arguments.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid optional chaining in the left-hand side of ${toNodeDescription(\n      ancestor,\n    )}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault:\n    'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationExport: \"Using declaration cannot be exported.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  YieldNotInGeneratorFunction:\n    \"'yield' is only allowed within generator functions.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n} satisfies ParseErrorTemplates;\n", "import type { ParseErrorTemplates } from \"../parse-error\";\n\nexport default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n} satisfies ParseErrorTemplates;\n", "import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> =\n  T extends Set<infer M> ? M : unknown;\n\nexport type UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: process.env.BABEL_8_BREAKING\n    ? 'Topic references are only supported when using the `\"proposal\": \"hack\"` version of the pipeline proposal.'\n    : 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  ...(process.env.BABEL_8_BREAKING\n    ? {}\n    : {\n        // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n        // are retained for backwards compatibility\n        // with the deprecated smart-mix pipe operator proposal plugin.\n        // They are subject to removal in a future major version.\n        PipelineBodyNoArrow:\n          'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n        PipelineBodySequenceExpression:\n          \"Pipeline body may not be a comma-separated sequence expression.\",\n        PipelineHeadSequenceExpression:\n          \"Pipeline head should not be a comma-separated sequence expression.\",\n        PipelineTopicUnused:\n          \"Pipeline is in topic style but does not use topic reference.\",\n        PrimaryTopicNotAllowed:\n          \"Topic reference was used in a lexical context without topic binding.\",\n        PrimaryTopicRequiresSmartPipeline:\n          'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n      }),\n} satisfies ParseErrorTemplates;\n", "import { Position } from \"./util/location.ts\";\n\ntype SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\ntype ParseErrorCode =\n  | \"BABEL_PARSER_SYNTAX_ERROR\"\n  | \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (\n  loc: Position,\n  details: ErrorDetails,\n) => ParseError<ErrorDetails>;\n\ntype ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\ntype ParseErrorCredentials<ErrorDetails> = {\n  code: string;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nfunction defineHidden(obj: object, key: string, value: unknown) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value,\n  });\n}\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  code,\n  reasonCode,\n  syntaxPlugin,\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  const hasMissingPlugin =\n    reasonCode === \"MissingPlugin\" || reasonCode === \"MissingOneOfPlugins\";\n\n  if (!process.env.BABEL_8_BREAKING) {\n    const oldReasonCodes: Record<string, string> = {\n      AccessorCannotDeclareThisParameter: \"AccesorCannotDeclareThisParameter\",\n      AccessorCannotHaveTypeParameters: \"AccesorCannotHaveTypeParameters\",\n      ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n        \"ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference\",\n      SetAccessorCannotHaveOptionalParameter:\n        \"SetAccesorCannotHaveOptionalParameter\",\n      SetAccessorCannotHaveRestParameter: \"SetAccesorCannotHaveRestParameter\",\n      SetAccessorCannotHaveReturnType: \"SetAccesorCannotHaveReturnType\",\n    };\n    if (oldReasonCodes[reasonCode]) {\n      reasonCode = oldReasonCodes[reasonCode];\n    }\n  }\n\n  return function constructor(loc: Position, details: ErrorDetails) {\n    const error: ParseError<ErrorDetails> = new SyntaxError() as any;\n\n    error.code = code as ParseErrorCode;\n    error.reasonCode = reasonCode;\n    error.loc = loc;\n    error.pos = loc.index;\n\n    error.syntaxPlugin = syntaxPlugin;\n    if (hasMissingPlugin) {\n      error.missingPlugin = (details as any).missingPlugin;\n    }\n\n    type Overrides = {\n      loc?: Position;\n      details?: ErrorDetails;\n    };\n    defineHidden(error, \"clone\", function clone(overrides: Overrides = {}) {\n      const { line, column, index } = overrides.loc ?? loc;\n      return constructor(new Position(line, column, index), {\n        ...details,\n        ...overrides.details,\n      });\n    });\n\n    defineHidden(error, \"details\", details);\n\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get(this: ParseError<ErrorDetails>): string {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value: string) {\n        Object.defineProperty(this, \"message\", { value, writable: true });\n      },\n    });\n\n    return error;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any>; code?: ParseErrorCode };\n\nexport type ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : object\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : object\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : object\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : object\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: \"AN_ERROR_CODE\",\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n          ? { message: template }\n          : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nimport ModuleErrors from \"./parse-error/module-errors.ts\";\nimport StandardErrors from \"./parse-error/standard-errors.ts\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors.ts\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors.ts\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors.ts\";\n", "import type { Plugin } from \"./plugin-utils.ts\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport interface Options {\n  /**\n   * By default, import and export declarations can only appear at a program's top level.\n   * Setting this option to true allows them anywhere where a statement is allowed.\n   */\n  allowImportExportEverywhere?: boolean;\n\n  /**\n   * By default, await use is not allowed outside of an async function.\n   * Set this to true to accept such code.\n   */\n  allowAwaitOutsideFunction?: boolean;\n\n  /**\n   * By default, a return statement at the top level raises an error.\n   * Set this to true to accept such code.\n   */\n  allowReturnOutsideFunction?: boolean;\n\n  /**\n   * By default, new.target use is not allowed outside of a function or class.\n   * Set this to true to accept such code.\n   */\n  allowNewTargetOutsideFunction?: boolean;\n\n  allowSuperOutsideMethod?: boolean;\n\n  /**\n   * By default, exported identifiers must refer to a declared variable.\n   * Set this to true to allow export statements to reference undeclared variables.\n   */\n  allowUndeclaredExports?: boolean;\n\n  /**\n   * By default, yield use is not allowed outside of a generator function.\n   * Set this to true to accept such code.\n   */\n\n  allowYieldOutsideFunction?: boolean;\n\n  /**\n   * By default, Babel parser JavaScript code according to Annex B syntax.\n   * Set this to `false` to disable such behavior.\n   */\n  annexB?: boolean;\n\n  /**\n   * By default, Babel attaches comments to adjacent AST nodes.\n   * When this option is set to false, comments are not attached.\n   * It can provide up to 30% performance improvement when the input code has many comments.\n   * @babel/eslint-parser will set it for you.\n   * It is not recommended to use attachComment: false with Babel transform,\n   * as doing so removes all the comments in output code, and renders annotations such as\n   * /* istanbul ignore next *\\/ nonfunctional.\n   */\n  attachComment?: boolean;\n\n  /**\n   * By default, Babel always throws an error when it finds some invalid code.\n   * When this option is set to true, it will store the parsing error and\n   * try to continue parsing the invalid input file.\n   */\n  errorRecovery?: boolean;\n\n  /**\n   * Indicate the mode the code should be parsed in.\n   * Can be one of \"script\", \"module\", or \"unambiguous\". Defaults to \"script\".\n   * \"unambiguous\" will make @babel/parser attempt to guess, based on the presence\n   * of ES6 import or export statements.\n   * Files with ES6 imports and exports are considered \"module\" and are otherwise \"script\".\n   */\n  sourceType?: \"script\" | \"module\" | \"unambiguous\";\n\n  /**\n   * Correlate output AST nodes with their source filename.\n   * Useful when generating code and source maps from the ASTs of multiple input files.\n   */\n  sourceFilename?: string;\n\n  /**\n   * By default, all source indexes start from 0.\n   * You can provide a start index to alternatively start with.\n   * Useful for integration with other source tools.\n   */\n  startIndex?: number;\n\n  /**\n   * By default, the first line of code parsed is treated as line 1.\n   * You can provide a line number to alternatively start with.\n   * Useful for integration with other source tools.\n   */\n  startLine?: number;\n\n  /**\n   * By default, the parsed code is treated as if it starts from line 1, column 0.\n   * You can provide a column number to alternatively start with.\n   * Useful for integration with other source tools.\n   */\n  startColumn?: number;\n\n  /**\n   * Array containing the plugins that you want to enable.\n   */\n  plugins?: Plugin[];\n\n  /**\n   * Should the parser work in strict mode.\n   * Defaults to true if sourceType === 'module'. Otherwise, false.\n   */\n  strictMode?: boolean;\n\n  /**\n   * Adds a ranges property to each node: [node.start, node.end]\n   */\n  ranges?: boolean;\n\n  /**\n   * Adds all parsed tokens to a tokens property on the File node.\n   */\n  tokens?: boolean;\n\n  /**\n   * By default, the parser adds information about parentheses by setting\n   * `extra.parenthesized` to `true` as needed.\n   * When this option is `true` the parser creates `ParenthesizedExpression`\n   * AST nodes instead of using the `extra` property.\n   */\n  createParenthesizedExpressions?: boolean;\n\n  /**\n   * The default is false in Babel 7 and true in Babel 8\n   * Set this to true to parse it as an `ImportExpression` node.\n   * Otherwise `import(foo)` is parsed as `CallExpression(Import, [Identifier(foo)])`.\n   */\n  createImportExpressions?: boolean;\n}\n\nexport const enum OptionFlags {\n  AllowAwaitOutsideFunction = 1 << 0,\n  AllowReturnOutsideFunction = 1 << 1,\n  AllowNewTargetOutsideFunction = 1 << 2,\n  AllowImportExportEverywhere = 1 << 3,\n  AllowSuperOutsideMethod = 1 << 4,\n  AllowYieldOutsideFunction = 1 << 5,\n  AllowUndeclaredExports = 1 << 6,\n  Ranges = 1 << 7,\n  Tokens = 1 << 8,\n  CreateImportExpressions = 1 << 9,\n  CreateParenthesizedExpressions = 1 << 10,\n  ErrorRecovery = 1 << 11,\n  AttachComment = 1 << 12,\n  AnnexB = 1 << 13,\n}\n\ntype OptionsWithDefaults = Required<Options>;\n\nfunction createDefaultOptions(): OptionsWithDefaults {\n  return {\n    // Source type (\"script\" or \"module\") for different semantics\n    sourceType: \"script\",\n    // Source filename.\n    sourceFilename: undefined,\n    // Index (0-based) from which to start counting source. Useful for\n    // integration with other tools.\n    startIndex: 0,\n    // Column (0-based) from which to start counting source. Useful for\n    // integration with other tools.\n    startColumn: 0,\n    // Line (1-based) from which to start counting source. Useful for\n    // integration with other tools.\n    startLine: 1,\n    // When enabled, await at the top level is not considered an\n    // error.\n    allowAwaitOutsideFunction: false,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, new.target outside a function or class is not\n    // considered an error.\n    allowNewTargetOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // TODO\n    allowSuperOutsideMethod: false,\n    // When enabled, export statements can reference undeclared variables.\n    allowUndeclaredExports: false,\n    allowYieldOutsideFunction: false,\n    // An array of plugins to enable\n    plugins: [],\n    // TODO\n    strictMode: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // Adds all parsed tokens to a `tokens` property on the `File` node\n    tokens: false,\n    // Whether to create ImportExpression AST nodes (if false\n    // `import(foo)` will be parsed as CallExpression(Import, [Identifier(foo)])\n    createImportExpressions: process.env.BABEL_8_BREAKING ? true : false,\n    // Whether to create ParenthesizedExpression AST nodes (if false\n    // the parser sets extra.parenthesized on the expression nodes instead).\n    createParenthesizedExpressions: false,\n    // When enabled, errors are attached to the AST instead of being directly thrown.\n    // Some errors will still throw, because @babel/parser can't always recover.\n    errorRecovery: false,\n    // When enabled, comments will be attached to adjacent AST nodes as one of\n    // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n    // is vital to preserve comments after transform. If you don't print AST back,\n    // consider set this option to `false` for performance\n    attachComment: true,\n    // When enabled, the parser will support Annex B syntax.\n    // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n    annexB: true,\n  };\n}\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): OptionsWithDefaults {\n  // https://github.com/babel/babel/pull/16918\n  // `options` is accessed frequently, please make sure it is a fast object.\n  // `%ToFastProperties` can make it a fast object, but the performance is the same as the slow object.\n  const options: any = createDefaultOptions();\n\n  if (opts == null) {\n    return options;\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  for (const key of Object.keys(options) as (keyof Options)[]) {\n    if (opts[key] != null) options[key] = opts[key];\n  }\n\n  if (options.startLine === 1) {\n    if (opts.startIndex == null && options.startColumn > 0) {\n      options.startIndex = options.startColumn;\n    } else if (opts.startColumn == null && options.startIndex > 0) {\n      options.startColumn = options.startIndex;\n    }\n  } else if (opts.startColumn == null || opts.startIndex == null) {\n    if (opts.startIndex != null || process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"With a `startLine > 1` you must also specify `startIndex` and `startColumn`.\",\n      );\n    }\n  }\n\n  return options;\n}\n", "import type { TokenType } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type * as N from \"../types.ts\";\nimport type { Node as NodeType, NodeBase, File } from \"../types.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { BindingFlag } from \"../util/scopeflags.ts\";\nimport { OptionFlags } from \"../options.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) => {\n  if (object) {\n    defineProperty(object, key, { enumerable: false, value: object[key] });\n  }\n};\n\nfunction toESTreeLocation(node: any) {\n  toUnenumerable(node.loc.start, \"index\");\n  toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.optionFlags & OptionFlags.Tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (_) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: bigint | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.EstreeLiteral>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.estreeParseLiteral(value);\n    }\n\n    // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n    estreeParseChainExpression(\n      node: N.Expression,\n      endLoc: Position,\n    ): N.EstreeChainExpression {\n      const chain = this.startNodeAtNode<N.EstreeChainExpression>(node);\n      chain.expression = node;\n      return this.finishNodeAt(chain, \"ChainExpression\", endLoc);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      this.castNodeTo(expression, \"Literal\");\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = this.castNodeTo(directive, \"ExpressionStatement\");\n      stmt.expression = expression;\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    /**\n     * The TS-ESLint always define optional AST properties, here we provide the\n     * default value for such properties immediately after `finishNode` was invoked.\n     * This hook will be implemented by the typescript plugin.\n     *\n     * Note: This hook should be manually invoked when we change the `type` of a given AST\n     * node, to ensure that the optional properties are correctly filled.\n     * @param node The AST node finished by finishNode\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fillOptionalPropertiesForTSESLint(node: NodeType) {}\n\n    cloneEstreeStringLiteral(node: N.EstreeLiteral): N.EstreeLiteral {\n      const { start, end, loc, range, raw, value } = node;\n      const cloned = Object.create(node.constructor.prototype);\n      cloned.type = \"Literal\";\n      cloned.start = start;\n      cloned.end = end;\n      cloned.loc = loc;\n      cloned.range = range;\n      cloned.raw = raw;\n      cloned.value = value;\n      return cloned;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as unknown as N.EstreeMethodDefinition).value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): stmt is N.ExpressionStatement {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      return this.castNodeTo(node, \"PrivateIdentifier\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isPrivateName(node: N.Node): node is N.EstreePrivateIdentifier {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    getPrivateNameSV(node: N.EstreePrivateIdentifier): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node as unknown as N.PrivateName);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ):\n      | N.EstreeProperty\n      | N.EstreeMethodDefinition\n      | N.EstreeTSAbstractMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      delete funcNode.kind;\n      const { typeParameters } = node;\n      if (typeParameters) {\n        delete node.typeParameters;\n        funcNode.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(funcNode, typeParameters);\n      }\n      const valueNode = this.castNodeTo(\n        funcNode as N.MethodLike,\n        process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"typescript\") &&\n          !funcNode.body\n          ? \"TSEmptyBodyFunctionExpression\"\n          : \"FunctionExpression\",\n      );\n      (\n        node as unknown as Undone<\n          | N.EstreeProperty\n          | N.EstreeMethodDefinition\n          | N.EstreeTSAbstractMethodDefinition\n        >\n      ).value = valueNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      if (process.env.BABEL_8_BREAKING && this.hasPlugin(\"typescript\")) {\n        // @ts-expect-error todo(flow->ts) property not defined for all types in union\n        if (node.abstract) {\n          // @ts-expect-error remove abstract from TSAbstractMethodDefinition\n          delete node.abstract;\n          return this.finishNode(\n            // @ts-expect-error cast methods to estree types\n            node as Undone<N.EstreeTSAbstractMethodDefinition>,\n            \"TSAbstractMethodDefinition\",\n          );\n        }\n      }\n      if (type === \"ObjectMethod\") {\n        if ((node as any as N.ObjectMethod).kind === \"method\") {\n          (node as any as N.EstreeProperty).kind = \"init\";\n        }\n        (node as any as N.EstreeProperty).shorthand = false;\n        return this.finishNode(\n          // @ts-expect-error cast methods to estree types\n          node as Undone<N.EstreeProperty>,\n          \"Property\",\n        );\n      } else {\n        return this.finishNode(\n          // @ts-expect-error cast methods to estree types\n          node as Undone<N.EstreeMethodDefinition>,\n          \"MethodDefinition\",\n        );\n      }\n    }\n\n    nameIsConstructor(key: N.Expression | N.PrivateName): boolean {\n      if (key.type === \"Literal\") return key.value === \"constructor\";\n      return super.nameIsConstructor(key);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as unknown as N.EstreePropertyDefinition;\n        }\n      }\n      if (\n        process.env.BABEL_8_BREAKING &&\n        propertyNode.abstract &&\n        this.hasPlugin(\"typescript\")\n      ) {\n        delete propertyNode.abstract;\n        this.castNodeTo(propertyNode, \"TSAbstractPropertyDefinition\");\n      } else {\n        this.castNodeTo(propertyNode, \"PropertyDefinition\");\n      }\n      return propertyNode;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as unknown as N.EstreePropertyDefinition;\n        }\n      }\n      if (\n        process.env.BABEL_8_BREAKING &&\n        propertyNode.abstract &&\n        this.hasPlugin(\"typescript\")\n      ) {\n        this.castNodeTo(propertyNode, \"TSAbstractPropertyDefinition\");\n      } else {\n        this.castNodeTo(propertyNode, \"PropertyDefinition\");\n      }\n      propertyNode.computed = false;\n      return propertyNode;\n    }\n\n    parseClassAccessorProperty(\n      this: Parser,\n      node: N.ClassAccessorProperty,\n    ): any {\n      const accessorPropertyNode = super.parseClassAccessorProperty(node);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return accessorPropertyNode;\n        }\n      }\n      if (accessorPropertyNode.abstract && this.hasPlugin(\"typescript\")) {\n        delete accessorPropertyNode.abstract;\n        this.castNodeTo(accessorPropertyNode, \"TSAbstractAccessorProperty\");\n      } else {\n        this.castNodeTo(accessorPropertyNode, \"AccessorProperty\");\n      }\n      return accessorPropertyNode;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        this.castNodeTo(node, \"Property\");\n      }\n\n      return node as any;\n    }\n\n    finishObjectProperty(node: Undone<N.ObjectProperty>): N.ObjectProperty {\n      (node as unknown as Undone<N.EstreeProperty>).kind = \"init\";\n      return this.finishNode(\n        node as unknown as Undone<N.EstreeProperty>,\n        \"Property\",\n      ) as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingFlag,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (\n        prop.type === \"Property\" &&\n        (prop.kind === \"get\" || prop.kind === \"set\")\n      ) {\n        this.raise(Errors.PatternHasAccessor, prop.key);\n      } else if (prop.type === \"Property\" && prop.method) {\n        this.raise(Errors.PatternHasMethod, prop.key);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        this.castNodeTo(node, \"ImportExpression\");\n        (node as N.Node as N.EstreeImportExpression).source = node\n          .arguments[0] as N.Expression;\n        (node as N.Node as N.EstreeImportExpression).options =\n          (node.arguments[1] as N.Expression) ?? null;\n        // compatibility with previous ESTree AST\n        // TODO(Babel 8): Remove this\n        (node as N.Node as N.EstreeImportExpression).attributes =\n          (node.arguments[1] as N.Expression) ?? null;\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      } else if (node.type === \"OptionalCallExpression\") {\n        this.castNodeTo(node, \"CallExpression\");\n      } else {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            this.castNodeTo(node, \"ExportAllDeclaration\");\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    stopParseSubscript(base: N.Expression, state: N.ParseSubscriptState) {\n      const node = super.stopParseSubscript(base, state);\n      if (state.optionalChainMember) {\n        return this.estreeParseChainExpression(node, base.loc.end);\n      }\n      return node;\n    }\n\n    parseMember(\n      base: N.Expression,\n      startLoc: Position,\n      state: N.ParseSubscriptState,\n      computed: boolean,\n      optional: boolean,\n    ) {\n      const node = super.parseMember(base, startLoc, state, computed, optional);\n      if (node.type === \"OptionalMemberExpression\") {\n        this.castNodeTo(node, \"MemberExpression\");\n      } else {\n        node.optional = false;\n      }\n      return node;\n    }\n\n    isOptionalMemberExpression(node: N.Node) {\n      if (node.type === \"ChainExpression\") {\n        return node.expression.type === \"MemberExpression\";\n      }\n      return super.isOptionalMemberExpression(node);\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isObjectProperty(node: N.Node): node is N.EstreeProperty {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isObjectMethod(node: N.Node): node is N.EstreeProperty {\n      return (\n        node.type === \"Property\" &&\n        (node.method || node.kind === \"get\" || node.kind === \"set\")\n      );\n    }\n\n    /* ============================================================ *\n     * parser/node.ts                                               *\n     * ============================================================ */\n\n    castNodeTo<T extends N.Node[\"type\"]>(\n      node: N.Node,\n      type: T,\n    ): Extract<N.Node, { type: T }> {\n      const result = super.castNodeTo(node, type);\n      this.fillOptionalPropertiesForTSESLint(result);\n      return result;\n    }\n\n    cloneIdentifier<T extends N.Identifier | N.Placeholder>(node: T): T {\n      const cloned = super.cloneIdentifier(node);\n      this.fillOptionalPropertiesForTSESLint(cloned);\n      return cloned;\n    }\n\n    cloneStringLiteral<\n      T extends N.EstreeLiteral | N.StringLiteral | N.Placeholder,\n    >(node: T): T {\n      if (node.type === \"Literal\") {\n        return this.cloneEstreeStringLiteral(node) as T;\n      }\n      return super.cloneStringLiteral(node);\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    // Override for TS-ESLint that does not allow optional AST properties\n    finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n      const result = super.finishNode(node, type);\n      this.fillOptionalPropertiesForTSESLint(result);\n      return result;\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context.ts\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  // TODO: Remove this in Babel 8\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  // TODO: Remove this in Babel 8\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  // TODO: Remove this in Babel 8\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  // TODO: Remove this in Babel 8\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  // TODO: Remove this in Babel 8\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _defer: createKeywordLike(\"defer\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _source: createKeywordLike(\"source\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  // TODO: Remove this in Babel 8\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.placeholder;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.placeholder;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.cjs`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.cjs`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,4,51,13,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,39,27,10,22,251,41,7,1,17,2,60,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,31,9,2,0,3,0,2,37,2,0,26,0,2,0,45,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,200,32,32,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,26,3994,6,582,6842,29,1763,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,433,44,212,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,42,9,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,229,29,3,0,496,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,7,9,32,4,318,1,80,3,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,68,8,2,0,3,0,2,3,2,4,2,0,15,1,83,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,7,19,58,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,343,9,54,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,10,5350,0,7,14,11465,27,2343,9,87,9,39,4,60,6,26,9,535,9,470,0,2,54,8,3,82,0,12,1,19628,1,4178,9,519,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,245,1,2,9,726,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "import * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "import { ScopeFlag, BindingFlag } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport type * as N from \"../types.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport const enum NameType {\n  // var-declared names in the current lexical scope\n  Var = 1 << 0,\n  // lexically-declared names in the current lexical scope\n  Lexical = 1 << 1,\n  // lexically-declared FunctionDeclaration names in the current lexical scope\n  Function = 1 << 2,\n}\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlag = 0;\n  names: Map<string, NameType> = new Map();\n  firstLexicalName = \"\";\n\n  constructor(flags: ScopeFlag) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & ScopeFlag.PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & ScopeFlag.CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & ScopeFlag.CLASS) > 0 && (flags & ScopeFlag.FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (ScopeFlag.VAR | ScopeFlag.CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlag): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlag) {\n    /*:: +createScope: (flags:ScopeFlag) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlag {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (ScopeFlag.FUNCTION | ScopeFlag.STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & ScopeFlag.PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    let scope = this.currentScope();\n    if (\n      bindingType & BindingFlag.SCOPE_LEXICAL ||\n      bindingType & BindingFlag.SCOPE_FUNCTION\n    ) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      let type = scope.names.get(name) || 0;\n\n      if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n        type = type | NameType.Function;\n      } else {\n        if (!scope.firstLexicalName) {\n          scope.firstLexicalName = name;\n        }\n        type = type | NameType.Lexical;\n      }\n\n      scope.names.set(name, type);\n\n      if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BindingFlag.SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.names.set(name, (scope.names.get(name) || 0) | NameType.Var);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & ScopeFlag.VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingFlag,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    if (!(bindingType & BindingFlag.KIND_VALUE)) return false;\n\n    if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n      return scope.names.has(name);\n    }\n\n    const type = scope.names.get(name);\n\n    if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n      return (\n        (type & NameType.Lexical) > 0 ||\n        (!this.treatFunctionsAsVarInScope(scope) && (type & NameType.Var) > 0)\n      );\n    }\n\n    return (\n      ((type & NameType.Lexical) > 0 &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & ScopeFlag.SIMPLE_CATCH &&\n          scope.firstLexicalName === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        (type & NameType.Function) > 0)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.names.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (\n        flags & (ScopeFlag.VAR | ScopeFlag.CLASS) &&\n        !(flags & ScopeFlag.ARROW)\n      ) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { NameType, Scope } from \"../../util/scope.ts\";\nimport { BindingFlag, type ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlag): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (\n      bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN &&\n      !scope.declareFunctions.has(name)\n    ) {\n      const type = scope.names.get(name);\n      return (type & NameType.Function) > 0 || (type & NameType.Lexical) > 0;\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier.ts\";\nimport FlowScopeHandler from \"./scope.ts\";\nimport { BindingFlag, ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\nimport type { ClassWithMixin, IJSXParserMixin } from \"../jsx/index.ts\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(\n  node: Undone<N.ImportSpecifier | N.ImportDeclaration>,\n): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): new (...args: any) => FlowScopeHandler {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode<N.FlowPredicate>();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStartLoc.index > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, moduloLoc);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode<N.FlowFunctionTypeAnnotation>();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(\n              FlowErrors.NestedDeclareModule,\n              this.state.lastTokStartLoc,\n            );\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_VAR,\n        node.id.loc.start,\n      );\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(ScopeFlag.OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode<N.BlockStatement>());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n              this.state.lastTokStartLoc,\n            );\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, bodyElement);\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(\n            FlowErrors.UnsupportedDeclareExportKind,\n            this.state.startLoc,\n            {\n              unsupportedExportKind: label,\n              suggestion: exportSuggestions[label],\n            },\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.default = false;\n            delete node.exportKind;\n            return this.castNodeTo(\n              node as N.ExportNamedDeclaration,\n              \"DeclareExportDeclaration\",\n            );\n          } else {\n            return this.castNodeTo(\n              node as N.ExportAllDeclaration,\n              \"DeclareExportAllDeclaration\",\n            );\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(\n        node,\n      ) as unknown as N.FlowDeclareTypeAlias;\n      // Don't do finishNode as we don't want to process comments twice\n      this.castNodeTo(finished, \"DeclareTypeAlias\");\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(\n        node,\n        true,\n      ) as unknown as N.FlowDeclareOpaqueType;\n      // Don't do finishNode as we don't want to process comments twice\n      this.castNodeTo(finished, \"DeclareOpaqueType\");\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BindingFlag.TYPE_FUNCTION : BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode<N.FlowInterfaceExtends>();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(\n          FlowErrors.UnexpectedReservedUnderscore,\n          this.state.startLoc,\n        );\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        startLoc,\n        {\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, nodeStartLoc);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    // Parse in top level normal context if we are in a JSX context\n    flowInTopLevelContext<T>(cb: () => T): T {\n      if (this.curContext() !== tc.brace) {\n        const oldContext = this.state.context;\n        this.state.context = [oldContext[0]];\n        try {\n          return cb();\n        } finally {\n          this.state.context = oldContext;\n        }\n      } else {\n        return cb();\n      }\n    }\n\n    // Used when parsing type arguments from ES or JSX productions, where the first token\n    // has been created without state.inType. Thus we need to re-scan the lt token.\n    flowParseTypeParameterInstantiationInExpression():\n      | N.TypeParameterInstantiation\n      | undefined {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.flowParseTypeParameterInstantiation();\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n\n      this.state.inType = true;\n      node.params = [];\n      this.flowInTopLevelContext(() => {\n        this.expect(tt.lt);\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = false;\n        while (!this.match(tt.gt)) {\n          node.params.push(this.flowParseType());\n          if (!this.match(tt.gt)) {\n            this.expect(tt.comma);\n          }\n        }\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      });\n\n      this.state.inType = oldInType;\n      if (!this.state.inType && this.curContext() === tc.brace) {\n        // rescan `>` when we are no longer in type context and JSX parsing context\n        // since it was tokenized when `inType` is `true`.\n        this.reScan_lt_gt();\n      }\n      this.expect(tt.gt);\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      if (this.reScan_lt() !== tt.lt) return;\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode<N.FlowObjectTypeAnnotation>();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            FlowErrors.UnexpectedExplicitInexactInObject,\n            inexactStartLoc,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              FlowErrors.InexactInsideNonObject,\n              this.state.lastTokStartLoc,\n            );\n          } else if (!allowInexact) {\n            this.raise(\n              FlowErrors.InexactInsideExact,\n              this.state.lastTokStartLoc,\n            );\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, variance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(\n            FlowErrors.UnexpectedSpreadType,\n            this.state.lastTokStartLoc,\n          );\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, variance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              FlowErrors.ThisParamBannedInConstructor,\n              node.value.this,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          property.value.this,\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          property,\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, property);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier | N.Identifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt<N.FlowGenericTypeAnnotation>(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode<N.FlowTypeofTypeAnnotation>();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode<N.FlowTupleTypeAnnotation>();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, node);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, node);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt<N.FlowFunctionTypeParam>(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowType>,\n      id: N.Identifier,\n    ): N.FlowType {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowType {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt: {\n          const node = this.startNode<N.FlowFunctionTypeAnnotation>();\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        case tt.parenL: {\n          const node = this.startNode<N.FlowFunctionTypeAnnotation>();\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              FlowErrors.UnexpectedSubtractionOperand,\n              this.state.startLoc,\n            );\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowType {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt<N.FlowOtherTypeAnnotation>(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowType {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt<N.FlowFunctionTypeAnnotation>(\n          param.loc.start,\n        );\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowType {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.TypeAnnotation {\n      const node = this.startNode<N.TypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.TypeCastExpression): N.Expression {\n      (node.expression as N.Identifier).typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (type === tt._enum || tokenIsFlowInterfaceOrTypeOrOpaque(type)) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (type === tt._enum || tokenIsFlowInterfaceOrTypeOrOpaque(type)) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt<N.ConditionalExpression>(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, state.startLoc);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (\n          node.type === \"ArrowFunctionExpression\" &&\n          node.body.type !== \"BlockStatement\"\n        ) {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (\n        this.state.noArrowParamsConversionAt.includes(\n          this.offsetToSourcePos(node.start),\n        )\n      ) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n      node: T,\n      startLoc: Position,\n    ): T | N.TypeCastExpression | N.TsTypeCastExpression {\n      const newNode = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        (newNode as N.Identifier).optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TypeCastExpression>(startLoc);\n        typeCastNode.expression = newNode as N.Expression;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return newNode;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(\n      node: Undone<N.Node>,\n    ): node is Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration> {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        (\n          node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>\n        ).exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, startLoc);\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, member.value);\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, this.state.curPosition(), {\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left) as N.Assignable;\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList:\n        | ReadonlyArray<N.Expression | N.SpreadElement>\n        | ReadonlyArray<N.Expression | N.RestElement>,\n      isParenthesizedExpr?: boolean,\n    ):\n      | ReadonlyArray<N.Expression | N.SpreadElement>\n      | ReadonlyArray<N.Expression | N.RestElement> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, expr.typeAnnotation);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingFlag) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the fact that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (\n        node.superClass &&\n        (this.match(tt.lt) ||\n          // handles `class extends C<<T>`\n          this.match(tt.bitShiftL))\n      ) {\n        if (process.env.BABEL_8_BREAKING) {\n          node.superTypeArguments =\n            this.flowParseTypeParameterInstantiationInExpression();\n        } else {\n          node.superTypeParameters =\n            this.flowParseTypeParameterInstantiationInExpression();\n        }\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode<N.FlowClassImplements>();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, param);\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, param);\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue<T extends N.ObjectMember>(\n      prop: Undone<T>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): T {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        // @ts-expect-error: refine typings\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseFunctionParamType(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, param);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, param);\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, param);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, param);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, node.typeAnnotation);\n      }\n\n      return node;\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(\n          FlowErrors.ImportReflectionHasImportType,\n          node.specifiers[0].loc.start,\n        );\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        if (!isExport) return true;\n        const ch = this.lookaheadCharCode();\n        return ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        if (!phase && this.match(tt._default)) {\n          // TODO: Align with our TS AST and always add .exportKind\n          return;\n        }\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? phase : \"value\";\n      } else {\n        if (phase === \"type\" && this.match(tt.star)) this.unexpected();\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingFlag | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = this.cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, specifier, {\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = this.cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, specifier);\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse((abort: () => never) => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                typeParameters,\n              );\n            }\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n          typeParameters,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse<N.TypeAnnotation>(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params:\n        | Array<N.Expression | N.SpreadElement>\n        | Array<N.Expression | N.RestElement>,\n    ): void {\n      if (\n        this.state.noArrowParamsConversionAt.includes(\n          this.offsetToSourcePos(node.start),\n        )\n      ) {\n        node.params = params as N.ArrowFunctionExpression[\"params\"];\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.includes(\n          this.offsetToSourcePos(node.start),\n        )\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, node.params[i]);\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow &&\n          !this.state.noArrowAt.includes(\n            this.sourceToOffsetPos(this.state.start),\n          ),\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.includes(startLoc.index)\n      ) {\n        this.next();\n\n        const node = this.startNodeAt<N.CallExpression>(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments =\n          this.flowParseTypeParameterInstantiationInExpression();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        (this.match(tt.lt) ||\n          // also handles `new C<<T>`\n          this.match(tt.bitShiftL))\n      ) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(\n          FlowErrors.UnterminatedFlowComment,\n          this.state.curPosition(),\n        );\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, this.state.startLoc);\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, loc, {\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n            ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n            : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        loc,\n        enumContext,\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      details: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, loc, details);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitialized(\n      node: N.Node,\n      details: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(\n        FlowErrors.EnumStringMemberInconsistentlyInitialized,\n        node,\n        details,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Identifier;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumBooleanMember\" }\n        >[];\n        numberMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumNumberMember\" }\n        >[];\n        stringMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumStringMember\" }\n        >[];\n        defaultedMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumDefaultedMember\" }\n        >[];\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode<N.FlowEnumMember>();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, id, {\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, id, {\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(\n          FlowErrors.EnumInvalidExplicitTypeUnknownSupplied,\n          this.state.startLoc,\n          {\n            enumName,\n          },\n        );\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, this.state.startLoc, {\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.FlowEnumBody>, id: N.Identifier): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, nameLoc, {\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(\n      node: Undone<N.FlowEnumDeclaration>,\n    ): N.FlowEnumDeclaration {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.shouldParseTypes()) {\n        if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationInExpression();\n        }\n      }\n\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n|[\\r\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport function hasNewLine(input: string, start: number, end: number): boolean {\n  for (let i = start; i < end; i++) {\n    if (isNewLine(input.charCodeAt(i))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types.ts\";\nimport type { TokContext } from \"../../tokenizer/context.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { isNewLine } from \"../../util/whitespace.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXTag | null): object is N.JSXFragmentTag {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  // @ts-expect-error - object is 'never'\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport type ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(\n            JsxErrors.UnterminatedJsxContent,\n            this.state.startLoc,\n          );\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, this.state.curPosition(), {\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, this.state.startLoc);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) === charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode<N.JSXIdentifier>();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName | N.JSXIdentifier {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt<N.JSXNamespacedName>(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression =\n        this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt<N.JSXMemberExpression>(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue():\n      | N.JSXExpressionContainer\n      | N.JSXElement\n      | N.StringLiteral {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, node);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom() as N.JSXElement | N.StringLiteral;\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, this.state.startLoc);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              JsxErrors.UnexpectedSequenceExpression,\n              expression.expressions[1],\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute | N.JSXSpreadAttribute {\n      const node = this.startNode<N.JSXAttribute | N.JSXSpreadAttribute>();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startLoc: Position,\n    ): N.JSXOpeningElement | N.JSXOpeningFragment {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: (N.JSXAttribute | N.JSXSpreadAttribute)[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startLoc: Position,\n    ): N.JSXClosingElement | N.JSXClosingFragment {\n      const node = this.startNodeAt<N.JSXClosingFragment | N.JSXClosingElement>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement | N.JSXFragment {\n      const node = this.startNodeAt<N.JSXElement | N.JSXFragment>(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseLiteral(this.state.value, \"JSXText\"));\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, closingElement);\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(\n          JsxErrors.UnwrappedAdjacentJSXElements,\n          this.state.startLoc,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement | N.JSXFragment {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { NameType, Scope } from \"../../util/scope.ts\";\nimport { BindingFlag, ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\nimport { Errors } from \"../../parse-error.ts\";\n\nconst enum TsNameType {\n  Types = 1 << 0,\n  // enums (which are also in .types)\n  Enums = 1 << 1,\n  // const enums (which are also in .enums and .types)\n  ConstEnums = 1 << 2,\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  Classes = 1 << 3,\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  ExportOnlyBindings = 1 << 4,\n}\n\nclass TypeScriptScope extends Scope {\n  tsNames: Map<string, TsNameType> = new Map();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlag): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: ScopeFlag): void {\n    if (flags === ScopeFlag.TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags === ScopeFlag.TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    if (bindingType & BindingFlag.FLAG_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, loc, {\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    let type = scope.tsNames.get(name) || 0;\n\n    if (bindingType & BindingFlag.FLAG_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.tsNames.set(name, type | TsNameType.ExportOnlyBindings);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BindingFlag.KIND_TYPE) {\n      if (!(bindingType & BindingFlag.KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      type = type | TsNameType.Types;\n    }\n    if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n      type = type | TsNameType.Enums;\n    }\n    if (bindingType & BindingFlag.FLAG_TS_CONST_ENUM) {\n      type = type | TsNameType.ConstEnums;\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS) {\n      type = type | TsNameType.Classes;\n    }\n    if (type) scope.tsNames.set(name, type);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    const type = scope.tsNames.get(name);\n    if ((type & TsNameType.Enums) > 0) {\n      if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BindingFlag.FLAG_TS_CONST_ENUM);\n        const wasConst = (type & TsNameType.ConstEnums) > 0;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (\n      bindingType & BindingFlag.FLAG_CLASS &&\n      (type & TsNameType.Classes) > 0\n    ) {\n      if (scope.names.get(name) & NameType.Lexical) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BindingFlag.KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BindingFlag.KIND_TYPE && (type & TsNameType.Types) > 0) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      const type = scope.tsNames.get(name);\n      if (\n        (type & TsNameType.Types) > 0 ||\n        (type & TsNameType.ExportOnlyBindings) > 0\n      ) {\n        return;\n      }\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n", "// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport const enum ParamKind {\n  // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  // track [In] production parameter\n  PARAM_IN = 0b1000,\n}\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (\n    (isAsync ? ParamKind.PARAM_AWAIT : 0) |\n    (isGenerator ? ParamKind.PARAM_YIELD : 0)\n  );\n}\n", "import type { OptionFlags, Options } from \"../options.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type { PluginsMap } from \"./index.ts\";\nimport type ScopeHandler from \"../util/scope.ts\";\nimport type ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport type ClassScopeHandler from \"../util/class-scope.ts\";\nimport type ProductionParameterHandler from \"../util/production-parameter.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings.ts\";\nimport type * as N from \"../types.ts\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare optionFlags: OptionFlags;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  declare startIndex: number;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n  // Comment store for Program.comments\n  declare comments: Array<N.Comment>;\n\n  sourceToOffsetPos(sourcePos: number) {\n    return sourcePos + this.startIndex;\n  }\n\n  offsetToSourcePos(offsetPos: number) {\n    return offsetPos - this.startIndex;\n  }\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base.ts\";\nimport type { Comment, Node, Identifier } from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node.ts\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    const { commentsLen } = this.state;\n    if (this.comments.length !== commentsLen) {\n      this.comments.length = commentsLen;\n    }\n    this.comments.push(comment);\n    this.state.commentsLen++;\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (\n        this.input.charCodeAt(this.offsetToSourcePos(commentStart) - 1) ===\n        charCodes.comma\n      ) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          case \"TSEnumDeclaration\":\n            if (!process.env.BABEL_8_BREAKING) {\n              adjustInnerComments(node, node.members, commentWS);\n            } else {\n              setInnerComments(node, comments);\n            }\n            break;\n          case \"TSEnumBody\":\n            adjustInnerComments(node, node.members, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *​/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *​/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *​/` as\n   * inner comments. So `/* 1 *​/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node leading comments, assuming that `node` is a\n   * single-token node. Used in import phase modifiers parsing. We parse\n   * `module` in `import module foo from ...` as an identifier but may\n   * reinterpret it into a phase modifier later. In this case the identifier is\n   * not part of the AST and we should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * import /* 1 *​/ module a from \"a\";\n   * ```\n   * the comment whitespace `/* 1 *​/` has trailing node Identifier(module). When\n   * we see that `module` is not a default import binding, we mark `/* 1 *​/` as\n   * inner comments of the ImportDeclaration. So `/* 1 *​/` should be detached from\n   * the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousIdentifierLeadingComments(node: Identifier) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import type { Options } from \"../options.ts\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location.ts\";\n\nimport { types as ct, type TokContext } from \"./context.ts\";\nimport { tt, type TokenType } from \"./types.ts\";\nimport type { Errors } from \"../parse-error.ts\";\nimport type { ParseError } from \"../parse-error.ts\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport const enum LoopLabelKind {\n  Loop = 1,\n  Switch = 2,\n}\n\ndeclare const bit: import(\"../../../../scripts/babel-plugin-bit-decorator/types.d.ts\").BitDecorator<State>;\n\nexport default class State {\n  @bit.storage flags: number;\n\n  @bit accessor strict = false;\n\n  startIndex: number;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({\n    strictMode,\n    sourceType,\n    startIndex,\n    startLine,\n    startColumn,\n  }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n          ? true\n          : sourceType === \"module\";\n\n    this.startIndex = startIndex;\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(\n      startLine,\n      startColumn,\n      startIndex,\n    );\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  @bit accessor maybeInArrowParameters = false;\n  @bit accessor inType = false;\n  @bit accessor noAnonFunctionType = false;\n  @bit accessor hasFlowComment = false;\n  @bit accessor isAmbientContext = false;\n  @bit accessor inAbstractClass = false;\n  @bit accessor inDisallowConditionalTypesContext = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  @bit accessor soloAwait = false;\n  @bit accessor inFSharpPipelineDirectBody = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: LoopLabelKind;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  commentsLen = 0;\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n\n  // Used to track whether a JSX element is allowed to form\n  @bit accessor canStartJSXElement = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  @bit accessor containsEsc = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  @bit accessor hasTopLevelAwait = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  /**\n   * When we add a new property, we must manually update the `clone` method\n   * @see State#clone\n   */\n\n  curPosition(): Position {\n    return new Position(\n      this.curLine,\n      this.pos - this.lineStart,\n      this.pos + this.startIndex,\n    );\n  }\n\n  clone(): State {\n    const state = new State();\n    state.flags = this.flags;\n    state.startIndex = this.startIndex;\n    state.curLine = this.curLine;\n    state.lineStart = this.lineStart;\n    state.startLoc = this.startLoc;\n    state.endLoc = this.endLoc;\n    state.errors = this.errors.slice();\n    state.potentialArrowAt = this.potentialArrowAt;\n    state.noArrowAt = this.noArrowAt.slice();\n    state.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice();\n    state.topicContext = this.topicContext;\n    state.labels = this.labels.slice();\n    state.commentsLen = this.commentsLen;\n    state.commentStack = this.commentStack.slice();\n    state.pos = this.pos;\n    state.type = this.type;\n    state.value = this.value;\n    state.start = this.start;\n    state.end = this.end;\n    state.lastTokEndLoc = this.lastTokEndLoc;\n    state.lastTokStartLoc = this.lastTokStartLoc;\n    state.context = this.context.slice();\n    state.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos;\n    state.strictErrors = this.strictErrors;\n    state.tokensLength = this.tokensLength;\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: State[\"curPosition\"];\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n", "// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = /^[0-7]+/.exec(input.slice(startPos, pos + 2));\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n          ? isAllowedNumericSeparatorSibling.oct\n          : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport { OptionFlags, type Options } from \"../options.ts\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments.ts\";\nimport type * as N from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier.ts\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types.ts\";\nimport type { TokContext } from \"./context.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n  skipWhiteSpaceInLine,\n} from \"../util/whitespace.ts\";\nimport State from \"./state.ts\";\nimport type { LookaheadState, DeferredStrictError } from \"./state.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { Node } from \"../types.ts\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings.ts\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    const startIndex = state.startIndex || 0;\n    this.type = state.type;\n    this.value = state.value;\n    this.start = startIndex + state.start;\n    this.end = startIndex + state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.comments = [];\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.optionFlags & OptionFlags.Tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.lookaheadCharCodeSince(this.state.pos);\n  }\n\n  lookaheadCharCodeSince(pos: number): number {\n    return this.input.charCodeAt(this.nextTokenStartSince(pos));\n  }\n\n  /**\n   * Similar to nextToken, but it will stop at line break when it is seen before the next token\n   *\n   * @returns {number} position of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  nextTokenInLineStart(): number {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n\n  nextTokenInLineStartSince(pos: number): number {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input)\n      ? skipWhiteSpaceInLine.lastIndex\n      : pos;\n  }\n\n  /**\n   * Similar to lookaheadCharCode, but it will return the char code of line break if it is\n   * seen before the next token\n   *\n   * @returns {number} char code of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  lookaheadInLineCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, at),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start: this.sourceToOffsetPos(start),\n      end: this.sourceToOffsetPos(end + commentEnd.length),\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.optionFlags & OptionFlags.Tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start: this.sourceToOffsetPos(start),\n      end: this.sourceToOffsetPos(end),\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.optionFlags & OptionFlags.Tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments: N.Comment[] =\n      this.optionFlags & OptionFlags.AttachComment ? [] : null;\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments?.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments?.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.optionFlags & OptionFlags.AnnexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments?.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.optionFlags & OptionFlags.AnnexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments?.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments?.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: this.sourceToOffsetPos(spaceStart),\n        end: this.sourceToOffsetPos(end),\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(\n        Errors.UnexpectedDigitAfterHash,\n        this.state.curPosition(),\n      );\n    }\n\n    if (\n      !process.env.BABEL_8_BREAKING &&\n      (next === charCodes.leftCurlyBrace ||\n        (next === charCodes.leftSquareBracket &&\n          this.hasPlugin(\"recordAndTuple\")))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\"\n      ) {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          this.state.curPosition(),\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n            this.state.curPosition(),\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n            this.state.curPosition(),\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              this.state.curPosition(),\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              this.state.curPosition(),\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      Errors.InvalidOrUnexpectedToken,\n      this.state.curPosition(),\n      {\n        unexpected: String.fromCodePoint(code),\n      },\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(\n          Errors.UnterminatedRegExp,\n          createPositionWithColumnOffset(startLoc, 1),\n        );\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(\n          Errors.UnterminatedRegExp,\n          createPositionWithColumnOffset(startLoc, 1),\n        );\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, nextPos());\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, nextPos());\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(\n        Errors.InvalidDigit,\n        // Numeric literals can't have newlines, so this is safe to do.\n        createPositionWithColumnOffset(startLoc, 2),\n        {\n          radix,\n        },\n      );\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, startLoc);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, this.state.curPosition());\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, startLoc);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(\n            Errors.ZeroDigitNumericSeparator,\n            createPositionWithColumnOffset(startLoc, underscorePos),\n          );\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, startLoc);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, startLoc);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (!process.env.BABEL_8_BREAKING && next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, startLoc);\n      }\n      ++this.state.pos;\n      // eslint-disable-next-line no-var\n      var isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (!process.env.BABEL_8_BREAKING && isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        this.sourceToOffsetPos(firstInvalidLoc.pos),\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(toParseError: DeferredStrictError, at: Position) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, at);\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, this.state.curPosition());\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, escStart);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, this.state.startLoc, {\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * The return type is marked as `never` for simplicity, as error recovery\n   * will create types in an invalid AST shape.\n   */\n  raise<ErrorDetails = object>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    at: Position | Undone<Node>,\n    details: ErrorDetails = {} as ErrorDetails,\n  ): ParseError<ErrorDetails> {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError(loc, details);\n\n    if (!(this.optionFlags & OptionFlags.ErrorRecovery)) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    at: Position | Undone<Node>,\n    details: ErrorDetails = {} as ErrorDetails,\n  ): ParseError<ErrorDetails> | never {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return (errors[i] = toParseError(loc, details));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, at, details);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(\n      Errors.UnexpectedToken,\n      loc != null ? loc : this.state.startLoc,\n      {\n        expected: type ? tokenLabelName(type) : null,\n      },\n    );\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(\n      Errors.MissingPlugin,\n      loc != null ? loc : this.state.startLoc,\n      {\n        missingPlugin: [pluginName],\n      },\n    );\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, this.state.startLoc, {\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<object>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, buildPosition(pos, lineStart, curLine));\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!(this.optionFlags & OptionFlags.ErrorRecovery)) return false;\n\n      this.raise(Errors.InvalidDigit, buildPosition(pos, lineStart, curLine), {\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(\n        Errors.StrictNumericEscape,\n        buildPosition(pos, lineStart, curLine),\n      );\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(\n        Errors.UnterminatedString, // Report the error at the string quote\n        buildPosition(pos - 1, lineStart, curLine),\n      );\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(\n        Errors.UnterminatedTemplate,\n        buildPosition(pos, lineStart, curLine),\n      );\n    },\n  };\n}\n", "import { ClassElementType } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementType> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementType,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & ClassElementType.KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & ClassElementType.FLAG_STATIC;\n        const newStatic = elementType & ClassElementType.FLAG_STATIC;\n\n        const oldKind = accessor & ClassElementType.KIND_ACCESSOR;\n        const newKind = elementType & ClassElementType.KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error.ts\";\nimport type { Position } from \"./location.ts\";\nimport type { Node } from \"../types.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\nimport type { Undone } from \"../parser/node.ts\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M | V8 Expression Scope design docs}\n */\n\nconst enum ExpressionScopeType {\n  kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3,\n}\n\nclass ExpressionScope {\n  declare type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = ExpressionScopeType.kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration ||\n      this.type === ExpressionScopeType.kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === ExpressionScopeType.kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<object>, Position]> =\n    new Map();\n  constructor(\n    type:\n      | ExpressionScopeType.kMaybeArrowParameterDeclaration\n      | ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  ) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<object>,\n    at: Position,\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    node: Undone<Node>,\n  ): void {\n    const origin = node.loc.start;\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == ExpressionScopeType.kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<object>,\n    node: Node,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = node.loc.start;\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError(at: Position): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (\n        scope.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration\n      ) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, at);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, loc);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(ExpressionScopeType.kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeArrowParameterDeclaration,\n  );\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  );\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "import type { Position } from \"../util/location.ts\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport Tokenizer from \"../tokenizer/index.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type {\n  EstreePropertyDefinition,\n  Node,\n  ObjectMethod,\n  ObjectProperty,\n  PrivateName,\n} from \"../types.d.ts\";\nimport { hasNewLine } from \"../util/whitespace.ts\";\nimport { isIdentifierChar } from \"../util/identifier.ts\";\nimport ClassScopeHandler from \"../util/class-scope.ts\";\nimport ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport { ScopeFlag } from \"../util/scopeflags.ts\";\nimport ProductionParameterHandler, {\n  ParamKind,\n} from \"../util/production-parameter.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type ScopeHandler from \"../util/scope.ts\";\nimport { OptionFlags } from \"../options.ts\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): new (...args: any) => ScopeHandler;\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    let { extra } = node;\n    if (extra == null) {\n      extra = {};\n      node.extra = extra;\n    }\n\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, this.state.startLoc);\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return hasNewLine(\n      this.input,\n      this.offsetToSourcePos(this.state.lastTokEndLoc.index),\n      this.state.start,\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return hasNewLine(this.input, this.state.end, this.nextTokenStart());\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, this.state.lastTokEndLoc);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    if (!this.eat(type)) {\n      this.unexpected(loc, type);\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        // eslint-disable-next-line @typescript-eslint/only-throw-error\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, doubleProtoLoc);\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): node is PrivateName {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: PrivateName): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): node is ObjectMethod {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = ParamKind.PARAM;\n    if (this.inModule) {\n      paramFlags |= ParamKind.PARAM_AWAIT;\n    }\n    if (this.optionFlags & OptionFlags.AllowYieldOutsideFunction) {\n      paramFlags |= ParamKind.PARAM_YIELD;\n    }\n    this.scope.enter(ScopeFlag.PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to null\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKeyLoc**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n *   It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import UtilParser from \"./util.ts\";\nimport { SourceLocation, type Position } from \"../util/location.ts\";\nimport type {\n  Comment,\n  Node as NodeType,\n  NodeBase,\n  EstreeLiteral,\n  Identifier,\n  Placeholder,\n  StringLiteral,\n} from \"../types.ts\";\nimport { OptionFlags } from \"../options.ts\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: UtilParser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.optionFlags & OptionFlags.Ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType = never>(): Undone<T> {\n    const loc = this.state.startLoc;\n    return new Node(this, loc.index, loc) as unknown as Undone<T>;\n  }\n\n  startNodeAt<T extends NodeType = never>(loc: Position): Undone<T> {\n    return new Node(this, loc.index, loc) as unknown as Undone<T>;\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType = never>(\n    type: Undone<NodeType>,\n  ): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    (node as T).type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.optionFlags & OptionFlags.Ranges) node.range[1] = endLoc.index;\n    if (this.optionFlags & OptionFlags.AttachComment) {\n      this.processComment(node as T);\n    }\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.optionFlags & OptionFlags.Ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.optionFlags & OptionFlags.Ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n\n  castNodeTo<T extends NodeType[\"type\"]>(\n    node: NodeType,\n    type: T,\n  ): Extract<NodeType, { type: T }> {\n    node.type = type;\n    return node as Extract<NodeType, { type: T }>;\n  }\n\n  cloneIdentifier<T extends Identifier | Placeholder>(node: T): T {\n    // We don't need to clone `typeAnnotations` and `optional`: because\n    // cloneIdentifier is only used in object shorthand and named import/export.\n    // Neither of them allow type annotations after the identifier or optional identifier\n    const { type, start, end, loc, range, name } = node;\n    const cloned = Object.create(NodePrototype);\n    cloned.type = type;\n    cloned.start = start;\n    cloned.end = end;\n    cloned.loc = loc;\n    cloned.range = range;\n    cloned.name = name;\n    if (node.extra) cloned.extra = node.extra;\n    return cloned;\n  }\n\n  cloneStringLiteral<T extends StringLiteral | EstreeLiteral | Placeholder>(\n    node: T,\n  ): T {\n    const { type, start, end, loc, range, extra } = node;\n    const cloned = Object.create(NodePrototype);\n    cloned.type = type;\n    cloned.start = start;\n    cloned.end = end;\n    cloned.loc = loc;\n    cloned.range = range;\n    cloned.extra = extra;\n    cloned.value = (node as StringLiteral).value;\n    return cloned;\n  }\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types.ts\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayPattern,\n  AssignmentProperty,\n  Assignable,\n} from \"../types.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier.ts\";\nimport { NodeUtils, type Undone } from \"./node.ts\";\nimport { BindingFlag } from \"../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"./util.ts\";\nimport { Errors, type LValAncestor } from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): void;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): asserts node is Assignable {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            node,\n          );\n        } else if (\n          parenthesized.type !== \"MemberExpression\" &&\n          !this.isOptionalMemberExpression(parenthesized)\n        ) {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, node);\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, node);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        this.castNodeTo(node, \"ObjectPattern\");\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            (prop as Node).type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, node.extra.trailingCommaLoc);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        this.castNodeTo(node, \"ArrayPattern\");\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, node.left.loc.end);\n        }\n\n        this.castNodeTo(node, \"AssignmentPattern\");\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        prop.key,\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      this.castNodeTo(prop, \"RestElement\");\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, prop);\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: (Expression | SpreadElement | RestElement | null)[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      this.toAssignableListItem(exprList, i, isLHS);\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, elt);\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, trailingCommaLoc);\n        }\n      }\n    }\n  }\n\n  toAssignableListItem(\n    exprList: (Expression | SpreadElement | RestElement)[],\n    index: number,\n    isLHS: boolean,\n  ): void {\n    const node = exprList[index];\n    if (node.type === \"SpreadElement\") {\n      this.castNodeTo(node, \"RestElement\");\n      const arg = node.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ true);\n      this.toAssignable(arg, isLHS);\n    } else {\n      this.toAssignable(node, isLHS);\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList:\n      | ReadonlyArray<Expression | SpreadElement>\n      | ReadonlyArray<Expression | RestElement>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ):\n    | ReadonlyArray<Expression | SpreadElement>\n    | ReadonlyArray<Expression | RestElement> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList:\n      | ReadonlyArray<Expression | SpreadElement>\n      | ReadonlyArray<Expression | RestElement>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: (typeof charCodes)[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        let rest: Pattern = this.parseRestBinding();\n        if (\n          (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"flow\")) ||\n          flags & ParseBindingListFlags.IS_FUNCTION_PARAMS\n        ) {\n          rest = this.parseFunctionParamType(rest);\n        }\n        elts.push(rest);\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (flags & ParseBindingListFlags.IS_FUNCTION_PARAMS) {\n          if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n            this.raise(\n              Errors.UnsupportedParameterDecorator,\n              this.state.startLoc,\n            );\n          }\n          // invariant: hasPlugin(\"decorators-legacy\")\n          while (this.match(tt.at)) {\n            decorators.push(this.parseDecorator());\n          }\n        }\n        elts.push(this.parseBindingElement(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): AssignmentProperty | RestElement {\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(this.startNode());\n    }\n\n    const prop = this.startNode<AssignmentProperty>();\n    if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseBindingElement(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    if (\n      (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"flow\")) ||\n      flags & ParseBindingListFlags.IS_FUNCTION_PARAMS\n    ) {\n      this.parseFunctionParamType(left);\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n      this.resetStartLocationFromNode(left, decorators[0]);\n    }\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseFunctionParamType(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingFlag,\n  ): string | boolean | [string, boolean] {\n    switch (type) {\n      case \"AssignmentPattern\":\n        return \"left\";\n      case \"RestElement\":\n        return \"argument\";\n      case \"ObjectProperty\":\n        return \"value\";\n      case \"ParenthesizedExpression\":\n        return \"expression\";\n      case \"ArrayPattern\":\n        return \"elements\";\n      case \"ObjectPattern\":\n        return \"properties\";\n    }\n    return false;\n  }\n\n  // Overridden by the estree plugin\n  isOptionalMemberExpression(expression: Node): boolean {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param ancestor\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BindingFlag.TYPE_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression:\n      | Expression\n      | ObjectMember\n      | RestElement\n      | Pattern\n      | TSParameterProperty,\n    ancestor: LValAncestor,\n    binding: BindingFlag = BindingFlag.TYPE_NONE,\n    checkClashes: Set<string> | false = false,\n    strictModeChanged: boolean = false,\n    hasParenthesizedAncestor: boolean = false,\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    const isOptionalMemberExpression =\n      this.isOptionalMemberExpression(expression);\n\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, expression, {\n            ancestor,\n          });\n        }\n      }\n\n      if (binding !== BindingFlag.TYPE_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, expression);\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n\n      const { name } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, expression);\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BindingFlag.TYPE_NONE\n          ? Errors.InvalidLhs\n          : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, expression, { ancestor });\n      return;\n    }\n\n    let key: string, isParenthesizedExpression: boolean;\n    if (typeof validity === \"string\") {\n      key = validity;\n      isParenthesizedExpression = type === \"ParenthesizedExpression\";\n    } else {\n      [key, isParenthesizedExpression] = validity;\n    }\n\n    const nextAncestor =\n      type === \"ArrayPattern\" || type === \"ObjectPattern\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    const val = expression[key];\n    if (Array.isArray(val)) {\n      for (const child of val) {\n        if (child) {\n          this.checkLVal(\n            child,\n            nextAncestor,\n            binding,\n            checkClashes,\n            strictModeChanged,\n            isParenthesizedExpression,\n          );\n        }\n      }\n    } else if (val) {\n      this.checkLVal(\n        val,\n        nextAncestor,\n        binding,\n        checkClashes,\n        strictModeChanged,\n        isParenthesizedExpression,\n      );\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingFlag,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BindingFlag.TYPE_NONE) {\n        this.raise(Errors.StrictEvalArguments, at, { referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, at, {\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BindingFlag.FLAG_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, at);\n    }\n\n    if (!(bindingType & BindingFlag.TYPE_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingFlag) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, node);\n    }\n  }\n\n  checkCommaAfterRest(\n    close: (typeof charCodes)[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      this.state.startLoc,\n    );\n\n    return true;\n  }\n}\n", "import type State from \"../../tokenizer/state.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../../util/location.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport { ScopeFlag, BindingFlag } from \"../../util/scopeflags.ts\";\nimport TypeScriptScopeHandler from \"./scope.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { ParamKind } from \"../../util/production-parameter.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\nimport type { Pattern } from \"../../types.ts\";\nimport type { ClassWithMixin, IJSXParserMixin } from \"../jsx/index.ts\";\nimport { ParseBindingListFlags } from \"../../parser/lval.ts\";\nimport { OptionFlags } from \"../../options.ts\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  AccessorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccessorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list can only include identifiers or qualified-names with optional type arguments.`,\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccessorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccessorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccessorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nfunction tsIsEntityName(\n  node: N.Expression,\n): node is N.MemberExpression | N.Identifier | N.TsInstantiationExpression {\n  if (node.extra?.parenthesized) {\n    return false;\n  }\n  switch (node.type) {\n    case \"Identifier\":\n      return true;\n    case \"MemberExpression\":\n      return !node.computed && tsIsEntityName(node.object);\n    case \"TSInstantiationExpression\":\n      return tsIsEntityName(node.expression);\n    default:\n      return false;\n  }\n}\n\nexport const enum tsParseEntityNameFlags {\n  NONE = 0b00,\n  ALLOW_RESERVED_WORDS = 0b01,\n  LEADING_THIS_AS_IDENTIFIER = 0b10,\n}\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): new (...args: any) => TypeScriptScopeHandler {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        this.match(tt.bracketL) ||\n        this.match(tt.braceL) ||\n        this.match(tt.star) ||\n        this.match(tt.ellipsis) ||\n        this.match(tt.privateName) ||\n        this.isLiteralPropertyName()\n      );\n    }\n\n    tsNextTokenOnSameLineAndCanFollowModifier() {\n      this.next();\n      if (this.hasPrecedingLineBreak()) {\n        return false;\n      }\n      return this.tsTokenCanFollowModifier();\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      if (this.match(tt._static)) {\n        this.next();\n        return this.tsTokenCanFollowModifier();\n      }\n      return this.tsNextTokenOnSameLineAndCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.includes(modifier)) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, loc, {\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, loc, {\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, startLoc, {\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, startLoc, { modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwn(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, startLoc, { modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, startLoc, {\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined {\n      const result: T[] = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStartLoc.index;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, this.state.startLoc);\n        if (process.env.BABEL_8_BREAKING) {\n          // Consume as an non-conditional type so that we can recover from this error\n          node.argument = this.tsParseNonConditionalType() as any;\n        } else {\n          node.argument = super.parseExprAtom() as any;\n        }\n      } else {\n        if (process.env.BABEL_8_BREAKING) {\n          node.argument = this.tsParseLiteralTypeNode();\n        } else {\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          node.argument = this.parseStringLiteral(this.state.value);\n        }\n      }\n      if (this.eat(tt.comma)) {\n        node.options = this.tsParseImportTypeOptions();\n      } else {\n        node.options = null;\n      }\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName(\n          tsParseEntityNameFlags.ALLOW_RESERVED_WORDS |\n            tsParseEntityNameFlags.LEADING_THIS_AS_IDENTIFIER,\n        );\n      }\n      if (this.match(tt.lt)) {\n        if (process.env.BABEL_8_BREAKING) {\n          node.typeArguments = this.tsParseTypeArguments();\n        } else {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseImportTypeOptions(): N.ObjectExpression {\n      const node = this.startNode<N.ObjectExpression>();\n      this.expect(tt.braceL);\n      const withProperty = this.startNode<N.ObjectProperty>();\n      if (this.isContextual(tt._with)) {\n        withProperty.method = false;\n        withProperty.key = this.parseIdentifier(true);\n        withProperty.computed = false;\n        withProperty.shorthand = false;\n      } else {\n        this.unexpected(null, tt._with);\n      }\n      this.expect(tt.colon);\n      withProperty.value = this.tsParseImportTypeWithPropertyValue();\n      node.properties = [this.finishObjectProperty(withProperty)];\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"ObjectExpression\");\n    }\n\n    tsParseImportTypeWithPropertyValue(): N.ObjectExpression {\n      const node = this.startNode<N.ObjectExpression>();\n      const properties = [];\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        const type = this.state.type;\n        if (tokenIsIdentifier(type) || type === tt.string) {\n          properties.push(super.parsePropertyDefinition(null));\n        } else {\n          this.unexpected();\n        }\n        this.eat(tt.comma);\n      }\n      node.properties = properties;\n      this.next(); // eat }\n      return this.finishNode(node, \"ObjectExpression\");\n    }\n\n    tsParseEntityName(flags: tsParseEntityNameFlags): N.TsEntityName {\n      let entity: N.TsEntityName;\n      if (\n        flags & tsParseEntityNameFlags.ALLOW_RESERVED_WORDS &&\n        this.match(tt._this)\n      ) {\n        if (flags & tsParseEntityNameFlags.LEADING_THIS_AS_IDENTIFIER) {\n          entity = this.parseIdentifier(true);\n        } else {\n          const node = this.startNode<N.ThisExpression>();\n          this.next();\n          entity = this.finishNode(node, \"ThisExpression\");\n        }\n      } else {\n        entity = this.parseIdentifier(\n          !!(flags & tsParseEntityNameFlags.ALLOW_RESERVED_WORDS),\n        );\n      }\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(\n          !!(flags & tsParseEntityNameFlags.ALLOW_RESERVED_WORDS),\n        );\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName(\n        tsParseEntityNameFlags.ALLOW_RESERVED_WORDS,\n      );\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        if (process.env.BABEL_8_BREAKING) {\n          node.typeArguments = this.tsParseTypeArguments();\n        } else {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        if (process.env.BABEL_8_BREAKING) {\n          node.exprName = this.tsParseEntityName(\n            tsParseEntityNameFlags.ALLOW_RESERVED_WORDS,\n          );\n        } else {\n          node.exprName = this.tsParseEntityName(\n            tsParseEntityNameFlags.ALLOW_RESERVED_WORDS |\n              tsParseEntityNameFlags.LEADING_THIS_AS_IDENTIFIER,\n          );\n        }\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        if (process.env.BABEL_8_BREAKING) {\n          node.typeArguments = this.tsParseTypeArguments();\n        } else {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, node);\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      const list = super.parseBindingList(\n        tt.parenR,\n        charCodes.rightParenthesis,\n        ParseBindingListFlags.IS_FUNCTION_PARAMS,\n      );\n      for (const pattern of list) {\n        const { type } = pattern;\n        if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n          this.raise(TSErrors.UnsupportedSignatureParameterKind, pattern, {\n            type,\n          });\n        }\n      }\n      return list as Exclude<\n        (typeof list)[0],\n        N.AssignmentPattern | N.TSParameterProperty\n      >[];\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: Undone<N.TsPropertySignature | N.TsMethodSignature>,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, node);\n        }\n        const method = node as Undone<N.TsMethodSignature>;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(\n            TSErrors.AccessorCannotHaveTypeParameters,\n            this.state.curPosition(),\n          );\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, this.state.curPosition());\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(\n                TSErrors.AccessorCannotDeclareThisParameter,\n                this.state.curPosition(),\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, this.state.curPosition());\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                TSErrors.AccessorCannotDeclareThisParameter,\n                this.state.curPosition(),\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                TSErrors.SetAccessorCannotHaveOptionalParameter,\n                this.state.curPosition(),\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                TSErrors.SetAccessorCannotHaveRestParameter,\n                this.state.curPosition(),\n              );\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(\n              TSErrors.SetAccessorCannotHaveReturnType,\n              method[returnTypeKey],\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property = node as Undone<N.TsPropertySignature>;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n        // Allow < here so that we can recover from get key<T> later\n        if (!this.match(tt.parenL) && !this.match(tt.lt)) {\n          this.unexpected(null, tt.parenL);\n        }\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      if (process.env.BABEL_8_BREAKING) {\n        node.key = this.tsParseTypeParameterName() as N.Identifier;\n        node.constraint = this.tsExpectThenParseType(tt._in);\n      } else {\n        const typeParameter = this.startNode<N.TsTypeParameter>();\n        typeParameter.name = this.tsParseTypeParameterName();\n        typeParameter.constraint = this.tsExpectThenParseType(tt._in);\n        // @ts-expect-error for Babel 7\n        node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      }\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, elementNode);\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const restStartLoc = this.state.startLoc;\n\n      const rest = this.eat(tt.ellipsis);\n      const { startLoc } = this.state;\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAt<N.TsNamedTupleMember>(startLoc);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(\n              TSErrors.TupleOptionalAfterType,\n              this.state.lastTokStartLoc,\n            );\n          }\n        } else {\n          labeledNode = this.startNodeAt<N.TsNamedTupleMember>(startLoc);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, type);\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAt<N.TsOptionalType>(startLoc);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(restStartLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      switch (this.state.type) {\n        case tt.num:\n        case tt.bigint:\n        case tt.string:\n        case tt._true:\n        case tt._false:\n          // For compatibility to estree we cannot call parseLiteral directly here\n          // @ts-expect-error refine typings\n          node.literal = super.parseExprAtom();\n          break;\n        default:\n          this.unexpected();\n      }\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsTemplateLiteralType | N.TsLiteralType {\n      if (process.env.BABEL_8_BREAKING) {\n        const startLoc = this.state.startLoc;\n        let curElt = this.parseTemplateElement(false);\n        const quasis = [curElt];\n        if (curElt.tail) {\n          const node = this.startNodeAt<N.TsLiteralType>(startLoc);\n          const literal = this.startNodeAt<N.TemplateLiteral>(startLoc);\n          literal.expressions = [];\n          literal.quasis = quasis;\n          node.literal = this.finishNode(literal, \"TemplateLiteral\");\n          return this.finishNode(node, \"TSLiteralType\");\n        } else {\n          const substitutions: N.TsType[] = [];\n          while (!curElt.tail) {\n            substitutions.push(this.tsParseType());\n            this.readTemplateContinuation();\n            quasis.push((curElt = this.parseTemplateElement(false)));\n          }\n          const node = this.startNodeAt<N.TsTemplateLiteralType>(startLoc);\n          node.types = substitutions;\n          node.quasis = quasis;\n          return this.finishNode(node, \"TSTemplateLiteralType\");\n        }\n      } else {\n        const node = this.startNode<N.TsLiteralType>();\n        node.literal = super.parseTemplate(false);\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Expression {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (\n              !(this.optionFlags & OptionFlags.CreateParenthesizedExpressions)\n            ) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                  ? \"TSNullKeyword\"\n                  : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      const { startLoc } = this.state;\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAt<N.TsArrayType>(startLoc);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAt<N.TsIndexedAccessType>(startLoc);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: Undone<N.TsTypeOperator>) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, node);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n          ? this.tsParseInferType()\n          : this.tsInAllowConditionalTypesContext(() =>\n              this.tsParseArrayTypeOrHigher(),\n            );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeAnnotation();\n      }\n    }\n\n    tsTryParseType(): N.TsType | undefined {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          Errors.InvalidEscapedReservedWord,\n          this.state.lastTokStartLoc,\n          {\n            reservedWord: \"asserts\",\n          },\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, this.state.startLoc);\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(token: \"extends\"): Array<N.TSInterfaceHeritage>;\n    tsParseHeritageClause(token: \"implements\"): Array<N.TSClassImplements>;\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TSClassImplements> | Array<N.TSInterfaceHeritage> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          if (process.env.BABEL_8_BREAKING) {\n            const expression = super.parseExprSubscripts();\n            if (!tsIsEntityName(expression)) {\n              this.raise(\n                TSErrors.InvalidHeritageClauseType,\n                expression.loc.start,\n                { token },\n              );\n            }\n            const nodeType =\n              token === \"extends\" ? \"TSInterfaceHeritage\" : \"TSClassImplements\";\n            if (expression.type === \"TSInstantiationExpression\") {\n              // @ts-expect-error cast TSInstantiationExpression to TSInterfaceHeritage/TSClassImplements\n              expression.type = nodeType;\n              return expression;\n            }\n            const node = this.startNodeAtNode<\n              N.TSInterfaceHeritage | N.TSClassImplements\n            >(expression);\n            node.expression = expression;\n            // The last element can not form a TSInstantiationExpression because of the bail condition in\n            // `parseSubscript`, in this case we have to parse type arguments again\n            if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n              node.typeArguments = this.tsParseTypeArgumentsInExpression();\n            }\n            return this.finishNode(node, nodeType);\n          } else {\n            const node = this.startNode<\n              N.TSInterfaceHeritage | N.TSClassImplements\n            >();\n            // @ts-expect-error Babel 7 vs Babel 8\n            node.expression = this.tsParseEntityName(\n              tsParseEntityNameFlags.ALLOW_RESERVED_WORDS |\n                tsParseEntityNameFlags.LEADING_THIS_AS_IDENTIFIER,\n            );\n            if (this.match(tt.lt)) {\n              // @ts-expect-error Babel 7 vs Babel 8\n              node.typeParameters = this.tsParseTypeArguments();\n            }\n\n            return this.finishNode(\n              node,\n              // @ts-expect-error Babel 7 vs Babel 8\n              \"TSExpressionWithTypeArguments\",\n            );\n          }\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, originalStartLoc, {\n          token,\n        });\n      }\n\n      return delimitedList as\n        | Array<N.TSClassImplements>\n        | Array<N.TSInterfaceHeritage>;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, this.state.startLoc);\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    // Parse in top level normal context if we are in a JSX context\n    tsInTopLevelContext<T>(cb: () => T): T {\n      if (this.curContext() !== tc.brace) {\n        const oldContext = this.state.context;\n        this.state.context = [oldContext[0]];\n        try {\n          return cb();\n        } finally {\n          this.state.context = oldContext;\n        }\n      } else {\n        return cb();\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      if (this.match(token)) {\n        return this.tsNextThenParseType();\n      }\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsInType(() => {\n        this.expect(token);\n        return this.tsParseType();\n      });\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsInType(() => {\n        this.next();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BindingFlag.TYPE_TS_CONST_ENUM : BindingFlag.TYPE_TS_ENUM,\n      );\n\n      if (process.env.BABEL_8_BREAKING) {\n        node.body = this.tsParseEnumBody();\n      } else {\n        this.expect(tt.braceL);\n        node.members = this.tsParseDelimitedList(\n          \"EnumMembers\",\n          this.tsParseEnumMember.bind(this),\n        );\n        this.expect(tt.braceR);\n      }\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseEnumBody(): N.TsEnumBody {\n      const node = this.startNode<N.TsEnumBody>();\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumBody\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(ScopeFlag.OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = process.env.BABEL_8_BREAKING\n        ? this.tsParseEntityName(tsParseEntityNameFlags.ALLOW_RESERVED_WORDS)\n        : this.parseIdentifier();\n\n      if (\n        process.env.BABEL_8_BREAKING ? node.id.type === \"Identifier\" : !nested\n      ) {\n        // @ts-expect-error checked above\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_NAMESPACE);\n      }\n\n      if (!process.env.BABEL_8_BREAKING && this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.kind = \"global\";\n        if (!process.env.BABEL_8_BREAKING) {\n          node.global = true;\n        }\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.kind = \"module\";\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      maybeDefaultIdentifier?: N.Identifier | null,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      if (!process.env.BABEL_8_BREAKING) {\n        node.isExport = isExport || false;\n      }\n      node.id = maybeDefaultIdentifier || this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_VALUE_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, moduleReference);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(tsParseEntityNameFlags.NONE);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      }\n      this.state = state;\n    }\n\n    tsTryParseDeclare(nany: any) {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let startType = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        startType = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (startType) {\n          case tt._function:\n            nany.declare = true;\n            return super.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* isHangingDeclaration */ false,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to know how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany as Undone<N.ClassDeclaration>,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._enum:\n            return this.tsParseEnumDeclaration(nany, { declare: true });\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          case tt._const:\n          case tt._var:\n            if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n              nany.declare = true;\n              return this.parseVarStatement(\n                nany,\n                kind || this.state.value,\n                true,\n              );\n            }\n\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            return this.tsParseEnumDeclaration(nany, {\n              const: true,\n              declare: true,\n            });\n          case tt._interface: {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true,\n            });\n            if (result) return result;\n          }\n          // fallthrough\n          default:\n            if (tokenIsIdentifier(startType)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n                /* decorators */ null,\n              );\n            }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(ScopeFlag.TS_MODULE);\n            this.prodParam.enter(ParamKind.PARAM);\n            const mod = node;\n            mod.kind = \"global\";\n            if (!process.env.BABEL_8_BREAKING) {\n              node.global = true;\n            }\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ) {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              node.kind = \"module\";\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            node.kind = \"namespace\";\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined {\n      if (!this.match(tt.lt)) return;\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) return;\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES or JSX productions, where the first token\n    // has been created without state.inType. Thus we need to re-scan the lt token.\n    tsParseTypeArgumentsInExpression():\n      | N.TsTypeParameterInstantiation\n      | undefined {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        this.tsInTopLevelContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, node);\n      } else if (!this.state.inType && this.curContext() === tc.brace) {\n        // rescan `>` when we are no longer in type context and JSX parsing context\n        // since it was tokenized when `inType` is `true`.\n        this.reScan_lt_gt();\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseBindingElement(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include decorators/modifiers in range\n      const startLoc = decorators.length\n        ? decorators[0].loc.start\n        : this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, startLoc);\n      }\n\n      const left = this.parseMaybeDefault();\n      if (flags & ParseBindingListFlags.IS_FUNCTION_PARAMS) {\n        this.parseFunctionParamType(left);\n      }\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, pp);\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty): boolean {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, param);\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n            ? \"TSDeclareMethod\"\n            : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, node);\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | N.SpreadElement>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, node.typeAnnotation);\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startLoc,\n              state,\n            );\n            if (process.env.BABEL_8_BREAKING) {\n              result.typeArguments = typeArguments;\n            } else {\n              result.typeParameters = typeArguments;\n            }\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(tt.parenR);\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            if (process.env.BABEL_8_BREAKING) {\n              node.typeArguments = typeArguments;\n            } else {\n              node.typeParameters = typeArguments;\n            }\n\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          if (process.env.BABEL_8_BREAKING) {\n            node.typeArguments = typeArguments;\n          } else {\n            node.typeParameters = typeArguments;\n          }\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (result.type === \"TSInstantiationExpression\") {\n            if (\n              this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis)\n            ) {\n              this.raise(\n                TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n                this.state.startLoc,\n              );\n            }\n            if (!this.match(tt.dot) && !this.match(tt.questionDot)) {\n              // If TSInstantiationExpression is not followed by . / ?.,\n              // it must be the end of a subscript chain. Note that `(` already forms\n              // call expression arguments\n              result.expression = super.stopParseSubscript(base, state);\n            }\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        if (process.env.BABEL_8_BREAKING) {\n          node.typeArguments = callee.typeArguments;\n        } else {\n          node.typeParameters = callee.typeParameters;\n        }\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, this.state.startLoc, {\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(\n          TSErrors.ImportReflectionHasImportType,\n          node.specifiers[0].loc.start,\n        );\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        const ch = this.lookaheadCharCode();\n        return isExport\n          ? ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk\n          : ch !== charCodes.equalsTo;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? \"type\" : \"value\";\n      } else {\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      if (this.match(tt.string)) {\n        node.importKind = \"value\";\n        return super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      let importNode;\n      if (\n        tokenIsIdentifier(this.state.type) &&\n        this.lookaheadCharCode() === charCodes.equalsTo\n      ) {\n        node.importKind = \"value\";\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n        );\n      } else if (this.isContextual(tt._type)) {\n        const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n          node as Undone<N.ImportDeclaration>,\n          /* isExport */ false,\n        );\n        if (this.lookaheadCharCode() === charCodes.equalsTo) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        } else {\n          importNode = super.parseImportSpecifiersAndAfter(\n            node as Undone<N.ImportDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        }\n      } else {\n        importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, importNode);\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        const nodeImportEquals = process.env.BABEL_8_BREAKING\n          ? this.startNode<N.TsImportEqualsDeclaration>()\n          : (node as Undone<N.TsImportEqualsDeclaration>);\n        this.next(); // eat `tt._import`\n        let maybeDefaultIdentifier: N.Identifier | null = null;\n        if (\n          this.isContextual(tt._type) &&\n          // We pass false here, because we are parsing an `import ... =`\n          this.isPotentialImportPhase(/* isExport */ false)\n        ) {\n          maybeDefaultIdentifier = this.parseMaybeImportPhase(\n            nodeImportEquals,\n            /* isExport */ false,\n          );\n        } else {\n          nodeImportEquals.importKind = \"value\";\n        }\n        const declaration = this.tsParseImportEqualsDeclaration(\n          nodeImportEquals,\n          maybeDefaultIdentifier,\n          /* isExport */ true,\n        );\n        if (process.env.BABEL_8_BREAKING) {\n          (node as Undone<N.ExportNamedDeclaration>).attributes = [];\n          (node as Undone<N.ExportNamedDeclaration>).declaration = declaration;\n          (node as Undone<N.ExportNamedDeclaration>).exportKind = \"value\";\n          (node as Undone<N.ExportNamedDeclaration>).source = null;\n          (node as Undone<N.ExportNamedDeclaration>).specifiers = [];\n          return this.finishNode(node, \"ExportNamedDeclaration\");\n        } else {\n          return declaration;\n        }\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        this.sawUnambiguousESM = true;\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.ExportDefaultDeclaration[\"declaration\"] {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, init);\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            init,\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(\n              TSErrors.StaticBlockCannotHaveModifier,\n              this.state.curPosition(),\n            );\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, member);\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, member, {\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, member);\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, member);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, member);\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, member);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, methodOrProp);\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, methodOrProp);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n      node: T,\n      startLoc: Position,\n    ): T | N.TsTypeCastExpression {\n      const newNode = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        (newNode as N.Identifier).optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node as N.Expression;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n          this.state.startLoc,\n        );\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare && declaration.type !== \"TSImportEqualsDeclaration\") {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingFlag,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare\n          ? BindingFlag.TYPE_TS_AMBIENT\n          : BindingFlag.TYPE_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(\n          TSErrors.DeclareClassFieldHasInitializer,\n          this.state.startLoc,\n        );\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(\n          TSErrors.AbstractPropertyHasInitializer,\n          this.state.startLoc,\n          {\n            propertyName:\n              key.type === \"Identifier\" && !node.computed\n                ? key.name\n                : `[${this.input.slice(this.offsetToSourcePos(key.start), this.offsetToSourcePos(key.end))}]`,\n          },\n        );\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, node);\n      }\n\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, node, {\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, node);\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, typeParameters);\n      }\n\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, method, { kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if ((node as N.Node).type === \"MethodDefinition\" && node.body == null) {\n        return;\n      }\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        if (process.env.BABEL_8_BREAKING) {\n          node.superTypeArguments = this.tsParseTypeArgumentsInExpression();\n        } else {\n          node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n        }\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue<T extends N.ObjectMember>(\n      prop: Undone<T>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): T {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      // We need to explicitly annotate 'abort' for microsoft/TypeScript#58170\n      const arrow = this.tryParse((abort: () => never) => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters\n              .params[0] as N.TsTypeParameter;\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(\n                TSErrors.SingleTypeParameterWithoutTrailingComma,\n                createPositionWithColumnOffset(parameter.loc.end, 1),\n                {\n                  typeParameterName: process.env.BABEL_8_BREAKING\n                    ? (parameter.name as N.Identifier).name\n                    : (parameter.name as string),\n                },\n              );\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, node);\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      }\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseFunctionParamType(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              node,\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, node);\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left) as N.Assignable;\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(\n      node: N.ParenthesizedExpression,\n      isLHS: boolean,\n    ): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSInstantiationExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingFlag,\n    ) {\n      switch (type) {\n        // Allow \"typecasts\" to appear on the left of assignment expressions,\n        // because it may be in an arrow function.\n        // e.g. `const f = (foo: number = 0) => foo;`\n        case \"TSTypeCastExpression\":\n          return true;\n        case \"TSParameterProperty\":\n          return \"parameter\";\n        case \"TSNonNullExpression\":\n          return \"expression\";\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n          return (\n            (binding !== BindingFlag.TYPE_NONE || !isUnparenthesizedInAssign) &&\n            ([\"expression\", true] as [string, boolean])\n          );\n        default:\n          return super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      if (this.state.type === tt._this) {\n        return this.parseIdentifier(/* liberal */ true);\n      }\n      return super.parseBindingAtom();\n    }\n\n    parseMaybeDecoratorArguments(\n      expr: N.Expression,\n      startLoc: Position,\n    ): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(\n            expr,\n            startLoc,\n          ) as N.CallExpression;\n          if (process.env.BABEL_8_BREAKING) {\n            call.typeArguments = typeArguments;\n          } else {\n            call.typeParameters = typeArguments;\n          }\n\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr, startLoc);\n    }\n\n    checkCommaAfterRest(\n      close: (typeof charCodes)[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      }\n      return super.checkCommaAfterRest(close);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, node.typeAnnotation);\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableListItem(\n      exprList: (N.Expression | N.SpreadElement | N.RestElement)[],\n      index: number,\n      isLHS: boolean,\n    ): void {\n      const node = exprList[index];\n      if (node.type === \"TSTypeCastExpression\") {\n        exprList[index] = this.typeCastToParameter(node);\n      }\n      super.toAssignableListItem(exprList, index, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Expression {\n      (node.expression as N.Identifier).typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        if (typeArguments) {\n          if (process.env.BABEL_8_BREAKING) {\n            node.typeArguments = typeArguments;\n          } else {\n            node.typeParameters = typeArguments;\n          }\n        }\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const { isAmbientContext: oldIsAmbientContext, strict: oldStrict } =\n        this.state;\n      this.state.isAmbientContext = true;\n      this.state.strict = false;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n        this.state.strict = oldStrict;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, node);\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract || method.type === \"TSAbstractMethodDefinition\") {\n        const hasEstreePlugin = this.hasPlugin(\"estree\");\n        const methodFn = hasEstreePlugin\n          ? // @ts-expect-error estree typings\n            method.value\n          : method;\n        if (methodFn.body) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, method, {\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(this.offsetToSourcePos(key.start), this.offsetToSourcePos(key.end))}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingFlag | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport\n          ? BindingFlag.TYPE_TS_TYPE_IMPORT\n          : BindingFlag.TYPE_TS_VALUE_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          loc,\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = this.cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier\n            ? BindingFlag.TYPE_TS_TYPE_IMPORT\n            : BindingFlag.TYPE_TS_VALUE_IMPORT,\n        );\n      }\n    }\n\n    /**\n     * This hook is defined in the ESTree plugin.\n     * The TS-ESLint always define optional AST properties, here we provide the\n     * default value for such properties immediately after `finishNode` was invoked.\n     *\n     * @param node The AST node finished by finishNode\n     * @returns\n     */\n    fillOptionalPropertiesForTSESLint(node: N.Node): void {\n      switch (node.type) {\n        case \"ExpressionStatement\":\n          node.directive ??= undefined;\n          return;\n        case \"RestElement\":\n          node.value = undefined;\n        /* fallthrough */\n        case \"Identifier\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n        case \"ObjectPattern\":\n          node.decorators ??= [];\n          node.optional ??= false;\n          node.typeAnnotation ??= undefined;\n          return;\n        case \"TSParameterProperty\":\n          node.accessibility ??= undefined;\n          node.decorators ??= [];\n          node.override ??= false;\n          node.readonly ??= false;\n          node.static ??= false;\n          return;\n        case \"TSEmptyBodyFunctionExpression\":\n          node.body = null;\n        /* fallthrough */\n        case \"TSDeclareFunction\":\n        case \"FunctionDeclaration\":\n        case \"FunctionExpression\":\n        case \"ClassMethod\":\n        case \"ClassPrivateMethod\":\n          node.declare ??= false;\n          node.returnType ??= undefined;\n          node.typeParameters ??= undefined;\n          return;\n        case \"Property\":\n          node.optional ??= false;\n          return;\n        case \"TSMethodSignature\":\n        case \"TSPropertySignature\":\n          node.optional ??= false;\n        /* fallthrough */\n        case \"TSIndexSignature\":\n          node.accessibility ??= undefined;\n          node.readonly ??= false;\n          node.static ??= false;\n          return;\n        case \"TSAbstractPropertyDefinition\":\n        case \"PropertyDefinition\":\n        case \"TSAbstractAccessorProperty\":\n        case \"AccessorProperty\":\n          node.declare ??= false;\n          node.definite ??= false;\n          node.readonly ??= false;\n          node.typeAnnotation ??= undefined;\n        /* fallthrough */\n        case \"TSAbstractMethodDefinition\":\n        case \"MethodDefinition\":\n          node.accessibility ??= undefined;\n          node.decorators ??= [];\n          node.override ??= false;\n          node.optional ??= false;\n          return;\n        case \"ClassExpression\":\n          node.id ??= null;\n        /* fallthrough */\n        case \"ClassDeclaration\":\n          node.abstract ??= false;\n          node.declare ??= false;\n          node.decorators ??= [];\n          node.implements ??= [];\n          node.superTypeArguments ??= undefined;\n          node.typeParameters ??= undefined;\n          return;\n        case \"TSTypeAliasDeclaration\":\n        case \"VariableDeclaration\":\n          node.declare ??= false;\n          return;\n        case \"VariableDeclarator\":\n          node.definite ??= false;\n          return;\n        case \"TSEnumDeclaration\":\n          node.const ??= false;\n          node.declare ??= false;\n          return;\n        case \"TSEnumMember\":\n          node.computed ??= false;\n          return;\n        case \"TSImportType\":\n          node.qualifier ??= null;\n          node.options ??= null;\n          if (process.env.BABEL_8_BREAKING) {\n            node.typeArguments ??= null;\n          }\n          return;\n        case \"TSInterfaceDeclaration\":\n          node.declare ??= false;\n          node.extends ??= [];\n          return;\n        case \"TSModuleDeclaration\":\n          node.declare ??= false;\n          node.global ??= node.kind === \"global\";\n          return;\n        case \"TSTypeParameter\":\n          node.const ??= false;\n          node.in ??= false;\n          node.out ??= false;\n          return;\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  }\n  return (\n    expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\"\n  );\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type * as N from \"../types.ts\";\nimport { ParseErrorEnum } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type { BindingFlag } from \"../util/scopeflags.ts\";\nimport type { Position } from \"../util/location.ts\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode<N.Placeholder<T>>();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: Undone<N.Placeholder> | Undone<NodeOf<PlaceholderTypes>>,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      let placeholder = node as unknown as N.Placeholder<T>;\n\n      if (!placeholder.expectedNode || !placeholder.type) {\n        placeholder = this.finishNode(\n          placeholder,\n          \"Placeholder\",\n        ) as unknown as N.Placeholder<T>;\n      }\n\n      placeholder.expectedNode = expectedNode;\n      return placeholder as unknown as MaybePlaceholder<T>;\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.ts                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.ts                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/node.ts                                               *\n     * ============================================================ */\n\n    cloneIdentifier<T extends N.Identifier | N.Placeholder>(node: T): T {\n      const cloned = super.cloneIdentifier(node);\n      if (cloned.type === \"Placeholder\") {\n        cloned.expectedNode = (node as N.Placeholder).expectedNode;\n      }\n      return cloned;\n    }\n\n    cloneStringLiteral<\n      T extends N.EstreeLiteral | N.StringLiteral | N.Placeholder,\n    >(node: T): T {\n      if (node.type === \"Placeholder\") {\n        return this.cloneIdentifier(node) as T;\n      }\n      return super.cloneStringLiteral(node);\n    }\n\n    /* ============================================================ *\n     * parser/lval.ts                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingFlag) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.ts                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: MaybePlaceholder<\"Expression\">,\n    ): MaybePlaceholder<\"Statement\"> {\n      // @ts-expect-error placeholder typings\n      if (expr.type !== \"Placeholder\" || expr.extra?.parenthesized) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      const stmtPlaceholder = node as unknown as N.Placeholder<\"Statement\">;\n      stmtPlaceholder.name = (expr as N.Placeholder).name;\n      return this.finishPlaceholder(stmtPlaceholder, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(\n            PlaceholderErrors.ClassNameIsRequired,\n            this.state.startLoc,\n          );\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node2.specifiers = [];\n        node2.source = null;\n        node2.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node2, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode<N.ExportDefaultSpecifier>();\n      specifier.exported = placeholder;\n      node2.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node2, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      maybeDefaultIdentifier: N.Identifier | null,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      if ((node as N.ExportNamedDeclaration).specifiers?.length) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(\n        node,\n        maybeDefaultIdentifier,\n      );\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (\n        this.state.start >\n        this.offsetToSourcePos(this.state.lastTokEndLoc.index)\n      ) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, this.state.lastTokEndLoc);\n      }\n    }\n  };\n", "import type Parser from \"../parser/index.ts\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          this.castNodeTo(identifier, \"V8IntrinsicIdentifier\");\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser/index.ts\";\nimport type { PluginConfig } from \"./typings.ts\";\n\nexport type Plugin = PluginConfig;\n\nexport type MixinPlugin = (\n  superClass: new (...args: any) => Parser,\n) => new (...args: any) => Parser;\n\nconst PIPELINE_PROPOSALS = process.env.BABEL_8_BREAKING\n  ? [\"fsharp\", \"hack\"]\n  : [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\n\nexport function validatePlugins(pluginsMap: Map<string, any>) {\n  if (pluginsMap.has(\"decorators\")) {\n    if (pluginsMap.has(\"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport =\n      pluginsMap.get(\"decorators\").decoratorsBeforeExport;\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized =\n      pluginsMap.get(\"decorators\").allowCallParenthesized;\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (pluginsMap.has(\"flow\") && pluginsMap.has(\"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (pluginsMap.has(\"placeholders\") && pluginsMap.has(\"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (pluginsMap.has(\"pipelineOperator\")) {\n    const proposal = pluginsMap.get(\"pipelineOperator\").proposal;\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    if (proposal === \"hack\") {\n      if (pluginsMap.has(\"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (pluginsMap.has(\"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = pluginsMap.get(\"pipelineOperator\").topicToken;\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (!process.env.BABEL_8_BREAKING) {\n        if (\n          topicToken === \"#\" &&\n          pluginsMap.get(\"recordAndTuple\")?.syntaxType === \"hash\"\n        ) {\n          throw new Error(\n            `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n          );\n        }\n      }\n    } else if (\n      !process.env.BABEL_8_BREAKING &&\n      proposal === \"smart\" &&\n      pluginsMap.get(\"recordAndTuple\")?.syntaxType === \"hash\"\n    ) {\n      throw new Error(\n        `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"smart\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n      );\n    }\n  }\n\n  if (pluginsMap.has(\"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please migrate to import attributes instead.\",\n      );\n    } else {\n      if (\n        pluginsMap.has(\"deprecatedImportAssert\") ||\n        pluginsMap.has(\"importAssertions\")\n      ) {\n        throw new Error(\n          \"Cannot combine importAssertions, deprecatedImportAssert and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption =\n        pluginsMap.get(\"moduleAttributes\").version;\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n  if (pluginsMap.has(\"importAssertions\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`importAssertions` has been removed in Babel 8, please use import attributes instead.\" +\n          \" To use the non-standard `assert` syntax you can enable the `deprecatedImportAssert` parser plugin.\",\n      );\n    } else if (pluginsMap.has(\"deprecatedImportAssert\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and deprecatedImportAssert plugins.\",\n      );\n    }\n  }\n  if (\n    !pluginsMap.has(\"deprecatedImportAssert\") &&\n    pluginsMap.has(\"importAttributes\") &&\n    pluginsMap.get(\"importAttributes\").deprecatedAssertSyntax\n  ) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"The 'importAttributes' plugin has been removed in Babel 8. If you need to enable support \" +\n          \"for the deprecated `assert` syntax, you can enable the `deprecatedImportAssert` parser plugin.\",\n      );\n    } else {\n      pluginsMap.set(\"deprecatedImportAssert\", {});\n    }\n  }\n\n  if (pluginsMap.has(\"recordAndTuple\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"The 'recordAndTuple' plugin has been removed in Babel 8. Please remove it from your configuration.\",\n      );\n    } else {\n      const syntaxType = pluginsMap.get(\"recordAndTuple\").syntaxType;\n      if (syntaxType != null) {\n        const RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n        if (!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(syntaxType)) {\n          throw new Error(\n            \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n              RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n          );\n        }\n      }\n    }\n  }\n\n  if (\n    pluginsMap.has(\"asyncDoExpressions\") &&\n    !pluginsMap.has(\"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n\n  if (\n    pluginsMap.has(\"optionalChainingAssign\") &&\n    pluginsMap.get(\"optionalChainingAssign\").version !== \"2023-07\"\n  ) {\n    throw new Error(\n      \"The 'optionalChainingAssign' plugin requires a 'version' option,\" +\n        \" representing the last proposal update. Currently, the\" +\n        \" only supported value is '2023-07'.\",\n    );\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (pluginsMap.has(\"decimal\")) {\n      throw new Error(\n        \"The 'decimal' plugin has been removed in Babel 8. Please remove it from your configuration.\",\n      );\n    }\n    if (pluginsMap.has(\"importReflection\")) {\n      throw new Error(\n        \"The 'importReflection' plugin has been removed in Babel 8. Use 'sourcePhaseImports' instead, and \" +\n          \"replace 'import module' with 'import source' in your code.\",\n      );\n    }\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree.ts\";\nimport flow from \"./plugins/flow/index.ts\";\nimport jsx from \"./plugins/jsx/index.ts\";\nimport typescript from \"./plugins/typescript/index.ts\";\nimport placeholders from \"./plugins/placeholders.ts\";\nimport v8intrinsic from \"./plugins/v8intrinsic.ts\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport LValParser from \"./lval.ts\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier.ts\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport * as charCodes from \"charcodes\";\nimport { ScopeFlag, BindingFlag } from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport {\n  UnparenthesizedPipeBodyDescriptions,\n  type UnparenthesizedPipeBodyTypes,\n} from \"../parse-error/pipeline-operator-errors.ts\";\nimport { setInnerComments } from \"./comments.ts\";\nimport type { Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\n\nimport { OptionFlags, type SourceType } from \"../options.ts\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    sawProto: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): boolean {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      prop.shorthand\n    ) {\n      return sawProto;\n    }\n\n    const key = prop.key as\n      | N.Identifier\n      | N.StringLiteral\n      | N.NumericLiteral\n      | N.BigIntLiteral;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, key);\n        return true;\n      }\n      if (sawProto) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, key);\n        }\n      }\n\n      return true;\n    }\n\n    return sawProto;\n  }\n\n  shouldExitDescending(\n    expr: N.Expression | N.PrivateName,\n    potentialArrowAt: number,\n  ): expr is N.ArrowFunctionExpression {\n    return (\n      expr.type === \"ArrowFunctionExpression\" &&\n      this.offsetToSourcePos(expr.start) === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression() as N.Expression & N.ParserOutput;\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.comments;\n    expr.errors = this.state.errors;\n    if (this.optionFlags & OptionFlags.Tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt<N.SequenceExpression>(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(refExpressionErrors: ExpressionErrors) {\n    refExpressionErrors.optionalParametersLoc = this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isYield = this.isContextual(tt._yield);\n    if (isYield) {\n      if (this.prodParam.hasYield) {\n        this.next();\n        let left = this.parseYield(startLoc);\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left as unknown as N.Assignable; // checked a few lines further down\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, this.finishNode(node, \"AssignmentExpression\"));\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (isYield) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousPrefixOrIdentifier()) {\n        this.raiseOverwrite(Errors.YieldNotInGeneratorFunction, startLoc);\n        return this.parseYield(startLoc);\n      }\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt<N.ConditionalExpression>(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, left, {\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            // PrivateName must be followed by `in`, but we have `|>`\n            return left as N.Expression;\n          }\n          this.checkPipelineAtInfixOperator(left as N.Expression, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          op === tt.pipeline &&\n          // @ts-expect-error: Only in Babel 7\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(\n              Errors.UnexpectedAwaitAfterPipelineBody,\n              this.state.startLoc,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(\n            Errors.MixingCoalesceWithLogical,\n            this.state.startLoc,\n          );\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    // PrivateName is followed by `in` and handled by the previous if statement\n    return left as N.Expression;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          // @ts-expect-error: Babel 7 only\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\"\n        ) {\n          return this.withTopicBindingContext(() => {\n            if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n              throw this.raise(Errors.PipeBodyIsTighter, this.state.startLoc);\n            }\n            return this.parseSmartPipelineBodyInStyle(\n              this.parseExprOpBaseRightExpr(op, prec),\n              startLoc,\n            );\n          });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, startLoc, {\n        type: body.type as UnparenthesizedPipeBodyTypes,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, startLoc);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, node.argument);\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.recordAwaitIfAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, node);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, node);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousPrefixOrIdentifier()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, startLoc);\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(\n        updateExpressionNode.argument,\n        this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      );\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, (expr = this.finishNode(node, \"UpdateExpression\")));\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, this.state.startLoc);\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          return this.stopParseSubscript(base, state);\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        return this.stopParseSubscript(base, state);\n      }\n    }\n  }\n\n  stopParseSubscript(\n    this: Parser,\n    base: N.Expression,\n    state: N.ParseSubscriptState,\n  ) {\n    state.stop = true;\n    return base;\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, startLoc);\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as Undone<N.OptionalMemberExpression>).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt<N.BindExpression>(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      (node as Undone<N.OptionalCallExpression>).optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, startLoc);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      this.offsetToSourcePos(base.start) === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, node);\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, arg);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: Undone<N.Node> | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import | N.ImportExpression>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (this.match(tt.parenL)) {\n          if (this.optionFlags & OptionFlags.CreateImportExpressions) {\n            return this.parseImportCall(node as Undone<N.ImportExpression>);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, this.state.lastTokStartLoc);\n          return this.finishNode(node, \"Import\");\n        }\n\n      case tt._this:\n        node = this.startNode<N.ThisExpression>();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            this.startNode<N.ClassExpression>(),\n          ),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode<N.BindExpression>();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, callee);\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, this.state.startLoc, {\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName() as unknown as N.Expression;\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (!process.env.BABEL_8_BREAKING) {\n          if (type === tt.decimal) {\n            return this.parseDecimalLiteral(this.state.value);\n          } else if (type === tt.bracketBarL || type === tt.bracketHashL) {\n            return this.parseArrayLike(\n              this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n              /* canBePattern */ false,\n              /* isTuple */ true,\n            );\n          } else if (type === tt.braceBarL || type === tt.braceHashL) {\n            return this.parseObjectLike(\n              this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n              /* isPattern */ false,\n              /* isRecord */ true,\n            );\n          }\n        }\n\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadInLineCharCode() === charCodes.leftCurlyBrace\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference<\n    T extends N.PipelinePrimaryTopicReference | N.TopicReference,\n  >(\n    node: Undone<T>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): T {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      if (process.env.BABEL_8_BREAKING || pipeProposal === \"hack\") {\n        if (!this.topicReferenceIsAllowedInCurrentContext()) {\n          this.raise(Errors.PipeTopicUnbound, startLoc);\n        }\n\n        // Register the topic reference so that its pipe body knows\n        // that its topic was used at least once.\n        this.registerTopicReference();\n\n        return this.finishNode(node, \"TopicReference\");\n      } else {\n        // pipeProposal is \"smart\"\n\n        if (!this.topicReferenceIsAllowedInCurrentContext()) {\n          this.raise(Errors.PrimaryTopicNotAllowed, startLoc);\n        }\n        this.registerTopicReference();\n        return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n      }\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, startLoc, {\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\"(Babel 7) or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, startLoc);\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, this.state.curPosition());\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(ParamKind.PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !(this.optionFlags & OptionFlags.AllowSuperOutsideMethod)\n    ) {\n      this.raise(Errors.SuperNotAllowed, node);\n    } else if (\n      !this.scope.allowSuper &&\n      !(this.optionFlags & OptionFlags.AllowSuperOutsideMethod)\n    ) {\n      this.raise(Errors.UnexpectedSuper, node);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, node);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, node.property, {\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(\n    this: Parser,\n    node: Undone<N.MetaProperty | N.ImportExpression>,\n  ): N.MetaProperty | N.ImportExpression {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, id);\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(tt._source) || this.isContextual(tt._defer)) {\n      const isSource = this.isContextual(tt._source);\n\n      this.expectPlugin(\n        isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\",\n      );\n      if (!(this.optionFlags & OptionFlags.CreateImportExpressions)) {\n        throw this.raise(\n          Errors.DynamicImportPhaseRequiresImportExpressions,\n          this.state.startLoc,\n          {\n            phase: this.state.value,\n          },\n        );\n      }\n      this.next();\n      (node as Undone<N.ImportExpression>).phase = isSource\n        ? \"source\"\n        : \"defer\";\n      return this.parseImportCall(node as Undone<N.ImportExpression>);\n    }\n\n    return this.parseMetaProperty(node as Undone<N.MetaProperty>, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(\n      node,\n      \"raw\",\n      this.input.slice(this.offsetToSourcePos(node.start), this.state.end),\n    );\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  // TODO: Remove this in Babel 8\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.startNode<N.RegExpLiteral>();\n    this.addExtra(\n      node,\n      \"raw\",\n      this.input.slice(this.offsetToSourcePos(node.start), this.state.end),\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    this.next();\n    return this.finishNode(node, \"RegExpLiteral\");\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: (N.Expression | N.RestElement)[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList as N.Expression[];\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!(this.optionFlags & OptionFlags.CreateParenthesizedExpressions)) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n    node: T,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): T | N.TypeCastExpression | N.TsTypeCastExpression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !(this.optionFlags & OptionFlags.AllowNewTargetOutsideFunction)\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, metaProp);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    const isImport = this.match(tt._import);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (\n      isImport &&\n      (callee.type === \"Import\" || callee.type === \"ImportExpression\")\n    ) {\n      this.raise(Errors.ImportCallNotNewExpression, callee);\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(\n          Errors.InvalidEscapeSequenceTemplate,\n          // FIXME: Adding 1 is probably wrong.\n          createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        );\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    let curElt = this.parseTemplateElement(isTagged);\n    const quasis = [curElt];\n    const substitutions = [];\n    while (!curElt.tail) {\n      substitutions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    // Type cast from (N.Expression[] | N.TsType[]). parseTemplateSubstitution\n    // returns consistent results.\n    node.expressions = substitutions as N.Expression[] | N.TsType[];\n    node.quasis = quasis;\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression | N.TsType {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    let sawProto = false;\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        sawProto = this.checkProto(\n          prop,\n          isRecord,\n          sawProto,\n          refExpressionErrors,\n        );\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, prop);\n      }\n\n      if (!process.env.BABEL_8_BREAKING) {\n        // @ts-expect-error shorthand may not index prop\n        if (prop.shorthand) {\n          this.addExtra(prop, \"shorthand\", true);\n        }\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: Undone<N.Node>): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStartLoc.index);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(\n    prop: Undone<N.ObjectProperty>,\n  ): prop is typeof prop & { key: N.Identifier } {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, this.state.startLoc);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const { key } = prop;\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, this.state.curPosition(), {\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        method,\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, method);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishObjectProperty(prop);\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          this.cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          this.cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = this.cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishObjectProperty(prop);\n    }\n  }\n\n  finishObjectProperty(node: Undone<N.ObjectProperty>) {\n    return this.finishNode(node, \"ObjectProperty\");\n  }\n\n  parseObjPropValue<T extends N.ObjectMember>(\n    this: Parser,\n    prop: Undone<T>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    const node = (this.parseObjectMethod(\n      prop as Undone<N.ObjectMethod>,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n    ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      )) as T;\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            if (!process.env.BABEL_8_BREAKING && type === tt.decimal) {\n              key = this.parseDecimalLiteral(value);\n              break;\n            }\n\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      ScopeFlag.FUNCTION |\n        ScopeFlag.SUPER |\n        (inClassScope ? ScopeFlag.CLASS : 0) |\n        (allowDirectSuper ? ScopeFlag.DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params:\n      | Array<N.Expression | N.SpreadElement>\n      | Array<N.Expression | N.RestElement>,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= ParamKind.PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params:\n      | Array<N.Expression | N.SpreadElement>\n      | Array<N.Expression | N.RestElement>,\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        this.prodParam.currentFlags() | ParamKind.PARAM_RETURN,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(\n              Errors.IllegalLanguageModeDirective,\n              // @ts-expect-error kind may not index node\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                ? // @ts-expect-error node.key has been guarded\n                  node.key.loc.end\n                : node,\n            );\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(\n              node.id,\n              BindingFlag.TYPE_OUTSIDE,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty): boolean {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        formalParameters,\n        BindingFlag.TYPE_VAR,\n        checkClashes,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | N.SpreadElement | N.ArgumentPlaceholder | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, this.state.curPosition(), {\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, this.state.startLoc);\n      }\n      const node = this.startNode<N.ArgumentPlaceholder>();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, startLoc, {\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n        ? isStrictBindReservedWord\n        : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, startLoc, {\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, startLoc);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, startLoc);\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, startLoc);\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError(startLoc);\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, startLoc);\n        return;\n      }\n    }\n  }\n\n  // Returns wether `await` is allowed or not in this context, and if it is\n  // keeps track of it to determine whether a module uses top-level await.\n  recordAwaitIfAllowed(): boolean {\n    const isAwaitAllowed =\n      this.prodParam.hasAwait ||\n      (this.optionFlags & OptionFlags.AllowAwaitOutsideFunction &&\n        !this.scope.inFunction);\n\n    if (isAwaitAllowed && !this.scope.inFunction) {\n      this.state.hasTopLevelAwait = true;\n    }\n\n    return isAwaitAllowed;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      node,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, node);\n    }\n\n    if (\n      !this.scope.inFunction &&\n      !(this.optionFlags & OptionFlags.AllowAwaitOutsideFunction)\n    ) {\n      if (this.isAmbiguousPrefixOrIdentifier()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousPrefixOrIdentifier(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser, startLoc: Position): N.YieldExpression {\n    const node = this.startNodeAt<N.YieldExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      node,\n    );\n\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportCall\n  parseImportCall(\n    this: Parser,\n    node: Undone<N.ImportExpression>,\n  ): N.ImportExpression {\n    this.next(); // eat tt.parenL\n    node.source = this.parseMaybeAssignAllowIn();\n    node.options = null;\n    if (this.eat(tt.comma)) {\n      if (!this.match(tt.parenR)) {\n        node.options = this.parseMaybeAssignAllowIn();\n\n        if (this.eat(tt.comma) && !this.match(tt.parenR)) {\n          // keep consuming arguments, to then throw ImportCallArity\n          // instead of \"expected )\"\n          do {\n            this.parseMaybeAssignAllowIn();\n          } while (this.eat(tt.comma) && !this.match(tt.parenR));\n\n          this.raise(Errors.ImportCallArity, node);\n        }\n      }\n    }\n    this.expect(tt.parenR);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    // @ts-expect-error Remove this in Babel 8\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, leftStartLoc);\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, this.state.startLoc);\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, startLoc);\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    // TODO(Babel 8): Remove this method\n\n    if (\n      !process.env.BABEL_8_BREAKING &&\n      // @ts-expect-error Babel 7 only\n      this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])\n    ) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\"(Babel 7), \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = ParamKind.PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = ParamKind.PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types.ts\";\nimport ExpressionParser from \"./expression.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier.ts\";\nimport * as charCodes from \"charcodes\";\nimport {\n  ScopeFlag,\n  ClassElementType,\n  BindingFlag,\n} from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope.ts\";\nimport { OptionFlags, type SourceType } from \"../options.ts\";\nimport { Token } from \"../tokenizer/index.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../util/location.ts\";\nimport type { Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\nimport { ParseBindingListFlags } from \"./lval.ts\";\nimport { LoopLabelKind } from \"../tokenizer/state.ts\";\n\nconst loopLabel = { kind: LoopLabelKind.Loop } as const,\n  switchLabel = { kind: LoopLabelKind.Switch } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(\n  tokens: (Token | N.Comment)[],\n  input: string,\n  startIndex: number,\n) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start - startIndex) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(\n    this: Parser,\n    file: Undone<N.File>,\n    program: Undone<N.Program>,\n  ): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.comments;\n\n    if (this.optionFlags & OptionFlags.Tokens) {\n      file.tokens = babel7CompatTokens(\n        this.tokens,\n        this.input,\n        this.startIndex,\n      );\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule) {\n      if (\n        !(this.optionFlags & OptionFlags.AllowUndeclaredExports) &&\n        this.scope.undefinedExports.size > 0\n      ) {\n        for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n          this.raise(Errors.ModuleExportUndefined, at, { localName });\n        }\n      }\n      this.addExtra(program, \"topLevelAwait\", this.state.hasTopLevelAwait);\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.ExpressionStatement): N.Directive {\n    const directive = this.castNodeTo(stmt, \"Directive\");\n\n    const directiveLiteral = this.castNodeTo(\n      stmt.expression,\n      \"DirectiveLiteral\",\n    );\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(\n      this.offsetToSourcePos(directiveLiteral.start),\n      this.offsetToSourcePos(directiveLiteral.end),\n    );\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directive.value = directiveLiteral;\n    delete stmt.expression;\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration in the same line so that it should be interpreted as\n   * a keyword.\n   */\n  hasInLineFollowingBindingIdentifierOrBrace(): boolean {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      nextCh === charCodes.leftCurlyBrace ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  allowsForUsing(): boolean {\n    const { type, containsEsc, end } = this.lookahead();\n    if (type === tt._of && !containsEsc) {\n      // `for( using of` must start either a for-lhs-of statement\n      // or a for lexical declaration\n      const nextCharAfterOf = this.lookaheadCharCodeSince(end);\n      if (\n        nextCharAfterOf !== charCodes.equalsTo &&\n        nextCharAfterOf !== charCodes.colon &&\n        // recover from `for(using of;...);`\n        nextCharAfterOf !== charCodes.semicolon\n      ) {\n        return false;\n      }\n    }\n    if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n    return false;\n  }\n\n  startsAwaitUsing(): boolean {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const startType = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (startType) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n                ? Errors.SloppyFunctionAnnexB\n                : Errors.SloppyFunction,\n            this.state.startLoc,\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._await:\n        // [+Await] await [no LineTerminator here] using [no LineTerminator here] BindingList[+Using]\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.recordAwaitIfAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, node);\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, node);\n          }\n          this.next(); // eat 'await'\n          return this.parseVarStatement(\n            node as Undone<N.VariableDeclaration>,\n            \"await using\",\n          );\n        }\n        break;\n      case tt._using:\n        // using [no LineTerminator here] BindingList[+Using]\n        if (\n          this.state.containsEsc ||\n          !this.hasInLineFollowingBindingIdentifierOrBrace()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, this.state.startLoc);\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (\n          !(this.optionFlags & OptionFlags.AllowImportExportEverywhere) &&\n          !topLevel\n        ) {\n          this.raise(Errors.UnexpectedImportExport, this.state.startLoc);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (startType === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportNamedDeclaration\n            >,\n            decorators,\n          );\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(\n              Errors.AsyncFunctionInSingleStatementContext,\n              this.state.startLoc,\n            );\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(startType) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (\n      !(this.optionFlags & OptionFlags.AllowImportExportEverywhere) &&\n      !this.inModule\n    ) {\n      this.raise(Errors.ImportOutsideModule, node);\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators?.length) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(\n            Errors.DecoratorsBeforeAfterExport,\n            classNode.decorators[0],\n          );\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, this.state.startLoc);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, this.state.startLoc);\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr, startLoc);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(\n            Errors.DecoratorArgumentsOutsideParentheses,\n            paramsStartLoc,\n          );\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt<N.MemberExpression>(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr, startLoc);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n  ): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAt<N.CallExpression>(startLoc);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === LoopLabelKind.Loop)) {\n          break;\n        }\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, node, { type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isContextual(tt._await) && this.recordAwaitIfAllowed()) {\n      awaitAt = this.state.startLoc;\n      this.next();\n    }\n    this.scope.enter(ScopeFlag.OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    {\n      const startsWithAwaitUsing =\n        this.isContextual(tt._await) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration =\n        startsWithAwaitUsing ||\n        (this.isContextual(tt._using) && this.allowsForUsing());\n      const isLetOrUsing =\n        (startsWithLet && this.hasFollowingBindingAtom()) ||\n        starsWithUsingDeclaration;\n\n      if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n        const initNode = this.startNode<N.VariableDeclaration>();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.recordAwaitIfAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, this.state.startLoc);\n          }\n          this.next(); // eat 'await'\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n        const isForIn = this.match(tt._in);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, init);\n        }\n        if (\n          (isForIn || this.isContextual(tt._of)) &&\n          init.declarations.length === 1\n        ) {\n          return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node as Undone<N.ForStatement>, init);\n      }\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, init);\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, init);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { type });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (\n      !this.prodParam.hasReturn &&\n      !(this.optionFlags & OptionFlags.AllowReturnOutsideFunction)\n    ) {\n      this.raise(Errors.IllegalReturn, this.state.startLoc);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(ScopeFlag.OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode<N.SwitchCase>()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              Errors.MultipleDefaultsInSwitch,\n              this.state.lastTokStartLoc,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, this.state.lastTokEndLoc);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? ScopeFlag.SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(\n      param,\n      { type: \"CatchClause\" },\n      BindingFlag.TYPE_CATCH_PARAM,\n    );\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(ScopeFlag.OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, node);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, this.state.startLoc);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, expr, {\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? LoopLabelKind.Loop\n      : this.match(tt._switch)\n        ? LoopLabelKind.Switch\n        : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.sourceToOffsetPos(this.state.start);\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.sourceToOffsetPos(this.state.start),\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(ScopeFlag.OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): stmt is N.ExpressionStatement {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    afterBlockParse?.call(this, hasStrictModeDirective);\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, init, {\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, init, {\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(\n            Errors.DeclarationMissingInitializer,\n            this.state.lastTokEndLoc,\n            {\n              kind: \"destructuring\",\n            },\n          );\n        } else if (\n          (kind === \"const\" || kind === \"using\" || kind === \"await using\") &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(\n            Errors.DeclarationMissingInitializer,\n            this.state.lastTokEndLoc,\n            { kind },\n          );\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  ): void {\n    const id = this.parseBindingAtom();\n    if (kind === \"using\" || kind === \"await using\") {\n      if (id.type === \"ArrayPattern\" || id.type === \"ObjectPattern\") {\n        this.raise(Errors.UsingDeclarationHasBindingPattern, id.loc.start);\n      }\n    }\n    this.checkLVal(\n      id,\n      { type: \"VariableDeclarator\" },\n      kind === \"var\" ? BindingFlag.TYPE_VAR : BindingFlag.TYPE_LEXICAL,\n    );\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(\n          Errors.GeneratorInSingleStatementContext,\n          this.state.startLoc,\n        );\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(ScopeFlag.FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BindingFlag.TYPE_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BindingFlag.TYPE_VAR\n          : BindingFlag.TYPE_LEXICAL\n        : BindingFlag.TYPE_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  nameIsConstructor(key: N.Expression | N.PrivateName): boolean {\n    return (\n      (key.type === \"Identifier\" && key.name === \"constructor\") ||\n      (key.type === \"StringLiteral\" && key.value === \"constructor\")\n    );\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed && !method.static && this.nameIsConstructor(method.key)\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(\n              Errors.DecoratorSemicolon,\n              this.state.lastTokEndLoc,\n            );\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, member);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, this.state.startLoc);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, publicMethod.key);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      !this.state.containsEsc && tokenIsIdentifier(this.state.type);\n    const key = this.parseClassElementName(member);\n    const maybeContextualKw = isContextual ? (key as N.Identifier).name : null;\n    const isPrivate = this.isPrivateName(key);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, key);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, key);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (maybeContextualKw === \"async\" && !this.isLineTerminator()) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, publicMethod.key);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      (maybeContextualKw === \"get\" || maybeContextualKw === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = maybeContextualKw;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, publicMethod.key);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (maybeContextualKw === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier | N.PrivateName {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, this.state.startLoc);\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, this.state.startLoc);\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    this.parsePropertyName(member);\n    return member.key;\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(\n      ScopeFlag.CLASS | ScopeFlag.STATIC_BLOCK | ScopeFlag.SUPER,\n    );\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(ParamKind.PARAM);\n    const body: N.Statement[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, member);\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (!prop.computed && this.nameIsConstructor(prop.key)) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      ClassElementType.OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed && this.nameIsConstructor(prop.key)) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key as N.PrivateName),\n        ClassElementType.OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? ClassElementType.STATIC_GETTER\n          : ClassElementType.INSTANCE_GETTER\n        : node.kind === \"set\"\n          ? node.static\n            ? ClassElementType.STATIC_SETTER\n            : ClassElementType.INSTANCE_SETTER\n          : ClassElementType.OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<N.ClassPrivateMethod | N.TSDeclareMethod>,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key as N.PrivateName),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(ScopeFlag.CLASS | ScopeFlag.SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(ParamKind.PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingFlag = BindingFlag.TYPE_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, this.state.startLoc);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n      node,\n      /* isExport */ true,\n    );\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(node, true);\n\n      this.sawUnambiguousESM = true;\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n\n      this.checkExport(node2, true, true);\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  eatExportStar(\n    node: Undone<N.Node>,\n  ): node is Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration> {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier?.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode<N.ExportDefaultSpecifier>(id);\n      specifier.exported = id;\n      (node as Undone<N.ExportNamedDeclaration>).specifiers = [\n        this.finishNode(specifier, \"ExportDefaultSpecifier\"),\n      ];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(\n    node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (this.isContextual(tt._as)) {\n      (node as Undone<N.ExportNamedDeclaration>).specifiers ??= [];\n\n      const specifier = this.startNodeAt<N.ExportNamespaceSpecifier>(\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      (node as Undone<N.ExportNamedDeclaration>).specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(\n    node: Undone<N.Node>,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (this.match(tt.braceL)) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n\n      if (!node2.specifiers) node2.specifiers = [];\n      const isTypeExport = node2.exportKind === \"type\";\n      node2.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node2.source = null;\n      if (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"importAssertions\")) {\n        node2.assertions = [];\n      } else {\n        node2.attributes = [];\n      }\n      node2.declaration = null;\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      } else {\n        node.attributes = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression(\n    this: Parser,\n  ): N.ExportDefaultDeclaration[\"declaration\"] {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, this.state.startLoc);\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n        }\n\n        return true;\n      }\n    }\n\n    if (this.isContextual(tt._using)) {\n      this.raise(Errors.UsingDeclarationExport, this.state.startLoc);\n      return true;\n    }\n\n    if (this.isContextual(tt._await) && this.startsAwaitUsing()) {\n      this.raise(Errors.UsingDeclarationExport, this.state.startLoc);\n      return true;\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<\n      | N.ExportNamedDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportDefaultDeclaration\n    >,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, declaration);\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers?.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, specifier, {\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if ((node as Undone<N.ExportNamedDeclaration>).declaration) {\n        const decl = (node as Undone<N.ExportNamedDeclaration>).declaration;\n        // Exported declarations\n        if (\n          decl.type === \"FunctionDeclaration\" ||\n          decl.type === \"ClassDeclaration\"\n        ) {\n          const { id } = decl;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (decl.type === \"VariableDeclaration\") {\n          for (const declaration of decl.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, node);\n      } else {\n        this.raise(Errors.DuplicateExport, node, { exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode<N.ExportSpecifier>();\n      node.local = this.parseModuleExportName() as N.Identifier;\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = this.cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = this.cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = loneSurrogate.exec(result.value);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, result, {\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    const { specifiers } = node;\n    const singleBindingType =\n      specifiers.length === 1 ? specifiers[0].type : null;\n\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(\n          Errors.SourcePhaseImportRequiresDefault,\n          specifiers[0].loc.start,\n        );\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(\n          Errors.DeferImportRequiresNamespace,\n          specifiers[0].loc.start,\n        );\n      }\n    } else if (node.module) {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, specifiers[0].loc.start);\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(\n          Errors.ImportReflectionHasAssertion,\n          specifiers[0].loc.start,\n        );\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(\n            Errors.ImportJSONBindingNotDefault,\n            nonDefaultNamedSpecifier.loc.start,\n          );\n        }\n      }\n    }\n  }\n\n  isPotentialImportPhase(isExport: boolean): boolean {\n    if (isExport) return false;\n    return (\n      this.isContextual(tt._source) ||\n      this.isContextual(tt._defer) ||\n      (!process.env.BABEL_8_BREAKING && this.isContextual(tt._module))\n    );\n  }\n\n  applyImportPhase(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n    isExport: boolean,\n    phase: string | null,\n    loc?: Position,\n  ): void {\n    if (isExport) {\n      if (!process.env.IS_PUBLISH) {\n        if (\n          (!process.env.BABEL_8_BREAKING && phase === \"module\") ||\n          phase === \"source\"\n        ) {\n          throw new Error(\n            `Assertion failure: export declarations do not support the '${phase}' phase.`,\n          );\n        }\n      }\n      return;\n    }\n\n    if (!process.env.BABEL_8_BREAKING && phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      (node as N.ImportDeclaration).module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      (node as N.ImportDeclaration).module = false;\n    }\n\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      (node as N.ImportDeclaration).phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      (node as N.ImportDeclaration).phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      (node as N.ImportDeclaration).phase = null;\n    }\n  }\n\n  /*\n   * Parse `source` in `import source x from \"x\"`, disambiguating\n   * `import source from \"x\"` and `import source from from \"x\"`.\n   *\n   * This function might return an identifier representing the `source`\n   * if it eats `source` and then discovers that it was the default import\n   * binding and not the import reflection.\n   *\n   * This function is also used to parse `import type` and `import typeof`\n   * in the TS and Flow plugins, and for parsing `import defer`.\n   */\n  parseMaybeImportPhase(\n    node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    isExport: boolean,\n  ): N.Identifier | null {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      return null;\n    }\n\n    const phaseIdentifier = this.parseIdentifier(true);\n\n    const { type } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        phaseIdentifier.name,\n        phaseIdentifier.loc.start,\n      );\n      return null;\n    } else {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      // `<phase>` is a default binding, return it to the main import declaration parser\n      return phaseIdentifier;\n    }\n  }\n\n  isPrecedingIdImportPhase(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    phase: string,\n  ) {\n    const { type } = this.state;\n    return tokenIsIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    if (this.match(tt.string)) {\n      // import '...'\n      return this.parseImportSourceAndAttributes(node);\n    }\n\n    return this.parseImportSpecifiersAndAfter(\n      node,\n      this.parseMaybeImportPhase(node, /* isExport */ false),\n    );\n  }\n\n  parseImportSpecifiersAndAfter(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): N.AnyImport {\n    node.specifiers = [];\n\n    // check if we have a default import like\n    // import React from \"react\";\n    const hasDefault = this.maybeParseDefaultImportSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    /* we are checking if we do not have a default import, then it is obvious that we need named imports\n     * import { get } from \"axios\";\n     * but if we do have a default import\n     * we need to check if we have a comma after that and\n     * that is where this `|| this.eat` condition comes into play\n     */\n    const parseNext = !hasDefault || this.eat(tt.comma);\n    // if we do have to parse the next set of specifiers, we first check for star imports\n    // import React, * from \"react\";\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    // now we check if we need to parse the next imports\n    // but only if they are not importing * (everything)\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(tt._from);\n\n    return this.parseImportSourceAndAttributes(node);\n  }\n\n  parseImportSourceAndAttributes(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n  ): N.AnyImport {\n    node.specifiers ??= [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    this.sawUnambiguousESM = true;\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    specifier: Undone<T>,\n    type: T[\"type\"],\n    bindingType: BindingFlag = BindingFlag.TYPE_LEXICAL,\n  ) {\n    this.checkLVal(specifier.local, { type }, bindingType);\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-attributes/#prod-WithEntries WithEntries}\n   */\n  parseImportAttributes(): N.ImportAttribute[] {\n    this.expect(tt.braceL);\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          Errors.ModuleAttributesWithDuplicateKeys,\n          this.state.startLoc,\n          {\n            key: keyName,\n          },\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(\n          Errors.ModuleAttributeInvalidValue,\n          this.state.startLoc,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    this.expect(tt.braceR);\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  parseModuleAttributes() {\n    const attrs: N.ImportAttribute[] = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode<N.ImportAttribute>();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, node.key);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, node.key, {\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(\n          Errors.ModuleAttributeInvalidValue,\n          this.state.startLoc,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAttributes(\n    node: Undone<\n      N.ImportDeclaration | N.ExportNamedDeclaration | N.ExportAllDeclaration\n    >,\n  ) {\n    let attributes: N.ImportAttribute[];\n    if (!process.env.BABEL_8_BREAKING) {\n      // eslint-disable-next-line no-var\n      var useWith = false;\n    }\n\n    // https://tc39.es/proposal-import-attributes/#prod-WithClause\n    if (this.match(tt._with)) {\n      if (\n        this.hasPrecedingLineBreak() &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      ) {\n        // This will be parsed as a with statement, and we will throw a\n        // better error about it not being supported in strict mode.\n        return;\n      }\n\n      this.next(); // eat `with`\n\n      if (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"moduleAttributes\")) {\n        attributes = this.parseModuleAttributes();\n        this.addExtra(node, \"deprecatedWithLegacySyntax\", true);\n      } else {\n        attributes = this.parseImportAttributes();\n      }\n      if (!process.env.BABEL_8_BREAKING) {\n        useWith = true;\n      }\n    } else if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      if (\n        !this.hasPlugin(\"deprecatedImportAssert\") &&\n        (process.env.BABEL_8_BREAKING || !this.hasPlugin(\"importAssertions\"))\n      ) {\n        this.raise(Errors.ImportAttributesUseAssert, this.state.startLoc);\n      }\n      if (process.env.BABEL_8_BREAKING || !this.hasPlugin(\"importAssertions\")) {\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      }\n      this.next(); // eat `assert`\n      attributes = this.parseImportAttributes();\n    } else {\n      attributes = [];\n    }\n\n    if (\n      !process.env.BABEL_8_BREAKING &&\n      !useWith &&\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n\n  maybeParseDefaultImportSpecifier(\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): boolean {\n    // import defaultObj, { x, y as z } from '...'\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode<N.ImportDefaultSpecifier>(\n        maybeDefaultIdentifier,\n      );\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(\n        this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"),\n      );\n      return true;\n    } else if (\n      // We allow keywords, and parseImportSpecifierLocal will report a recoverable error\n      tokenIsKeywordOrIdentifier(this.state.type)\n    ) {\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, this.state.startLoc);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingFlag | undefined,\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, specifier, {\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = this.cloneIdentifier(imported as N.Identifier);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport { getOptions, OptionFlags } from \"../options.ts\";\nimport StatementParser from \"./statement.ts\";\nimport ScopeHandler from \"../util/scope.ts\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(\n    options: Options | undefined | null,\n    input: string,\n    pluginsMap: PluginsMap,\n  ) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap;\n    this.filename = options.sourceFilename;\n    this.startIndex = options.startIndex;\n\n    let optionFlags = 0;\n    if (options.allowAwaitOutsideFunction) {\n      optionFlags |= OptionFlags.AllowAwaitOutsideFunction;\n    }\n    if (options.allowReturnOutsideFunction) {\n      optionFlags |= OptionFlags.AllowReturnOutsideFunction;\n    }\n    if (options.allowImportExportEverywhere) {\n      optionFlags |= OptionFlags.AllowImportExportEverywhere;\n    }\n    if (options.allowSuperOutsideMethod) {\n      optionFlags |= OptionFlags.AllowSuperOutsideMethod;\n    }\n    if (options.allowUndeclaredExports) {\n      optionFlags |= OptionFlags.AllowUndeclaredExports;\n    }\n    if (options.allowNewTargetOutsideFunction) {\n      optionFlags |= OptionFlags.AllowNewTargetOutsideFunction;\n    }\n    if (options.allowYieldOutsideFunction) {\n      optionFlags |= OptionFlags.AllowYieldOutsideFunction;\n    }\n    if (options.ranges) {\n      optionFlags |= OptionFlags.Ranges;\n    }\n    if (options.tokens) {\n      optionFlags |= OptionFlags.Tokens;\n    }\n    if (options.createImportExpressions) {\n      optionFlags |= OptionFlags.CreateImportExpressions;\n    }\n    if (options.createParenthesizedExpressions) {\n      optionFlags |= OptionFlags.CreateParenthesizedExpressions;\n    }\n    if (options.errorRecovery) {\n      optionFlags |= OptionFlags.ErrorRecovery;\n    }\n    if (options.attachComment) {\n      optionFlags |= OptionFlags.AttachComment;\n    }\n    if (options.annexB) {\n      optionFlags |= OptionFlags.AnnexB;\n    }\n\n    this.optionFlags = optionFlags;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): new (...args: any) => ScopeHandler {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode<N.File>();\n    const program = this.startNode<N.Program>();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    file.comments.length = this.state.commentsLen;\n    return file as N.File;\n  }\n}\n", "import type { Options } from \"./options.ts\";\nimport {\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n} from \"./plugin-utils.ts\";\nexport type {\n  PluginConfig as ParserPlugin,\n  DecoratorsPluginOptions,\n  FlowPluginOptions,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n  TypeScriptPluginOptions,\n} from \"./typings.ts\";\nimport Parser, { type PluginsMap } from \"./parser/index.ts\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types.ts\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types.ts\";\nexport type { Token } from \"./tokenizer/index.ts\";\n\n// TODO: Rather than type-casting the internal AST definitions to the\n// @babel/types one, we should actually unify them.\nimport type { Expression, File } from \"@babel/types\";\nexport type { Expression, File };\n\nexport type ParserOptions = Partial<Options>;\n\nexport interface ParseError {\n  code: string;\n  reasonCode: string;\n}\nexport type ParseResult<Result extends File | Expression = File> = Result & {\n  errors: null | ParseError[];\n};\n\n/**\n * Parse the provided code as an entire ECMAScript program.\n */\nexport function parse(\n  input: string,\n  options?: ParserOptions,\n): ParseResult<File> {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast as unknown as ParseResult<File>;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(\n            options,\n            input,\n          ).parse() as unknown as ParseResult<File>;\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast as unknown as ParseResult<File>;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(\n          options,\n          input,\n        ).parse() as unknown as ParseResult<File>;\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse() as unknown as ParseResult<File>;\n  }\n}\n\nexport function parseExpression(\n  input: string,\n  options?: ParserOptions,\n): ParseResult<Expression> {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression() as unknown as ParseResult<Expression>;\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  const pluginsMap: PluginsMap = new Map();\n  if (options?.plugins) {\n    for (const plugin of options.plugins) {\n      let name, opts;\n      if (typeof plugin === \"string\") {\n        name = plugin;\n      } else {\n        [name, opts] = plugin;\n      }\n      if (!pluginsMap.has(name)) {\n        pluginsMap.set(name, opts || {});\n      }\n    }\n    validatePlugins(pluginsMap);\n    cls = getParserClass(pluginsMap);\n  }\n\n  return new cls(options, input, pluginsMap);\n}\n\nconst parserClassCache = new Map<string, new (...args: any) => Parser>();\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(\n  pluginsMap: Map<string, any>,\n): new (...args: any) => Parser {\n  const pluginList = [];\n  for (const name of mixinPluginNames) {\n    if (pluginsMap.has(name)) {\n      pluginList.push(name);\n    }\n  }\n  const key = pluginList.join(\"|\");\n  let cls = parserClassCache.get(key);\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache.set(key, cls);\n  }\n  return cls;\n}\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._ignoreInvalidMapping = util.getArg(aArgs, 'ignoreInvalidMapping', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer, generatorOps) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator(Object.assign(generatorOps || {}, {\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    }));\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      if (this._validateMapping(generated, original, source, name) === false) {\n        return;\n      }\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n      var message = 'original.line and original.column are not numbers -- you probably meant to omit ' +\n      'the original mapping entirely and only map the generated position. If so, pass ' +\n      'null for the original mapping instead of an object with empty or null values.'\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message);\n      }\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      var message = 'Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      });\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message)\n      }\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nexports.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      if(source !== null) {\n        source = util.computeSourceURL(sourceRoot, source, sourceMapURL);\n      }\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content || content === '') {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if(source !== null) {\n          source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "import {\n  type App,\n  type CreateAppFunction,\n  type DefineComponent,\n  DeprecationTypes,\n  type Directive,\n  type ElementNamespace,\n  type HydrationRenderer,\n  type Renderer,\n  type RootHydrateFunction,\n  type RootRenderFunction,\n  compatUtils,\n  createHydrationRenderer,\n  createRenderer,\n  isRuntimeOnly,\n  warn,\n} from '@vue/runtime-core'\nimport { nodeOps } from './nodeOps'\nimport { patchProp } from './patchProp'\n// Importing from the compiler, will be tree-shaken in prod\nimport {\n  NOOP,\n  extend,\n  isFunction,\n  isHTMLTag,\n  isMathMLTag,\n  isSVGTag,\n  isString,\n} from '@vue/shared'\nimport type { TransitionProps } from './components/Transition'\nimport type { TransitionGroupProps } from './components/TransitionGroup'\nimport type { vShow } from './directives/vShow'\nimport type { VOnDirective } from './directives/vOn'\nimport type { VModelDirective } from './directives/vModel'\n\n/**\n * This is a stub implementation to prevent the need to use dom types.\n *\n * To enable proper types, add `\"dom\"` to `\"lib\"` in your `tsconfig.json`.\n */\ntype DomStub = {}\ntype DomType<T> = typeof globalThis extends { window: unknown } ? T : DomStub\n\ndeclare module '@vue/reactivity' {\n  export interface RefUnwrapBailTypes {\n    runtimeDOMBailTypes: DomType<Node | Window>\n  }\n}\n\ndeclare module '@vue/runtime-core' {\n  interface GlobalComponents {\n    Transition: DefineComponent<TransitionProps>\n    TransitionGroup: DefineComponent<TransitionGroupProps>\n  }\n\n  interface GlobalDirectives {\n    vShow: typeof vShow\n    vOn: VOnDirective\n    vBind: VModelDirective\n    vIf: Directive<any, boolean>\n    VOnce: Directive\n    VSlot: Directive\n  }\n}\n\nconst rendererOptions = /*@__PURE__*/ extend({ patchProp }, nodeOps)\n\n// lazy create the renderer - this makes core renderer logic tree-shakable\n// in case the user only imports reactivity utilities from Vue.\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\n\nlet enabledHydration = false\n\nfunction ensureRenderer() {\n  return (\n    renderer ||\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\n  )\n}\n\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration\n    ? renderer\n    : createHydrationRenderer(rendererOptions)\n  enabledHydration = true\n  return renderer as HydrationRenderer\n}\n\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\nexport const render = ((...args) => {\n  ensureRenderer().render(...args)\n}) as RootRenderFunction<Element | ShadowRoot>\n\nexport const hydrate = ((...args) => {\n  ensureHydrationRenderer().hydrate(...args)\n}) as RootHydrateFunction\n\nexport const createApp = ((...args) => {\n  const app = ensureRenderer().createApp(...args)\n\n  if (__DEV__) {\n    injectNativeTagCheck(app)\n    injectCompilerOptionsCheck(app)\n  }\n\n  const { mount } = app\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\n    const container = normalizeContainer(containerOrSelector)\n    if (!container) return\n\n    const component = app._component\n    if (!isFunction(component) && !component.render && !component.template) {\n      // __UNSAFE__\n      // Reason: potential execution of JS expressions in in-DOM template.\n      // The user must make sure the in-DOM template is trusted. If it's\n      // rendered by the server, the template should not contain any user data.\n      component.template = container.innerHTML\n      // 2.x compat check\n      if (__COMPAT__ && __DEV__ && container.nodeType === 1) {\n        for (let i = 0; i < (container as Element).attributes.length; i++) {\n          const attr = (container as Element).attributes[i]\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\n            compatUtils.warnDeprecation(\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\n              null,\n            )\n            break\n          }\n        }\n      }\n    }\n\n    // clear content before mounting\n    if (container.nodeType === 1) {\n      container.textContent = ''\n    }\n    const proxy = mount(container, false, resolveRootNamespace(container))\n    if (container instanceof Element) {\n      container.removeAttribute('v-cloak')\n      container.setAttribute('data-v-app', '')\n    }\n    return proxy\n  }\n\n  return app\n}) as CreateAppFunction<Element>\n\nexport const createSSRApp = ((...args) => {\n  const app = ensureHydrationRenderer().createApp(...args)\n\n  if (__DEV__) {\n    injectNativeTagCheck(app)\n    injectCompilerOptionsCheck(app)\n  }\n\n  const { mount } = app\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\n    const container = normalizeContainer(containerOrSelector)\n    if (container) {\n      return mount(container, true, resolveRootNamespace(container))\n    }\n  }\n\n  return app\n}) as CreateAppFunction<Element>\n\nfunction resolveRootNamespace(\n  container: Element | ShadowRoot,\n): ElementNamespace {\n  if (container instanceof SVGElement) {\n    return 'svg'\n  }\n  if (\n    typeof MathMLElement === 'function' &&\n    container instanceof MathMLElement\n  ) {\n    return 'mathml'\n  }\n}\n\nfunction injectNativeTagCheck(app: App) {\n  // Inject `isNativeTag`\n  // this is used for component name validation (dev only)\n  Object.defineProperty(app.config, 'isNativeTag', {\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\n    writable: false,\n  })\n}\n\n// dev only\nfunction injectCompilerOptionsCheck(app: App) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement\n    Object.defineProperty(app.config, 'isCustomElement', {\n      get() {\n        return isCustomElement\n      },\n      set() {\n        warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\n            `\\`compilerOptions.isCustomElement\\` instead.`,\n        )\n      },\n    })\n\n    const compilerOptions = app.config.compilerOptions\n    const msg =\n      `The \\`compilerOptions\\` config option is only respected when using ` +\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`\n\n    Object.defineProperty(app.config, 'compilerOptions', {\n      get() {\n        warn(msg)\n        return compilerOptions\n      },\n      set() {\n        warn(msg)\n      },\n    })\n  }\n}\n\nfunction normalizeContainer(\n  container: Element | ShadowRoot | string,\n): Element | ShadowRoot | null {\n  if (isString(container)) {\n    const res = document.querySelector(container)\n    if (__DEV__ && !res) {\n      warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`,\n      )\n    }\n    return res\n  }\n  if (\n    __DEV__ &&\n    window.ShadowRoot &&\n    container instanceof window.ShadowRoot &&\n    container.mode === 'closed'\n  ) {\n    warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`,\n    )\n  }\n  return container as any\n}\n\n// Custom element support\nexport {\n  defineCustomElement,\n  defineSSRCustomElement,\n  useShadowRoot,\n  useHost,\n  VueElement,\n  type VueElementConstructor,\n  type CustomElementOptions,\n} from './apiCustomElement'\n\n// SFC CSS utilities\nexport { useCssModule } from './helpers/useCssModule'\nexport { useCssVars } from './helpers/useCssVars'\n\n// DOM-only components\nexport { Transition, type TransitionProps } from './components/Transition'\nexport {\n  TransitionGroup,\n  type TransitionGroupProps,\n} from './components/TransitionGroup'\n\n// **Internal** DOM-only runtime directive helpers\nexport {\n  vModelText,\n  vModelCheckbox,\n  vModelRadio,\n  vModelSelect,\n  vModelDynamic,\n} from './directives/vModel'\nexport { withModifiers, withKeys } from './directives/vOn'\nexport { vShow } from './directives/vShow'\n\nimport { initVModelForSSR } from './directives/vModel'\nimport { initVShowForSSR } from './directives/vShow'\n\nlet ssrDirectiveInitialized = false\n\n/**\n * @internal\n */\nexport const initDirectivesForSSR: () => void = __SSR__\n  ? () => {\n      if (!ssrDirectiveInitialized) {\n        ssrDirectiveInitialized = true\n        initVModelForSSR()\n        initVShowForSSR()\n      }\n    }\n  : NOOP\n\n// re-export everything from core\n// h, Component, reactivity API, nextTick, flags & types\nexport * from '@vue/runtime-core'\n\nexport * from './jsx'\n", "/**\n * Make a map and return a function for checking if a key\n * is in that map.\n * IMPORTANT: all calls of this function must be prefixed with\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\n * So that rollup can tree-shake them if necessary.\n */\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport function makeMap(str: string): (key: string) => boolean {\n  const map = Object.create(null)\n  for (const key of str.split(',')) map[key] = 1\n  return val => val in map\n}\n", "import { makeMap } from './makeMap'\n\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\n  ? Object.freeze({})\n  : {}\nexport const EMPTY_ARR: readonly never[] = __DEV__ ? Object.freeze([]) : []\n\nexport const NOOP = (): void => {}\n\n/**\n * Always return false.\n */\nexport const NO = () => false\n\nexport const isOn = (key: string): boolean =>\n  key.charCodeAt(0) === 111 /* o */ &&\n  key.charCodeAt(1) === 110 /* n */ &&\n  // uppercase letter\n  (key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97)\n\nexport const isModelListener = (key: string): key is `onUpdate:${string}` =>\n  key.startsWith('onUpdate:')\n\nexport const extend: typeof Object.assign = Object.assign\n\nexport const remove = <T>(arr: T[], el: T): void => {\n  const i = arr.indexOf(el)\n  if (i > -1) {\n    arr.splice(i, 1)\n  }\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const hasOwn = (\n  val: object,\n  key: string | symbol,\n): key is keyof typeof val => hasOwnProperty.call(val, key)\n\nexport const isArray: typeof Array.isArray = Array.isArray\nexport const isMap = (val: unknown): val is Map<any, any> =>\n  toTypeString(val) === '[object Map]'\nexport const isSet = (val: unknown): val is Set<any> =>\n  toTypeString(val) === '[object Set]'\n\nexport const isDate = (val: unknown): val is Date =>\n  toTypeString(val) === '[object Date]'\nexport const isRegExp = (val: unknown): val is RegExp =>\n  toTypeString(val) === '[object RegExp]'\nexport const isFunction = (val: unknown): val is Function =>\n  typeof val === 'function'\nexport const isString = (val: unknown): val is string => typeof val === 'string'\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\nexport const isObject = (val: unknown): val is Record<any, any> =>\n  val !== null && typeof val === 'object'\n\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\n  return (\n    (isObject(val) || isFunction(val)) &&\n    isFunction((val as any).then) &&\n    isFunction((val as any).catch)\n  )\n}\n\nexport const objectToString: typeof Object.prototype.toString =\n  Object.prototype.toString\nexport const toTypeString = (value: unknown): string =>\n  objectToString.call(value)\n\nexport const toRawType = (value: unknown): string => {\n  // extract \"RawType\" from strings like \"[object RawType]\"\n  return toTypeString(value).slice(8, -1)\n}\n\nexport const isPlainObject = (val: unknown): val is object =>\n  toTypeString(val) === '[object Object]'\n\nexport const isIntegerKey = (key: unknown): boolean =>\n  isString(key) &&\n  key !== 'NaN' &&\n  key[0] !== '-' &&\n  '' + parseInt(key, 10) === key\n\nexport const isReservedProp: (key: string) => boolean = /*@__PURE__*/ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  ',key,ref,ref_for,ref_key,' +\n    'onVnodeBeforeMount,onVnodeMounted,' +\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\n    'onVnodeBeforeUnmount,onVnodeUnmounted',\n)\n\nexport const isBuiltInDirective: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(\n    'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo',\n  )\n\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\n  const cache: Record<string, string> = Object.create(null)\n  return ((str: string) => {\n    const hit = cache[str]\n    return hit || (cache[str] = fn(str))\n  }) as T\n}\n\nconst camelizeRE = /-(\\w)/g\n/**\n * @private\n */\nexport const camelize: (str: string) => string = cacheStringFunction(\n  (str: string): string => {\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\n  },\n)\n\nconst hyphenateRE = /\\B([A-Z])/g\n/**\n * @private\n */\nexport const hyphenate: (str: string) => string = cacheStringFunction(\n  (str: string) => str.replace(hyphenateRE, '-$1').toLowerCase(),\n)\n\n/**\n * @private\n */\nexport const capitalize: <T extends string>(str: T) => Capitalize<T> =\n  cacheStringFunction(<T extends string>(str: T) => {\n    return (str.charAt(0).toUpperCase() + str.slice(1)) as Capitalize<T>\n  })\n\n/**\n * @private\n */\nexport const toHandlerKey: <T extends string>(\n  str: T,\n) => T extends '' ? '' : `on${Capitalize<T>}` = cacheStringFunction(\n  <T extends string>(str: T) => {\n    const s = str ? `on${capitalize(str)}` : ``\n    return s as T extends '' ? '' : `on${Capitalize<T>}`\n  },\n)\n\n// compare whether a value has changed, accounting for NaN.\nexport const hasChanged = (value: any, oldValue: any): boolean =>\n  !Object.is(value, oldValue)\n\nexport const invokeArrayFns = (fns: Function[], ...arg: any[]): void => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](...arg)\n  }\n}\n\nexport const def = (\n  obj: object,\n  key: string | symbol,\n  value: any,\n  writable = false,\n): void => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable,\n    value,\n  })\n}\n\n/**\n * \"123-foo\" will be parsed to 123\n * This is used for the .number modifier in v-model\n */\nexport const looseToNumber = (val: any): any => {\n  const n = parseFloat(val)\n  return isNaN(n) ? val : n\n}\n\n/**\n * Only concerns number-like strings\n * \"123-foo\" will be returned as-is\n */\nexport const toNumber = (val: any): any => {\n  const n = isString(val) ? Number(val) : NaN\n  return isNaN(n) ? val : n\n}\n\n// for typeof global checks without @types/node\ndeclare var global: {}\n\nlet _globalThis: any\nexport const getGlobalThis = (): any => {\n  return (\n    _globalThis ||\n    (_globalThis =\n      typeof globalThis !== 'undefined'\n        ? globalThis\n        : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n              ? global\n              : {})\n  )\n}\n\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\nexport function genPropsAccessExp(name: string): string {\n  return identRE.test(name)\n    ? `__props.${name}`\n    : `__props[${JSON.stringify(name)}]`\n}\n\nexport function genCacheKey(source: string, options: any): string {\n  return (\n    source +\n    JSON.stringify(options, (_, val) =>\n      typeof val === 'function' ? val.toString() : val,\n    )\n  )\n}\n", "/**\n * Patch flags are optimization hints generated by the compiler.\n * when a block with dynamicChildren is encountered during diff, the algorithm\n * enters \"optimized mode\". In this mode, we know that the vdom is produced by\n * a render function generated by the compiler, so the algorithm only needs to\n * handle updates explicitly marked by these patch flags.\n *\n * Patch flags can be combined using the | bitwise operator and can be checked\n * using the & operator, e.g.\n *\n * ```js\n * const flag = TEXT | CLASS\n * if (flag & TEXT) { ... }\n * ```\n *\n * Check the `patchElement` function in '../../runtime-core/src/renderer.ts' to see how the\n * flags are handled during diff.\n */\nexport enum PatchFlags {\n  /**\n   * Indicates an element with dynamic textContent (children fast path)\n   */\n  TEXT = 1,\n\n  /**\n   * Indicates an element with dynamic class binding.\n   */\n  CLASS = 1 << 1,\n\n  /**\n   * Indicates an element with dynamic style\n   * The compiler pre-compiles static string styles into static objects\n   * + detects and hoists inline static objects\n   * e.g. `style=\"color: red\"` and `:style=\"{ color: 'red' }\"` both get hoisted\n   * as:\n   * ```js\n   * const style = { color: 'red' }\n   * render() { return e('div', { style }) }\n   * ```\n   */\n  STYLE = 1 << 2,\n\n  /**\n   * Indicates an element that has non-class/style dynamic props.\n   * Can also be on a component that has any dynamic props (includes\n   * class/style). when this flag is present, the vnode also has a dynamicProps\n   * array that contains the keys of the props that may change so the runtime\n   * can diff them faster (without having to worry about removed props)\n   */\n  PROPS = 1 << 3,\n\n  /**\n   * Indicates an element with props with dynamic keys. When keys change, a full\n   * diff is always needed to remove the old key. This flag is mutually\n   * exclusive with CLASS, STYLE and PROPS.\n   */\n  FULL_PROPS = 1 << 4,\n\n  /**\n   * Indicates an element that requires props hydration\n   * (but not necessarily patching)\n   * e.g. event listeners & v-bind with prop modifier\n   */\n  NEED_HYDRATION = 1 << 5,\n\n  /**\n   * Indicates a fragment whose children order doesn't change.\n   */\n  STABLE_FRAGMENT = 1 << 6,\n\n  /**\n   * Indicates a fragment with keyed or partially keyed children\n   */\n  KEYED_FRAGMENT = 1 << 7,\n\n  /**\n   * Indicates a fragment with unkeyed children.\n   */\n  UNKEYED_FRAGMENT = 1 << 8,\n\n  /**\n   * Indicates an element that only needs non-props patching, e.g. ref or\n   * directives (onVnodeXXX hooks). since every patched vnode checks for refs\n   * and onVnodeXXX hooks, it simply marks the vnode so that a parent block\n   * will track it.\n   */\n  NEED_PATCH = 1 << 9,\n\n  /**\n   * Indicates a component with dynamic slots (e.g. slot that references a v-for\n   * iterated value, or dynamic slot names).\n   * Components with this flag are always force updated.\n   */\n  DYNAMIC_SLOTS = 1 << 10,\n\n  /**\n   * Indicates a fragment that was created only because the user has placed\n   * comments at the root level of a template. This is a dev-only flag since\n   * comments are stripped in production.\n   */\n  DEV_ROOT_FRAGMENT = 1 << 11,\n\n  /**\n   * SPECIAL FLAGS -------------------------------------------------------------\n   * Special flags are negative integers. They are never matched against using\n   * bitwise operators (bitwise matching should only happen in branches where\n   * patchFlag > 0), and are mutually exclusive. When checking for a special\n   * flag, simply check patchFlag === FLAG.\n   */\n\n  /**\n   * Indicates a cached static vnode. This is also a hint for hydration to skip\n   * the entire sub tree since static content never needs to be updated.\n   */\n  CACHED = -1,\n  /**\n   * A special flag that indicates that the diffing algorithm should bail out\n   * of optimized mode. For example, on block fragments created by renderSlot()\n   * when encountering non-compiler generated slots (i.e. manually written\n   * render functions, which should always be fully diffed)\n   * OR manually cloneVNodes\n   */\n  BAIL = -2,\n}\n\n/**\n * dev only flag -> name mapping\n */\nexport const PatchFlagNames: Record<PatchFlags, string> = {\n  [PatchFlags.TEXT]: `TEXT`,\n  [PatchFlags.CLASS]: `CLASS`,\n  [PatchFlags.STYLE]: `STYLE`,\n  [PatchFlags.PROPS]: `PROPS`,\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\n  [PatchFlags.NEED_HYDRATION]: `NEED_HYDRATION`,\n  [PatchFlags.STABLE_FRAGMENT]: `STABLE_FRAGMENT`,\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\n  [PatchFlags.DEV_ROOT_FRAGMENT]: `DEV_ROOT_FRAGMENT`,\n  [PatchFlags.CACHED]: `HOISTED`,\n  [PatchFlags.BAIL]: `BAIL`,\n}\n", "export enum SlotFlags {\n  /**\n   * Stable slots that only reference slot props or context state. The slot\n   * can fully capture its own dependencies so when passed down the parent won't\n   * need to force the child to update.\n   */\n  STABLE = 1,\n  /**\n   * Slots that reference scope variables (v-for or an outer slot prop), or\n   * has conditional structure (v-if, v-for). The parent will need to force\n   * the child to update because the slot does not fully capture its dependencies.\n   */\n  DYNAMIC = 2,\n  /**\n   * `<slot/>` being forwarded into a child component. Whether the parent needs\n   * to update the child is dependent on what kind of slots the parent itself\n   * received. This has to be refined at runtime, when the child's vnode\n   * is being created (in `normalizeChildren`)\n   */\n  FORWARDED = 3,\n}\n\n/**\n * Dev only\n */\nexport const slotFlagsText: Record<SlotFlags, string> = {\n  [SlotFlags.STABLE]: 'STABLE',\n  [SlotFlags.DYNAMIC]: 'DYNAMIC',\n  [SlotFlags.FORWARDED]: 'FORWARDED',\n}\n", "import { makeMap } from './makeMap'\n\nconst GLOBALS_ALLOWED =\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol'\n\nexport const isGloballyAllowed: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(GLOBALS_ALLOWED)\n\n/** @deprecated use `isGloballyAllowed` instead */\nexport const isGloballyWhitelisted: (key: string) => boolean = isGloballyAllowed\n", "const range: number = 2\n\nexport function generateCodeFrame(\n  source: string,\n  start = 0,\n  end: number = source.length,\n): string {\n  // Ensure start and end are within the source length\n  start = Math.max(0, Math.min(start, source.length))\n  end = Math.max(0, Math.min(end, source.length))\n\n  if (start > end) return ''\n\n  // Split the content into individual lines but capture the newline sequence\n  // that separated each line. This is important because the actual sequence is\n  // needed to properly take into account the full line length for offset\n  // comparison\n  let lines = source.split(/(\\r?\\n)/)\n\n  // Separate the lines and newline sequences into separate arrays for easier referencing\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1)\n  lines = lines.filter((_, idx) => idx % 2 === 0)\n\n  let count = 0\n  const res: string[] = []\n  for (let i = 0; i < lines.length; i++) {\n    count +=\n      lines[i].length +\n      ((newlineSequences[i] && newlineSequences[i].length) || 0)\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue\n        const line = j + 1\n        res.push(\n          `${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${\n            lines[j]\n          }`,\n        )\n        const lineLength = lines[j].length\n        const newLineSeqLength =\n          (newlineSequences[j] && newlineSequences[j].length) || 0\n\n        if (j === i) {\n          // push underline\n          const pad = start - (count - (lineLength + newLineSeqLength))\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start,\n          )\n          res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length))\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1)\n            res.push(`   |  ` + '^'.repeat(length))\n          }\n\n          count += lineLength + newLineSeqLength\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n", "import { hyphenate, isArray, isObject, isString } from './general'\n\nexport type NormalizedStyle = Record<string, string | number>\n\nexport function normalizeStyle(\n  value: unknown,\n): NormalizedStyle | string | undefined {\n  if (isArray(value)) {\n    const res: NormalizedStyle = {}\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i]\n      const normalized = isString(item)\n        ? parseStringStyle(item)\n        : (normalizeStyle(item) as NormalizedStyle)\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key]\n        }\n      }\n    }\n    return res\n  } else if (isString(value) || isObject(value)) {\n    return value\n  }\n}\n\nconst listDelimiterRE = /;(?![^(]*\\))/g\nconst propertyDelimiterRE = /:([^]+)/\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g\n\nexport function parseStringStyle(cssText: string): NormalizedStyle {\n  const ret: NormalizedStyle = {}\n  cssText\n    .replace(styleCommentRE, '')\n    .split(listDelimiterRE)\n    .forEach(item => {\n      if (item) {\n        const tmp = item.split(propertyDelimiterRE)\n        tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\n      }\n    })\n  return ret\n}\n\nexport function stringifyStyle(\n  styles: NormalizedStyle | string | undefined,\n): string {\n  if (!styles) return ''\n  if (isString(styles)) return styles\n\n  let ret = ''\n  for (const key in styles) {\n    const value = styles[key]\n    if (isString(value) || typeof value === 'number') {\n      const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\n      // only render valid values\n      ret += `${normalizedKey}:${value};`\n    }\n  }\n  return ret\n}\n\nexport function normalizeClass(value: unknown): string {\n  let res = ''\n  if (isString(value)) {\n    res = value\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i])\n      if (normalized) {\n        res += normalized + ' '\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + ' '\n      }\n    }\n  }\n  return res.trim()\n}\n\nexport function normalizeProps(\n  props: Record<string, any> | null,\n): Record<string, any> | null {\n  if (!props) return null\n  let { class: klass, style } = props\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass)\n  }\n  if (style) {\n    props.style = normalizeStyle(style)\n  }\n  return props\n}\n", "// These tag configs are shared between compiler-dom and runtime-dom, so they\n// must be extracted in shared to avoid creating a dependency between the two.\nimport { makeMap } from './makeMap'\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst HTML_TAGS =\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\n  'header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\n  'option,output,progress,select,textarea,details,dialog,menu,' +\n  'summary,template,blockquote,iframe,tfoot'\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst SVG_TAGS =\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\n  'feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\n  'text,textPath,title,tspan,unknown,use,view'\n\n// https://www.w3.org/TR/mathml4/ (content elements excluded)\nconst MATH_TAGS =\n  'annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,' +\n  'merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,' +\n  'mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,' +\n  'mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,' +\n  'msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics'\n\nconst VOID_TAGS =\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\n\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isHTMLTag: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(HTML_TAGS)\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isSVGTag: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(SVG_TAGS)\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isMathMLTag: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(MATH_TAGS)\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\n */\nexport const isVoidTag: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(VOID_TAGS)\n", "import { makeMap } from './makeMap'\n\n/**\n * On the client we only need to offer special cases for boolean attributes that\n * have different names from their corresponding dom properties:\n * - itemscope -> N/A\n * - allowfullscreen -> allowFullscreen\n * - formnovalidate -> formNoValidate\n * - ismap -> isMap\n * - nomodule -> noModule\n * - novalidate -> noValidate\n * - readonly -> readOnly\n */\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\nexport const isSpecialBooleanAttr: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(specialBooleanAttrs)\n\n/**\n * The full list is needed during SSR to produce the correct initial markup.\n */\nexport const isBooleanAttr: (key: string) => boolean = /*@__PURE__*/ makeMap(\n  specialBooleanAttrs +\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\n    `inert,loop,open,required,reversed,scoped,seamless,` +\n    `checked,muted,multiple,selected`,\n)\n\n/**\n * Boolean attributes should be included if the value is truthy or ''.\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\n */\nexport function includeBooleanAttr(value: unknown): boolean {\n  return !!value || value === ''\n}\n\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\nconst attrValidationCache: Record<string, boolean> = {}\n\nexport function isSSRSafeAttrName(name: string): boolean {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name]\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name)\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`)\n  }\n  return (attrValidationCache[name] = !isUnsafe)\n}\n\nexport const propsToAttrMap: Record<string, string | undefined> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n}\n\n/**\n * Known attributes, this is used for stringification of runtime static nodes\n * so that we don't stringify bindings that cannot be set from HTML.\n * Don't also forget to allow `data-*` and `aria-*`!\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n */\nexport const isKnownHtmlAttr: (key: string) => boolean = /*@__PURE__*/ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,` +\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\n    `value,width,wrap`,\n)\n\n/**\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n */\nexport const isKnownSvgAttr: (key: string) => boolean = /*@__PURE__*/ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\n    `color-interpolation-filters,color-profile,color-rendering,` +\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,` +\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`,\n)\n\n/**\n * Generated from https://developer.mozilla.org/en-US/docs/Web/MathML/Attribute\n */\nexport const isKnownMathMLAttr: (key: string) => boolean =\n  /*@__PURE__*/ makeMap(\n    `accent,accentunder,actiontype,align,alignmentscope,altimg,altimg-height,` +\n      `altimg-valign,altimg-width,alttext,bevelled,close,columnsalign,columnlines,` +\n      `columnspan,denomalign,depth,dir,display,displaystyle,encoding,` +\n      `equalcolumns,equalrows,fence,fontstyle,fontweight,form,frame,framespacing,` +\n      `groupalign,height,href,id,indentalign,indentalignfirst,indentalignlast,` +\n      `indentshift,indentshiftfirst,indentshiftlast,indextype,justify,` +\n      `largetop,largeop,lquote,lspace,mathbackground,mathcolor,mathsize,` +\n      `mathvariant,maxsize,minlabelspacing,mode,other,overflow,position,` +\n      `rowalign,rowlines,rowspan,rquote,rspace,scriptlevel,scriptminsize,` +\n      `scriptsizemultiplier,selection,separator,separators,shift,side,` +\n      `src,stackalign,stretchy,subscriptshift,superscriptshift,symmetric,` +\n      `voffset,width,widths,xlink:href,xlink:show,xlink:type,xmlns`,\n  )\n\n/**\n * Shared between server-renderer and runtime-core hydration logic\n */\nexport function isRenderableAttrValue(value: unknown): boolean {\n  if (value == null) {\n    return false\n  }\n  const type = typeof value\n  return type === 'string' || type === 'number' || type === 'boolean'\n}\n", "const escapeRE = /[\"'&<>]/\n\nexport function escapeHtml(string: unknown): string {\n  const str = '' + string\n  const match = escapeRE.exec(str)\n\n  if (!match) {\n    return str\n  }\n\n  let html = ''\n  let escaped: string\n  let index: number\n  let lastIndex = 0\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escaped = '&quot;'\n        break\n      case 38: // &\n        escaped = '&amp;'\n        break\n      case 39: // '\n        escaped = '&#39;'\n        break\n      case 60: // <\n        escaped = '&lt;'\n        break\n      case 62: // >\n        escaped = '&gt;'\n        break\n      default:\n        continue\n    }\n\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index)\n    }\n\n    lastIndex = index + 1\n    html += escaped\n  }\n\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html\n}\n\n// https://www.w3.org/TR/html52/syntax.html#comments\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g\n\nexport function escapeHtmlComment(src: string): string {\n  return src.replace(commentStripRE, '')\n}\n\nexport const cssVarNameEscapeSymbolsRE: RegExp =\n  /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g\n\nexport function getEscapedCssVarName(\n  key: string,\n  doubleEscape: boolean,\n): string {\n  return key.replace(cssVarNameEscapeSymbolsRE, s =>\n    doubleEscape ? (s === '\"' ? '\\\\\\\\\\\\\"' : `\\\\\\\\${s}`) : `\\\\${s}`,\n  )\n}\n", "import { isArray, isDate, isObject, isSymbol } from './general'\n\nfunction looseCompareArrays(a: any[], b: any[]) {\n  if (a.length !== b.length) return false\n  let equal = true\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i])\n  }\n  return equal\n}\n\nexport function looseEqual(a: any, b: any): boolean {\n  if (a === b) return true\n  let aValidType = isDate(a)\n  let bValidType = isDate(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\n  }\n  aValidType = isSymbol(a)\n  bValidType = isSymbol(b)\n  if (aValidType || bValidType) {\n    return a === b\n  }\n  aValidType = isArray(a)\n  bValidType = isArray(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\n  }\n  aValidType = isObject(a)\n  bValidType = isObject(b)\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false\n    }\n    const aKeysCount = Object.keys(a).length\n    const bKeysCount = Object.keys(b).length\n    if (aKeysCount !== bKeysCount) {\n      return false\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key)\n      const bHasKey = b.hasOwnProperty(key)\n      if (\n        (aHasKey && !bHasKey) ||\n        (!aHasKey && bHasKey) ||\n        !looseEqual(a[key], b[key])\n      ) {\n        return false\n      }\n    }\n  }\n  return String(a) === String(b)\n}\n\nexport function looseIndexOf(arr: any[], val: any): number {\n  return arr.findIndex(item => looseEqual(item, val))\n}\n", "// enums are compiled away via custom transform so no real dependency here\nimport { ReactiveFlags } from '@vue/reactivity'\nimport {\n  isArray,\n  isFunction,\n  isMap,\n  isObject,\n  isPlainObject,\n  isSet,\n  isString,\n  isSymbol,\n  objectToString,\n} from './general'\n\n// can't use isRef here since @vue/shared has no deps\nconst isRef = (val: any): val is { value: unknown } => {\n  return !!(val && val[ReactiveFlags.IS_REF] === true)\n}\n\n/**\n * For converting {{ interpolation }} values to displayed strings.\n * @private\n */\nexport const toDisplayString = (val: unknown): string => {\n  return isString(val)\n    ? val\n    : val == null\n      ? ''\n      : isArray(val) ||\n          (isObject(val) &&\n            (val.toString === objectToString || !isFunction(val.toString)))\n        ? isRef(val)\n          ? toDisplayString(val.value)\n          : JSON.stringify(val, replacer, 2)\n        : String(val)\n}\n\nconst replacer = (_key: string, val: unknown): any => {\n  if (isRef(val)) {\n    return replacer(_key, val.value)\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val], i) => {\n          entries[stringifySymbol(key, i) + ' =>'] = val\n          return entries\n        },\n        {} as Record<string, any>,\n      ),\n    }\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map(v => stringifySymbol(v)),\n    }\n  } else if (isSymbol(val)) {\n    return stringifySymbol(val)\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    // native elements\n    return String(val)\n  }\n  return val\n}\n\nconst stringifySymbol = (v: unknown, i: number | string = ''): any =>\n  // Symbol.description in es2019+ so we need to cast here to pass\n  // the lib: es2016 check\n  isSymbol(v) ? `Symbol(${(v as any).description ?? i})` : v\n", "// using literal strings instead of numbers so that it's easier to inspect\n// debugger events\n\nexport enum TrackOpTypes {\n  GET = 'get',\n  HAS = 'has',\n  ITERATE = 'iterate',\n}\n\nexport enum TriggerOpTypes {\n  SET = 'set',\n  ADD = 'add',\n  DELETE = 'delete',\n  CLEAR = 'clear',\n}\n\nexport enum ReactiveFlags {\n  SKIP = '__v_skip',\n  IS_REACTIVE = '__v_isReactive',\n  IS_READONLY = '__v_isReadonly',\n  IS_SHALLOW = '__v_isShallow',\n  RAW = '__v_raw',\n  IS_REF = '__v_isRef',\n}\n", "export function warn(msg: string, ...args: any[]): void {\n  console.warn(`[Vue warn] ${msg}`, ...args)\n}\n", "import type { ReactiveEffect } from './effect'\nimport { warn } from './warning'\n\nexport let activeEffectScope: EffectScope | undefined\n\nexport class EffectScope {\n  /**\n   * @internal\n   */\n  private _active = true\n  /**\n   * @internal\n   */\n  effects: ReactiveEffect[] = []\n  /**\n   * @internal\n   */\n  cleanups: (() => void)[] = []\n\n  private _isPaused = false\n\n  /**\n   * only assigned by undetached scope\n   * @internal\n   */\n  parent: EffectScope | undefined\n  /**\n   * record undetached scopes\n   * @internal\n   */\n  scopes: EffectScope[] | undefined\n  /**\n   * track a child scope's index in its parent's scopes array for optimized\n   * removal\n   * @internal\n   */\n  private index: number | undefined\n\n  constructor(public detached = false) {\n    this.parent = activeEffectScope\n    if (!detached && activeEffectScope) {\n      this.index =\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n          this,\n        ) - 1\n    }\n  }\n\n  get active(): boolean {\n    return this._active\n  }\n\n  pause(): void {\n    if (this._active) {\n      this._isPaused = true\n      let i, l\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].pause()\n        }\n      }\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].pause()\n      }\n    }\n  }\n\n  /**\n   * Resumes the effect scope, including all child scopes and effects.\n   */\n  resume(): void {\n    if (this._active) {\n      if (this._isPaused) {\n        this._isPaused = false\n        let i, l\n        if (this.scopes) {\n          for (i = 0, l = this.scopes.length; i < l; i++) {\n            this.scopes[i].resume()\n          }\n        }\n        for (i = 0, l = this.effects.length; i < l; i++) {\n          this.effects[i].resume()\n        }\n      }\n    }\n  }\n\n  run<T>(fn: () => T): T | undefined {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope\n      try {\n        activeEffectScope = this\n        return fn()\n      } finally {\n        activeEffectScope = currentEffectScope\n      }\n    } else if (__DEV__) {\n      warn(`cannot run an inactive effect scope.`)\n    }\n  }\n\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on(): void {\n    activeEffectScope = this\n  }\n\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off(): void {\n    activeEffectScope = this.parent\n  }\n\n  stop(fromParent?: boolean): void {\n    if (this._active) {\n      this._active = false\n      let i, l\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop()\n      }\n      this.effects.length = 0\n\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]()\n      }\n      this.cleanups.length = 0\n\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true)\n        }\n        this.scopes.length = 0\n      }\n\n      // nested scope, dereference from parent to avoid memory leaks\n      if (!this.detached && this.parent && !fromParent) {\n        // optimized O(1) removal\n        const last = this.parent.scopes!.pop()\n        if (last && last !== this) {\n          this.parent.scopes![this.index!] = last\n          last.index = this.index!\n        }\n      }\n      this.parent = undefined\n    }\n  }\n}\n\n/**\n * Creates an effect scope object which can capture the reactive effects (i.e.\n * computed and watchers) created within it so that these effects can be\n * disposed together. For detailed use cases of this API, please consult its\n * corresponding {@link https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md | RFC}.\n *\n * @param detached - Can be used to create a \"detached\" effect scope.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#effectscope}\n */\nexport function effectScope(detached?: boolean): EffectScope {\n  return new EffectScope(detached)\n}\n\n/**\n * Returns the current active effect scope if there is one.\n *\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#getcurrentscope}\n */\nexport function getCurrentScope(): EffectScope | undefined {\n  return activeEffectScope\n}\n\n/**\n * Registers a dispose callback on the current active effect scope. The\n * callback will be invoked when the associated effect scope is stopped.\n *\n * @param fn - The callback function to attach to the scope's cleanup.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#onscopedispose}\n */\nexport function onScopeDispose(fn: () => void, failSilently = false): void {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn)\n  } else if (__DEV__ && !failSilently) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope` +\n        ` to be associated with.`,\n    )\n  }\n}\n", "import { extend, hasChanged } from '@vue/shared'\nimport type { ComputedRefImpl } from './computed'\nimport type { TrackOpTypes, TriggerOpTypes } from './constants'\nimport { type Link, globalVersion } from './dep'\nimport { activeEffectScope } from './effectScope'\nimport { warn } from './warning'\n\nexport type EffectScheduler = (...args: any[]) => any\n\nexport type DebuggerEvent = {\n  effect: Subscriber\n} & DebuggerEventExtraInfo\n\nexport type DebuggerEventExtraInfo = {\n  target: object\n  type: TrackOpTypes | TriggerOpTypes\n  key: any\n  newValue?: any\n  oldValue?: any\n  oldTarget?: Map<any, any> | Set<any>\n}\n\nexport interface DebuggerOptions {\n  onTrack?: (event: DebuggerEvent) => void\n  onTrigger?: (event: DebuggerEvent) => void\n}\n\nexport interface ReactiveEffectOptions extends DebuggerOptions {\n  scheduler?: EffectScheduler\n  allowRecurse?: boolean\n  onStop?: () => void\n}\n\nexport interface ReactiveEffectRunner<T = any> {\n  (): T\n  effect: ReactiveEffect\n}\n\nexport let activeSub: Subscriber | undefined\n\nexport enum EffectFlags {\n  /**\n   * ReactiveEffect only\n   */\n  ACTIVE = 1 << 0,\n  RUNNING = 1 << 1,\n  TRACKING = 1 << 2,\n  NOTIFIED = 1 << 3,\n  DIRTY = 1 << 4,\n  ALLOW_RECURSE = 1 << 5,\n  PAUSED = 1 << 6,\n}\n\n/**\n * Subscriber is a type that tracks (or subscribes to) a list of deps.\n */\nexport interface Subscriber extends DebuggerOptions {\n  /**\n   * Head of the doubly linked list representing the deps\n   * @internal\n   */\n  deps?: Link\n  /**\n   * Tail of the same list\n   * @internal\n   */\n  depsTail?: Link\n  /**\n   * @internal\n   */\n  flags: EffectFlags\n  /**\n   * @internal\n   */\n  next?: Subscriber\n  /**\n   * returning `true` indicates it's a computed that needs to call notify\n   * on its dep too\n   * @internal\n   */\n  notify(): true | void\n}\n\nconst pausedQueueEffects = new WeakSet<ReactiveEffect>()\n\nexport class ReactiveEffect<T = any>\n  implements Subscriber, ReactiveEffectOptions\n{\n  /**\n   * @internal\n   */\n  deps?: Link = undefined\n  /**\n   * @internal\n   */\n  depsTail?: Link = undefined\n  /**\n   * @internal\n   */\n  flags: EffectFlags = EffectFlags.ACTIVE | EffectFlags.TRACKING\n  /**\n   * @internal\n   */\n  next?: Subscriber = undefined\n  /**\n   * @internal\n   */\n  cleanup?: () => void = undefined\n\n  scheduler?: EffectScheduler = undefined\n  onStop?: () => void\n  onTrack?: (event: DebuggerEvent) => void\n  onTrigger?: (event: DebuggerEvent) => void\n\n  constructor(public fn: () => T) {\n    if (activeEffectScope && activeEffectScope.active) {\n      activeEffectScope.effects.push(this)\n    }\n  }\n\n  pause(): void {\n    this.flags |= EffectFlags.PAUSED\n  }\n\n  resume(): void {\n    if (this.flags & EffectFlags.PAUSED) {\n      this.flags &= ~EffectFlags.PAUSED\n      if (pausedQueueEffects.has(this)) {\n        pausedQueueEffects.delete(this)\n        this.trigger()\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  notify(): void {\n    if (\n      this.flags & EffectFlags.RUNNING &&\n      !(this.flags & EffectFlags.ALLOW_RECURSE)\n    ) {\n      return\n    }\n    if (!(this.flags & EffectFlags.NOTIFIED)) {\n      batch(this)\n    }\n  }\n\n  run(): T {\n    // TODO cleanupEffect\n\n    if (!(this.flags & EffectFlags.ACTIVE)) {\n      // stopped during cleanup\n      return this.fn()\n    }\n\n    this.flags |= EffectFlags.RUNNING\n    cleanupEffect(this)\n    prepareDeps(this)\n    const prevEffect = activeSub\n    const prevShouldTrack = shouldTrack\n    activeSub = this\n    shouldTrack = true\n\n    try {\n      return this.fn()\n    } finally {\n      if (__DEV__ && activeSub !== this) {\n        warn(\n          'Active effect was not restored correctly - ' +\n            'this is likely a Vue internal bug.',\n        )\n      }\n      cleanupDeps(this)\n      activeSub = prevEffect\n      shouldTrack = prevShouldTrack\n      this.flags &= ~EffectFlags.RUNNING\n    }\n  }\n\n  stop(): void {\n    if (this.flags & EffectFlags.ACTIVE) {\n      for (let link = this.deps; link; link = link.nextDep) {\n        removeSub(link)\n      }\n      this.deps = this.depsTail = undefined\n      cleanupEffect(this)\n      this.onStop && this.onStop()\n      this.flags &= ~EffectFlags.ACTIVE\n    }\n  }\n\n  trigger(): void {\n    if (this.flags & EffectFlags.PAUSED) {\n      pausedQueueEffects.add(this)\n    } else if (this.scheduler) {\n      this.scheduler()\n    } else {\n      this.runIfDirty()\n    }\n  }\n\n  /**\n   * @internal\n   */\n  runIfDirty(): void {\n    if (isDirty(this)) {\n      this.run()\n    }\n  }\n\n  get dirty(): boolean {\n    return isDirty(this)\n  }\n}\n\n/**\n * For debugging\n */\n// function printDeps(sub: Subscriber) {\n//   let d = sub.deps\n//   let ds = []\n//   while (d) {\n//     ds.push(d)\n//     d = d.nextDep\n//   }\n//   return ds.map(d => ({\n//     id: d.id,\n//     prev: d.prevDep?.id,\n//     next: d.nextDep?.id,\n//   }))\n// }\n\nlet batchDepth = 0\nlet batchedSub: Subscriber | undefined\nlet batchedComputed: Subscriber | undefined\n\nexport function batch(sub: Subscriber, isComputed = false): void {\n  sub.flags |= EffectFlags.NOTIFIED\n  if (isComputed) {\n    sub.next = batchedComputed\n    batchedComputed = sub\n    return\n  }\n  sub.next = batchedSub\n  batchedSub = sub\n}\n\n/**\n * @internal\n */\nexport function startBatch(): void {\n  batchDepth++\n}\n\n/**\n * Run batched effects when all batches have ended\n * @internal\n */\nexport function endBatch(): void {\n  if (--batchDepth > 0) {\n    return\n  }\n\n  if (batchedComputed) {\n    let e: Subscriber | undefined = batchedComputed\n    batchedComputed = undefined\n    while (e) {\n      const next: Subscriber | undefined = e.next\n      e.next = undefined\n      e.flags &= ~EffectFlags.NOTIFIED\n      e = next\n    }\n  }\n\n  let error: unknown\n  while (batchedSub) {\n    let e: Subscriber | undefined = batchedSub\n    batchedSub = undefined\n    while (e) {\n      const next: Subscriber | undefined = e.next\n      e.next = undefined\n      e.flags &= ~EffectFlags.NOTIFIED\n      if (e.flags & EffectFlags.ACTIVE) {\n        try {\n          // ACTIVE flag is effect-only\n          ;(e as ReactiveEffect).trigger()\n        } catch (err) {\n          if (!error) error = err\n        }\n      }\n      e = next\n    }\n  }\n\n  if (error) throw error\n}\n\nfunction prepareDeps(sub: Subscriber) {\n  // Prepare deps for tracking, starting from the head\n  for (let link = sub.deps; link; link = link.nextDep) {\n    // set all previous deps' (if any) version to -1 so that we can track\n    // which ones are unused after the run\n    link.version = -1\n    // store previous active sub if link was being used in another context\n    link.prevActiveLink = link.dep.activeLink\n    link.dep.activeLink = link\n  }\n}\n\nfunction cleanupDeps(sub: Subscriber) {\n  // Cleanup unsued deps\n  let head\n  let tail = sub.depsTail\n  let link = tail\n  while (link) {\n    const prev = link.prevDep\n    if (link.version === -1) {\n      if (link === tail) tail = prev\n      // unused - remove it from the dep's subscribing effect list\n      removeSub(link)\n      // also remove it from this effect's dep list\n      removeDep(link)\n    } else {\n      // The new head is the last node seen which wasn't removed\n      // from the doubly-linked list\n      head = link\n    }\n\n    // restore previous active link if any\n    link.dep.activeLink = link.prevActiveLink\n    link.prevActiveLink = undefined\n    link = prev\n  }\n  // set the new head & tail\n  sub.deps = head\n  sub.depsTail = tail\n}\n\nfunction isDirty(sub: Subscriber): boolean {\n  for (let link = sub.deps; link; link = link.nextDep) {\n    if (\n      link.dep.version !== link.version ||\n      (link.dep.computed &&\n        (refreshComputed(link.dep.computed) ||\n          link.dep.version !== link.version))\n    ) {\n      return true\n    }\n  }\n  // @ts-expect-error only for backwards compatibility where libs manually set\n  // this flag - e.g. Pinia's testing module\n  if (sub._dirty) {\n    return true\n  }\n  return false\n}\n\n/**\n * Returning false indicates the refresh failed\n * @internal\n */\nexport function refreshComputed(computed: ComputedRefImpl): undefined {\n  if (\n    computed.flags & EffectFlags.TRACKING &&\n    !(computed.flags & EffectFlags.DIRTY)\n  ) {\n    return\n  }\n  computed.flags &= ~EffectFlags.DIRTY\n\n  // Global version fast path when no reactive changes has happened since\n  // last refresh.\n  if (computed.globalVersion === globalVersion) {\n    return\n  }\n  computed.globalVersion = globalVersion\n\n  const dep = computed.dep\n  computed.flags |= EffectFlags.RUNNING\n  // In SSR there will be no render effect, so the computed has no subscriber\n  // and therefore tracks no deps, thus we cannot rely on the dirty check.\n  // Instead, computed always re-evaluate and relies on the globalVersion\n  // fast path above for caching.\n  if (\n    dep.version > 0 &&\n    !computed.isSSR &&\n    computed.deps &&\n    !isDirty(computed)\n  ) {\n    computed.flags &= ~EffectFlags.RUNNING\n    return\n  }\n\n  const prevSub = activeSub\n  const prevShouldTrack = shouldTrack\n  activeSub = computed\n  shouldTrack = true\n\n  try {\n    prepareDeps(computed)\n    const value = computed.fn(computed._value)\n    if (dep.version === 0 || hasChanged(value, computed._value)) {\n      computed._value = value\n      dep.version++\n    }\n  } catch (err) {\n    dep.version++\n    throw err\n  } finally {\n    activeSub = prevSub\n    shouldTrack = prevShouldTrack\n    cleanupDeps(computed)\n    computed.flags &= ~EffectFlags.RUNNING\n  }\n}\n\nfunction removeSub(link: Link, soft = false) {\n  const { dep, prevSub, nextSub } = link\n  if (prevSub) {\n    prevSub.nextSub = nextSub\n    link.prevSub = undefined\n  }\n  if (nextSub) {\n    nextSub.prevSub = prevSub\n    link.nextSub = undefined\n  }\n  if (__DEV__ && dep.subsHead === link) {\n    // was previous head, point new head to next\n    dep.subsHead = nextSub\n  }\n\n  if (dep.subs === link) {\n    // was previous tail, point new tail to prev\n    dep.subs = prevSub\n\n    if (!prevSub && dep.computed) {\n      // if computed, unsubscribe it from all its deps so this computed and its\n      // value can be GCed\n      dep.computed.flags &= ~EffectFlags.TRACKING\n      for (let l = dep.computed.deps; l; l = l.nextDep) {\n        // here we are only \"soft\" unsubscribing because the computed still keeps\n        // referencing the deps and the dep should not decrease its sub count\n        removeSub(l, true)\n      }\n    }\n  }\n\n  if (!soft && !--dep.sc && dep.map) {\n    // #11979\n    // property dep no longer has effect subscribers, delete it\n    // this mostly is for the case where an object is kept in memory but only a\n    // subset of its properties is tracked at one time\n    dep.map.delete(dep.key)\n  }\n}\n\nfunction removeDep(link: Link) {\n  const { prevDep, nextDep } = link\n  if (prevDep) {\n    prevDep.nextDep = nextDep\n    link.prevDep = undefined\n  }\n  if (nextDep) {\n    nextDep.prevDep = prevDep\n    link.nextDep = undefined\n  }\n}\n\nexport interface ReactiveEffectRunner<T = any> {\n  (): T\n  effect: ReactiveEffect\n}\n\nexport function effect<T = any>(\n  fn: () => T,\n  options?: ReactiveEffectOptions,\n): ReactiveEffectRunner<T> {\n  if ((fn as ReactiveEffectRunner).effect instanceof ReactiveEffect) {\n    fn = (fn as ReactiveEffectRunner).effect.fn\n  }\n\n  const e = new ReactiveEffect(fn)\n  if (options) {\n    extend(e, options)\n  }\n  try {\n    e.run()\n  } catch (err) {\n    e.stop()\n    throw err\n  }\n  const runner = e.run.bind(e) as ReactiveEffectRunner\n  runner.effect = e\n  return runner\n}\n\n/**\n * Stops the effect associated with the given runner.\n *\n * @param runner - Association with the effect to stop tracking.\n */\nexport function stop(runner: ReactiveEffectRunner): void {\n  runner.effect.stop()\n}\n\n/**\n * @internal\n */\nexport let shouldTrack = true\nconst trackStack: boolean[] = []\n\n/**\n * Temporarily pauses tracking.\n */\nexport function pauseTracking(): void {\n  trackStack.push(shouldTrack)\n  shouldTrack = false\n}\n\n/**\n * Re-enables effect tracking (if it was paused).\n */\nexport function enableTracking(): void {\n  trackStack.push(shouldTrack)\n  shouldTrack = true\n}\n\n/**\n * Resets the previous global effect tracking state.\n */\nexport function resetTracking(): void {\n  const last = trackStack.pop()\n  shouldTrack = last === undefined ? true : last\n}\n\n/**\n * Registers a cleanup function for the current active effect.\n * The cleanup function is called right before the next effect run, or when the\n * effect is stopped.\n *\n * Throws a warning if there is no current active effect. The warning can be\n * suppressed by passing `true` to the second argument.\n *\n * @param fn - the cleanup function to be registered\n * @param failSilently - if `true`, will not throw warning when called without\n * an active effect.\n */\nexport function onEffectCleanup(fn: () => void, failSilently = false): void {\n  if (activeSub instanceof ReactiveEffect) {\n    activeSub.cleanup = fn\n  } else if (__DEV__ && !failSilently) {\n    warn(\n      `onEffectCleanup() was called when there was no active effect` +\n        ` to associate with.`,\n    )\n  }\n}\n\nfunction cleanupEffect(e: ReactiveEffect) {\n  const { cleanup } = e\n  e.cleanup = undefined\n  if (cleanup) {\n    // run cleanup without active effect\n    const prevSub = activeSub\n    activeSub = undefined\n    try {\n      cleanup()\n    } finally {\n      activeSub = prevSub\n    }\n  }\n}\n", "import { extend, isArray, isIntegerKey, isMap, isSymbol } from '@vue/shared'\nimport type { ComputedRefImpl } from './computed'\nimport { type TrackOpTypes, TriggerOpTypes } from './constants'\nimport {\n  type DebuggerEventExtraInfo,\n  EffectFlags,\n  type Subscriber,\n  activeSub,\n  endBatch,\n  shouldTrack,\n  startBatch,\n} from './effect'\n\n/**\n * Incremented every time a reactive change happens\n * This is used to give computed a fast path to avoid re-compute when nothing\n * has changed.\n */\nexport let globalVersion = 0\n\n/**\n * Represents a link between a source (Dep) and a subscriber (Effect or Computed).\n * Deps and subs have a many-to-many relationship - each link between a\n * dep and a sub is represented by a Link instance.\n *\n * A Link is also a node in two doubly-linked lists - one for the associated\n * sub to track all its deps, and one for the associated dep to track all its\n * subs.\n *\n * @internal\n */\nexport class Link {\n  /**\n   * - Before each effect run, all previous dep links' version are reset to -1\n   * - During the run, a link's version is synced with the source dep on access\n   * - After the run, links with version -1 (that were never used) are cleaned\n   *   up\n   */\n  version: number\n\n  /**\n   * Pointers for doubly-linked lists\n   */\n  nextDep?: Link\n  prevDep?: Link\n  nextSub?: Link\n  prevSub?: Link\n  prevActiveLink?: Link\n\n  constructor(\n    public sub: Subscriber,\n    public dep: Dep,\n  ) {\n    this.version = dep.version\n    this.nextDep =\n      this.prevDep =\n      this.nextSub =\n      this.prevSub =\n      this.prevActiveLink =\n        undefined\n  }\n}\n\n/**\n * @internal\n */\nexport class Dep {\n  version = 0\n  /**\n   * Link between this dep and the current active effect\n   */\n  activeLink?: Link = undefined\n\n  /**\n   * Doubly linked list representing the subscribing effects (tail)\n   */\n  subs?: Link = undefined\n\n  /**\n   * Doubly linked list representing the subscribing effects (head)\n   * DEV only, for invoking onTrigger hooks in correct order\n   */\n  subsHead?: Link\n\n  /**\n   * For object property deps cleanup\n   */\n  map?: KeyToDepMap = undefined\n  key?: unknown = undefined\n\n  /**\n   * Subscriber counter\n   */\n  sc: number = 0\n\n  constructor(public computed?: ComputedRefImpl | undefined) {\n    if (__DEV__) {\n      this.subsHead = undefined\n    }\n  }\n\n  track(debugInfo?: DebuggerEventExtraInfo): Link | undefined {\n    if (!activeSub || !shouldTrack || activeSub === this.computed) {\n      return\n    }\n\n    let link = this.activeLink\n    if (link === undefined || link.sub !== activeSub) {\n      link = this.activeLink = new Link(activeSub, this)\n\n      // add the link to the activeEffect as a dep (as tail)\n      if (!activeSub.deps) {\n        activeSub.deps = activeSub.depsTail = link\n      } else {\n        link.prevDep = activeSub.depsTail\n        activeSub.depsTail!.nextDep = link\n        activeSub.depsTail = link\n      }\n\n      addSub(link)\n    } else if (link.version === -1) {\n      // reused from last run - already a sub, just sync version\n      link.version = this.version\n\n      // If this dep has a next, it means it's not at the tail - move it to the\n      // tail. This ensures the effect's dep list is in the order they are\n      // accessed during evaluation.\n      if (link.nextDep) {\n        const next = link.nextDep\n        next.prevDep = link.prevDep\n        if (link.prevDep) {\n          link.prevDep.nextDep = next\n        }\n\n        link.prevDep = activeSub.depsTail\n        link.nextDep = undefined\n        activeSub.depsTail!.nextDep = link\n        activeSub.depsTail = link\n\n        // this was the head - point to the new head\n        if (activeSub.deps === link) {\n          activeSub.deps = next\n        }\n      }\n    }\n\n    if (__DEV__ && activeSub.onTrack) {\n      activeSub.onTrack(\n        extend(\n          {\n            effect: activeSub,\n          },\n          debugInfo,\n        ),\n      )\n    }\n\n    return link\n  }\n\n  trigger(debugInfo?: DebuggerEventExtraInfo): void {\n    this.version++\n    globalVersion++\n    this.notify(debugInfo)\n  }\n\n  notify(debugInfo?: DebuggerEventExtraInfo): void {\n    startBatch()\n    try {\n      if (__DEV__) {\n        // subs are notified and batched in reverse-order and then invoked in\n        // original order at the end of the batch, but onTrigger hooks should\n        // be invoked in original order here.\n        for (let head = this.subsHead; head; head = head.nextSub) {\n          if (head.sub.onTrigger && !(head.sub.flags & EffectFlags.NOTIFIED)) {\n            head.sub.onTrigger(\n              extend(\n                {\n                  effect: head.sub,\n                },\n                debugInfo,\n              ),\n            )\n          }\n        }\n      }\n      for (let link = this.subs; link; link = link.prevSub) {\n        if (link.sub.notify()) {\n          // if notify() returns `true`, this is a computed. Also call notify\n          // on its dep - it's called here instead of inside computed's notify\n          // in order to reduce call stack depth.\n          ;(link.sub as ComputedRefImpl).dep.notify()\n        }\n      }\n    } finally {\n      endBatch()\n    }\n  }\n}\n\nfunction addSub(link: Link) {\n  link.dep.sc++\n  if (link.sub.flags & EffectFlags.TRACKING) {\n    const computed = link.dep.computed\n    // computed getting its first subscriber\n    // enable tracking + lazily subscribe to all its deps\n    if (computed && !link.dep.subs) {\n      computed.flags |= EffectFlags.TRACKING | EffectFlags.DIRTY\n      for (let l = computed.deps; l; l = l.nextDep) {\n        addSub(l)\n      }\n    }\n\n    const currentTail = link.dep.subs\n    if (currentTail !== link) {\n      link.prevSub = currentTail\n      if (currentTail) currentTail.nextSub = link\n    }\n\n    if (__DEV__ && link.dep.subsHead === undefined) {\n      link.dep.subsHead = link\n    }\n\n    link.dep.subs = link\n  }\n}\n\n// The main WeakMap that stores {target -> key -> dep} connections.\n// Conceptually, it's easier to think of a dependency as a Dep class\n// which maintains a Set of subscribers, but we simply store them as\n// raw Maps to reduce memory overhead.\ntype KeyToDepMap = Map<any, Dep>\n\nexport const targetMap: WeakMap<object, KeyToDepMap> = new WeakMap()\n\nexport const ITERATE_KEY: unique symbol = Symbol(\n  __DEV__ ? 'Object iterate' : '',\n)\nexport const MAP_KEY_ITERATE_KEY: unique symbol = Symbol(\n  __DEV__ ? 'Map keys iterate' : '',\n)\nexport const ARRAY_ITERATE_KEY: unique symbol = Symbol(\n  __DEV__ ? 'Array iterate' : '',\n)\n\n/**\n * Tracks access to a reactive property.\n *\n * This will check which effect is running at the moment and record it as dep\n * which records all effects that depend on the reactive property.\n *\n * @param target - Object holding the reactive property.\n * @param type - Defines the type of access to the reactive property.\n * @param key - Identifier of the reactive property to track.\n */\nexport function track(target: object, type: TrackOpTypes, key: unknown): void {\n  if (shouldTrack && activeSub) {\n    let depsMap = targetMap.get(target)\n    if (!depsMap) {\n      targetMap.set(target, (depsMap = new Map()))\n    }\n    let dep = depsMap.get(key)\n    if (!dep) {\n      depsMap.set(key, (dep = new Dep()))\n      dep.map = depsMap\n      dep.key = key\n    }\n    if (__DEV__) {\n      dep.track({\n        target,\n        type,\n        key,\n      })\n    } else {\n      dep.track()\n    }\n  }\n}\n\n/**\n * Finds all deps associated with the target (or a specific property) and\n * triggers the effects stored within.\n *\n * @param target - The reactive object.\n * @param type - Defines the type of the operation that needs to trigger effects.\n * @param key - Can be used to target a specific reactive property in the target object.\n */\nexport function trigger(\n  target: object,\n  type: TriggerOpTypes,\n  key?: unknown,\n  newValue?: unknown,\n  oldValue?: unknown,\n  oldTarget?: Map<unknown, unknown> | Set<unknown>,\n): void {\n  const depsMap = targetMap.get(target)\n  if (!depsMap) {\n    // never been tracked\n    globalVersion++\n    return\n  }\n\n  const run = (dep: Dep | undefined) => {\n    if (dep) {\n      if (__DEV__) {\n        dep.trigger({\n          target,\n          type,\n          key,\n          newValue,\n          oldValue,\n          oldTarget,\n        })\n      } else {\n        dep.trigger()\n      }\n    }\n  }\n\n  startBatch()\n\n  if (type === TriggerOpTypes.CLEAR) {\n    // collection being cleared\n    // trigger all effects for target\n    depsMap.forEach(run)\n  } else {\n    const targetIsArray = isArray(target)\n    const isArrayIndex = targetIsArray && isIntegerKey(key)\n\n    if (targetIsArray && key === 'length') {\n      const newLength = Number(newValue)\n      depsMap.forEach((dep, key) => {\n        if (\n          key === 'length' ||\n          key === ARRAY_ITERATE_KEY ||\n          (!isSymbol(key) && key >= newLength)\n        ) {\n          run(dep)\n        }\n      })\n    } else {\n      // schedule runs for SET | ADD | DELETE\n      if (key !== void 0 || depsMap.has(void 0)) {\n        run(depsMap.get(key))\n      }\n\n      // schedule ARRAY_ITERATE for any numeric key change (length is handled above)\n      if (isArrayIndex) {\n        run(depsMap.get(ARRAY_ITERATE_KEY))\n      }\n\n      // also run for iteration key on ADD | DELETE | Map.SET\n      switch (type) {\n        case TriggerOpTypes.ADD:\n          if (!targetIsArray) {\n            run(depsMap.get(ITERATE_KEY))\n            if (isMap(target)) {\n              run(depsMap.get(MAP_KEY_ITERATE_KEY))\n            }\n          } else if (isArrayIndex) {\n            // new index added to array -> length changes\n            run(depsMap.get('length'))\n          }\n          break\n        case TriggerOpTypes.DELETE:\n          if (!targetIsArray) {\n            run(depsMap.get(ITERATE_KEY))\n            if (isMap(target)) {\n              run(depsMap.get(MAP_KEY_ITERATE_KEY))\n            }\n          }\n          break\n        case TriggerOpTypes.SET:\n          if (isMap(target)) {\n            run(depsMap.get(ITERATE_KEY))\n          }\n          break\n      }\n    }\n  }\n\n  endBatch()\n}\n\nexport function getDepFromReactive(\n  object: any,\n  key: string | number | symbol,\n): Dep | undefined {\n  const depMap = targetMap.get(object)\n  return depMap && depMap.get(key)\n}\n", "import { TrackOpTypes } from './constants'\nimport { endBatch, pauseTracking, resetTracking, startBatch } from './effect'\nimport { isProxy, isShallow, toRaw, toReactive } from './reactive'\nimport { ARRAY_ITERATE_KEY, track } from './dep'\nimport { isArray } from '@vue/shared'\n\n/**\n * Track array iteration and return:\n * - if input is reactive: a cloned raw array with reactive values\n * - if input is non-reactive or shallowReactive: the original raw array\n */\nexport function reactiveReadArray<T>(array: T[]): T[] {\n  const raw = toRaw(array)\n  if (raw === array) return raw\n  track(raw, TrackOpTypes.ITERATE, ARRAY_ITERATE_KEY)\n  return isShallow(array) ? raw : raw.map(toReactive)\n}\n\n/**\n * Track array iteration and return raw array\n */\nexport function shallowReadArray<T>(arr: T[]): T[] {\n  track((arr = toRaw(arr)), TrackOpTypes.ITERATE, ARRAY_ITERATE_KEY)\n  return arr\n}\n\nexport const arrayInstrumentations: Record<string | symbol, Function> = <any>{\n  __proto__: null,\n\n  [Symbol.iterator]() {\n    return iterator(this, Symbol.iterator, toReactive)\n  },\n\n  concat(...args: unknown[]) {\n    return reactiveReadArray(this).concat(\n      ...args.map(x => (isArray(x) ? reactiveReadArray(x) : x)),\n    )\n  },\n\n  entries() {\n    return iterator(this, 'entries', (value: [number, unknown]) => {\n      value[1] = toReactive(value[1])\n      return value\n    })\n  },\n\n  every(\n    fn: (item: unknown, index: number, array: unknown[]) => unknown,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'every', fn, thisArg, undefined, arguments)\n  },\n\n  filter(\n    fn: (item: unknown, index: number, array: unknown[]) => unknown,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'filter', fn, thisArg, v => v.map(toReactive), arguments)\n  },\n\n  find(\n    fn: (item: unknown, index: number, array: unknown[]) => boolean,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'find', fn, thisArg, toReactive, arguments)\n  },\n\n  findIndex(\n    fn: (item: unknown, index: number, array: unknown[]) => boolean,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'findIndex', fn, thisArg, undefined, arguments)\n  },\n\n  findLast(\n    fn: (item: unknown, index: number, array: unknown[]) => boolean,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'findLast', fn, thisArg, toReactive, arguments)\n  },\n\n  findLastIndex(\n    fn: (item: unknown, index: number, array: unknown[]) => boolean,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'findLastIndex', fn, thisArg, undefined, arguments)\n  },\n\n  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement\n\n  forEach(\n    fn: (item: unknown, index: number, array: unknown[]) => unknown,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'forEach', fn, thisArg, undefined, arguments)\n  },\n\n  includes(...args: unknown[]) {\n    return searchProxy(this, 'includes', args)\n  },\n\n  indexOf(...args: unknown[]) {\n    return searchProxy(this, 'indexOf', args)\n  },\n\n  join(separator?: string) {\n    return reactiveReadArray(this).join(separator)\n  },\n\n  // keys() iterator only reads `length`, no optimisation required\n\n  lastIndexOf(...args: unknown[]) {\n    return searchProxy(this, 'lastIndexOf', args)\n  },\n\n  map(\n    fn: (item: unknown, index: number, array: unknown[]) => unknown,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'map', fn, thisArg, undefined, arguments)\n  },\n\n  pop() {\n    return noTracking(this, 'pop')\n  },\n\n  push(...args: unknown[]) {\n    return noTracking(this, 'push', args)\n  },\n\n  reduce(\n    fn: (\n      acc: unknown,\n      item: unknown,\n      index: number,\n      array: unknown[],\n    ) => unknown,\n    ...args: unknown[]\n  ) {\n    return reduce(this, 'reduce', fn, args)\n  },\n\n  reduceRight(\n    fn: (\n      acc: unknown,\n      item: unknown,\n      index: number,\n      array: unknown[],\n    ) => unknown,\n    ...args: unknown[]\n  ) {\n    return reduce(this, 'reduceRight', fn, args)\n  },\n\n  shift() {\n    return noTracking(this, 'shift')\n  },\n\n  // slice could use ARRAY_ITERATE but also seems to beg for range tracking\n\n  some(\n    fn: (item: unknown, index: number, array: unknown[]) => unknown,\n    thisArg?: unknown,\n  ) {\n    return apply(this, 'some', fn, thisArg, undefined, arguments)\n  },\n\n  splice(...args: unknown[]) {\n    return noTracking(this, 'splice', args)\n  },\n\n  toReversed() {\n    // @ts-expect-error user code may run in es2016+\n    return reactiveReadArray(this).toReversed()\n  },\n\n  toSorted(comparer?: (a: unknown, b: unknown) => number) {\n    // @ts-expect-error user code may run in es2016+\n    return reactiveReadArray(this).toSorted(comparer)\n  },\n\n  toSpliced(...args: unknown[]) {\n    // @ts-expect-error user code may run in es2016+\n    return (reactiveReadArray(this).toSpliced as any)(...args)\n  },\n\n  unshift(...args: unknown[]) {\n    return noTracking(this, 'unshift', args)\n  },\n\n  values() {\n    return iterator(this, 'values', toReactive)\n  },\n}\n\n// instrument iterators to take ARRAY_ITERATE dependency\nfunction iterator(\n  self: unknown[],\n  method: keyof Array<unknown>,\n  wrapValue: (value: any) => unknown,\n) {\n  // note that taking ARRAY_ITERATE dependency here is not strictly equivalent\n  // to calling iterate on the proxified array.\n  // creating the iterator does not access any array property:\n  // it is only when .next() is called that length and indexes are accessed.\n  // pushed to the extreme, an iterator could be created in one effect scope,\n  // partially iterated in another, then iterated more in yet another.\n  // given that JS iterator can only be read once, this doesn't seem like\n  // a plausible use-case, so this tracking simplification seems ok.\n  const arr = shallowReadArray(self)\n  const iter = (arr[method] as any)() as IterableIterator<unknown> & {\n    _next: IterableIterator<unknown>['next']\n  }\n  if (arr !== self && !isShallow(self)) {\n    iter._next = iter.next\n    iter.next = () => {\n      const result = iter._next()\n      if (result.value) {\n        result.value = wrapValue(result.value)\n      }\n      return result\n    }\n  }\n  return iter\n}\n\n// in the codebase we enforce es2016, but user code may run in environments\n// higher than that\ntype ArrayMethods = keyof Array<any> | 'findLast' | 'findLastIndex'\n\nconst arrayProto = Array.prototype\n// instrument functions that read (potentially) all items\n// to take ARRAY_ITERATE dependency\nfunction apply(\n  self: unknown[],\n  method: ArrayMethods,\n  fn: (item: unknown, index: number, array: unknown[]) => unknown,\n  thisArg?: unknown,\n  wrappedRetFn?: (result: any) => unknown,\n  args?: IArguments,\n) {\n  const arr = shallowReadArray(self)\n  const needsWrap = arr !== self && !isShallow(self)\n  // @ts-expect-error our code is limited to es2016 but user code is not\n  const methodFn = arr[method]\n\n  // #11759\n  // If the method being called is from a user-extended Array, the arguments will be unknown\n  // (unknown order and unknown parameter types). In this case, we skip the shallowReadArray\n  // handling and directly call apply with self.\n  if (methodFn !== arrayProto[method as any]) {\n    const result = methodFn.apply(self, args)\n    return needsWrap ? toReactive(result) : result\n  }\n\n  let wrappedFn = fn\n  if (arr !== self) {\n    if (needsWrap) {\n      wrappedFn = function (this: unknown, item, index) {\n        return fn.call(this, toReactive(item), index, self)\n      }\n    } else if (fn.length > 2) {\n      wrappedFn = function (this: unknown, item, index) {\n        return fn.call(this, item, index, self)\n      }\n    }\n  }\n  const result = methodFn.call(arr, wrappedFn, thisArg)\n  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result\n}\n\n// instrument reduce and reduceRight to take ARRAY_ITERATE dependency\nfunction reduce(\n  self: unknown[],\n  method: keyof Array<any>,\n  fn: (acc: unknown, item: unknown, index: number, array: unknown[]) => unknown,\n  args: unknown[],\n) {\n  const arr = shallowReadArray(self)\n  let wrappedFn = fn\n  if (arr !== self) {\n    if (!isShallow(self)) {\n      wrappedFn = function (this: unknown, acc, item, index) {\n        return fn.call(this, acc, toReactive(item), index, self)\n      }\n    } else if (fn.length > 3) {\n      wrappedFn = function (this: unknown, acc, item, index) {\n        return fn.call(this, acc, item, index, self)\n      }\n    }\n  }\n  return (arr[method] as any)(wrappedFn, ...args)\n}\n\n// instrument identity-sensitive methods to account for reactive proxies\nfunction searchProxy(\n  self: unknown[],\n  method: keyof Array<any>,\n  args: unknown[],\n) {\n  const arr = toRaw(self) as any\n  track(arr, TrackOpTypes.ITERATE, ARRAY_ITERATE_KEY)\n  // we run the method using the original args first (which may be reactive)\n  const res = arr[method](...args)\n\n  // if that didn't work, run it again using raw values.\n  if ((res === -1 || res === false) && isProxy(args[0])) {\n    args[0] = toRaw(args[0])\n    return arr[method](...args)\n  }\n\n  return res\n}\n\n// instrument length-altering mutation methods to avoid length being tracked\n// which leads to infinite loops in some cases (#2137)\nfunction noTracking(\n  self: unknown[],\n  method: keyof Array<any>,\n  args: unknown[] = [],\n) {\n  pauseTracking()\n  startBatch()\n  const res = (toRaw(self) as any)[method].apply(self, args)\n  endBatch()\n  resetTracking()\n  return res\n}\n", "import {\n  type Target,\n  isReadonly,\n  isShallow,\n  reactive,\n  reactiveMap,\n  readonly,\n  readonlyMap,\n  shallowReactiveMap,\n  shallowReadonlyMap,\n  toRaw,\n} from './reactive'\nimport { arrayInstrumentations } from './arrayInstrumentations'\nimport { ReactiveFlags, TrackOpTypes, TriggerOpTypes } from './constants'\nimport { ITERATE_KEY, track, trigger } from './dep'\nimport {\n  hasChanged,\n  hasOwn,\n  isArray,\n  isIntegerKey,\n  isObject,\n  isSymbol,\n  makeMap,\n} from '@vue/shared'\nimport { isRef } from './ref'\nimport { warn } from './warning'\n\nconst isNonTrackableKeys = /*@__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\n\nconst builtInSymbols = new Set(\n  /*@__PURE__*/\n  Object.getOwnPropertyNames(Symbol)\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n    // function\n    .filter(key => key !== 'arguments' && key !== 'caller')\n    .map(key => Symbol[key as keyof SymbolConstructor])\n    .filter(isSymbol),\n)\n\nfunction hasOwnProperty(this: object, key: unknown) {\n  // #10455 hasOwnProperty may be called with non-string values\n  if (!isSymbol(key)) key = String(key)\n  const obj = toRaw(this)\n  track(obj, TrackOpTypes.HAS, key)\n  return obj.hasOwnProperty(key as string)\n}\n\nclass BaseReactiveHandler implements ProxyHandler<Target> {\n  constructor(\n    protected readonly _isReadonly = false,\n    protected readonly _isShallow = false,\n  ) {}\n\n  get(target: Target, key: string | symbol, receiver: object): any {\n    if (key === ReactiveFlags.SKIP) return target[ReactiveFlags.SKIP]\n\n    const isReadonly = this._isReadonly,\n      isShallow = this._isShallow\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\n      return isShallow\n    } else if (key === ReactiveFlags.RAW) {\n      if (\n        receiver ===\n          (isReadonly\n            ? isShallow\n              ? shallowReadonlyMap\n              : readonlyMap\n            : isShallow\n              ? shallowReactiveMap\n              : reactiveMap\n          ).get(target) ||\n        // receiver is not the reactive proxy, but has the same prototype\n        // this means the receiver is a user proxy of the reactive proxy\n        Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)\n      ) {\n        return target\n      }\n      // early return undefined\n      return\n    }\n\n    const targetIsArray = isArray(target)\n\n    if (!isReadonly) {\n      let fn: Function | undefined\n      if (targetIsArray && (fn = arrayInstrumentations[key])) {\n        return fn\n      }\n      if (key === 'hasOwnProperty') {\n        return hasOwnProperty\n      }\n    }\n\n    const res = Reflect.get(\n      target,\n      key,\n      // if this is a proxy wrapping a ref, return methods using the raw ref\n      // as receiver so that we don't have to call `toRaw` on the ref in all\n      // its class methods\n      isRef(target) ? target : receiver,\n    )\n\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res\n    }\n\n    if (!isReadonly) {\n      track(target, TrackOpTypes.GET, key)\n    }\n\n    if (isShallow) {\n      return res\n    }\n\n    if (isRef(res)) {\n      // ref unwrapping - skip unwrap for Array + integer key.\n      return targetIsArray && isIntegerKey(key) ? res : res.value\n    }\n\n    if (isObject(res)) {\n      // Convert returned value into a proxy as well. we do the isObject check\n      // here to avoid invalid value warning. Also need to lazy access readonly\n      // and reactive here to avoid circular dependency.\n      return isReadonly ? readonly(res) : reactive(res)\n    }\n\n    return res\n  }\n}\n\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow = false) {\n    super(false, isShallow)\n  }\n\n  set(\n    target: Record<string | symbol, unknown>,\n    key: string | symbol,\n    value: unknown,\n    receiver: object,\n  ): boolean {\n    let oldValue = target[key]\n    if (!this._isShallow) {\n      const isOldValueReadonly = isReadonly(oldValue)\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue)\n        value = toRaw(value)\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        if (isOldValueReadonly) {\n          return false\n        } else {\n          oldValue.value = value\n          return true\n        }\n      }\n    } else {\n      // in shallow mode, objects are set as-is regardless of reactive or not\n    }\n\n    const hadKey =\n      isArray(target) && isIntegerKey(key)\n        ? Number(key) < target.length\n        : hasOwn(target, key)\n    const result = Reflect.set(\n      target,\n      key,\n      value,\n      isRef(target) ? target : receiver,\n    )\n    // don't trigger if target is something up in the prototype chain of original\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, TriggerOpTypes.ADD, key, value)\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\n      }\n    }\n    return result\n  }\n\n  deleteProperty(\n    target: Record<string | symbol, unknown>,\n    key: string | symbol,\n  ): boolean {\n    const hadKey = hasOwn(target, key)\n    const oldValue = target[key]\n    const result = Reflect.deleteProperty(target, key)\n    if (result && hadKey) {\n      trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\n    }\n    return result\n  }\n\n  has(target: Record<string | symbol, unknown>, key: string | symbol): boolean {\n    const result = Reflect.has(target, key)\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, TrackOpTypes.HAS, key)\n    }\n    return result\n  }\n\n  ownKeys(target: Record<string | symbol, unknown>): (string | symbol)[] {\n    track(\n      target,\n      TrackOpTypes.ITERATE,\n      isArray(target) ? 'length' : ITERATE_KEY,\n    )\n    return Reflect.ownKeys(target)\n  }\n}\n\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow = false) {\n    super(true, isShallow)\n  }\n\n  set(target: object, key: string | symbol) {\n    if (__DEV__) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target,\n      )\n    }\n    return true\n  }\n\n  deleteProperty(target: object, key: string | symbol) {\n    if (__DEV__) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target,\n      )\n    }\n    return true\n  }\n}\n\nexport const mutableHandlers: ProxyHandler<object> =\n  /*@__PURE__*/ new MutableReactiveHandler()\n\nexport const readonlyHandlers: ProxyHandler<object> =\n  /*@__PURE__*/ new ReadonlyReactiveHandler()\n\nexport const shallowReactiveHandlers: MutableReactiveHandler =\n  /*@__PURE__*/ new MutableReactiveHandler(true)\n\n// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nexport const shallowReadonlyHandlers: ReadonlyReactiveHandler =\n  /*@__PURE__*/ new ReadonlyReactiveHandler(true)\n", "import {\n  type Target,\n  isReadonly,\n  isShallow,\n  toRaw,\n  toReactive,\n  toReadonly,\n} from './reactive'\nimport { ITERATE_KEY, MAP_KEY_ITERATE_KEY, track, trigger } from './dep'\nimport { ReactiveFlags, TrackOpTypes, TriggerOpTypes } from './constants'\nimport {\n  capitalize,\n  extend,\n  hasChanged,\n  hasOwn,\n  isMap,\n  toRawType,\n} from '@vue/shared'\nimport { warn } from './warning'\n\ntype CollectionTypes = IterableCollections | WeakCollections\n\ntype IterableCollections = (Map<any, any> | Set<any>) & Target\ntype WeakCollections = (WeakMap<any, any> | WeakSet<any>) & Target\ntype MapTypes = (Map<any, any> | WeakMap<any, any>) & Target\ntype SetTypes = (Set<any> | WeakSet<any>) & Target\n\nconst toShallow = <T extends unknown>(value: T): T => value\n\nconst getProto = <T extends CollectionTypes>(v: T): any =>\n  Reflect.getPrototypeOf(v)\n\nfunction createIterableMethod(\n  method: string | symbol,\n  isReadonly: boolean,\n  isShallow: boolean,\n) {\n  return function (\n    this: IterableCollections,\n    ...args: unknown[]\n  ): Iterable<unknown> & Iterator<unknown> {\n    const target = this[ReactiveFlags.RAW]\n    const rawTarget = toRaw(target)\n    const targetIsMap = isMap(rawTarget)\n    const isPair =\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\n    const isKeyOnly = method === 'keys' && targetIsMap\n    const innerIterator = target[method](...args)\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\n    !isReadonly &&\n      track(\n        rawTarget,\n        TrackOpTypes.ITERATE,\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY,\n      )\n    // return a wrapped iterator which returns observed versions of the\n    // values emitted from the real iterator\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next()\n        return done\n          ? { value, done }\n          : {\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n              done,\n            }\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n}\n\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\n  return function (this: CollectionTypes, ...args: unknown[]) {\n    if (__DEV__) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\n      warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this),\n      )\n    }\n    return type === TriggerOpTypes.DELETE\n      ? false\n      : type === TriggerOpTypes.CLEAR\n        ? undefined\n        : this\n  }\n}\n\ntype Instrumentations = Record<string | symbol, Function | number>\n\nfunction createInstrumentations(\n  readonly: boolean,\n  shallow: boolean,\n): Instrumentations {\n  const instrumentations: Instrumentations = {\n    get(this: MapTypes, key: unknown) {\n      // #1772: readonly(reactive(Map)) should return readonly + reactive version\n      // of the value\n      const target = this[ReactiveFlags.RAW]\n      const rawTarget = toRaw(target)\n      const rawKey = toRaw(key)\n      if (!readonly) {\n        if (hasChanged(key, rawKey)) {\n          track(rawTarget, TrackOpTypes.GET, key)\n        }\n        track(rawTarget, TrackOpTypes.GET, rawKey)\n      }\n      const { has } = getProto(rawTarget)\n      const wrap = shallow ? toShallow : readonly ? toReadonly : toReactive\n      if (has.call(rawTarget, key)) {\n        return wrap(target.get(key))\n      } else if (has.call(rawTarget, rawKey)) {\n        return wrap(target.get(rawKey))\n      } else if (target !== rawTarget) {\n        // #3602 readonly(reactive(Map))\n        // ensure that the nested reactive `Map` can do tracking for itself\n        target.get(key)\n      }\n    },\n    get size() {\n      const target = (this as unknown as IterableCollections)[ReactiveFlags.RAW]\n      !readonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\n      return Reflect.get(target, 'size', target)\n    },\n    has(this: CollectionTypes, key: unknown): boolean {\n      const target = this[ReactiveFlags.RAW]\n      const rawTarget = toRaw(target)\n      const rawKey = toRaw(key)\n      if (!readonly) {\n        if (hasChanged(key, rawKey)) {\n          track(rawTarget, TrackOpTypes.HAS, key)\n        }\n        track(rawTarget, TrackOpTypes.HAS, rawKey)\n      }\n      return key === rawKey\n        ? target.has(key)\n        : target.has(key) || target.has(rawKey)\n    },\n    forEach(this: IterableCollections, callback: Function, thisArg?: unknown) {\n      const observed = this\n      const target = observed[ReactiveFlags.RAW]\n      const rawTarget = toRaw(target)\n      const wrap = shallow ? toShallow : readonly ? toReadonly : toReactive\n      !readonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\n      return target.forEach((value: unknown, key: unknown) => {\n        // important: make sure the callback is\n        // 1. invoked with the reactive map as `this` and 3rd arg\n        // 2. the value received should be a corresponding reactive/readonly.\n        return callback.call(thisArg, wrap(value), wrap(key), observed)\n      })\n    },\n  }\n\n  extend(\n    instrumentations,\n    readonly\n      ? {\n          add: createReadonlyMethod(TriggerOpTypes.ADD),\n          set: createReadonlyMethod(TriggerOpTypes.SET),\n          delete: createReadonlyMethod(TriggerOpTypes.DELETE),\n          clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\n        }\n      : {\n          add(this: SetTypes, value: unknown) {\n            if (!shallow && !isShallow(value) && !isReadonly(value)) {\n              value = toRaw(value)\n            }\n            const target = toRaw(this)\n            const proto = getProto(target)\n            const hadKey = proto.has.call(target, value)\n            if (!hadKey) {\n              target.add(value)\n              trigger(target, TriggerOpTypes.ADD, value, value)\n            }\n            return this\n          },\n          set(this: MapTypes, key: unknown, value: unknown) {\n            if (!shallow && !isShallow(value) && !isReadonly(value)) {\n              value = toRaw(value)\n            }\n            const target = toRaw(this)\n            const { has, get } = getProto(target)\n\n            let hadKey = has.call(target, key)\n            if (!hadKey) {\n              key = toRaw(key)\n              hadKey = has.call(target, key)\n            } else if (__DEV__) {\n              checkIdentityKeys(target, has, key)\n            }\n\n            const oldValue = get.call(target, key)\n            target.set(key, value)\n            if (!hadKey) {\n              trigger(target, TriggerOpTypes.ADD, key, value)\n            } else if (hasChanged(value, oldValue)) {\n              trigger(target, TriggerOpTypes.SET, key, value, oldValue)\n            }\n            return this\n          },\n          delete(this: CollectionTypes, key: unknown) {\n            const target = toRaw(this)\n            const { has, get } = getProto(target)\n            let hadKey = has.call(target, key)\n            if (!hadKey) {\n              key = toRaw(key)\n              hadKey = has.call(target, key)\n            } else if (__DEV__) {\n              checkIdentityKeys(target, has, key)\n            }\n\n            const oldValue = get ? get.call(target, key) : undefined\n            // forward the operation before queueing reactions\n            const result = target.delete(key)\n            if (hadKey) {\n              trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\n            }\n            return result\n          },\n          clear(this: IterableCollections) {\n            const target = toRaw(this)\n            const hadItems = target.size !== 0\n            const oldTarget = __DEV__\n              ? isMap(target)\n                ? new Map(target)\n                : new Set(target)\n              : undefined\n            // forward the operation before queueing reactions\n            const result = target.clear()\n            if (hadItems) {\n              trigger(\n                target,\n                TriggerOpTypes.CLEAR,\n                undefined,\n                undefined,\n                oldTarget,\n              )\n            }\n            return result\n          },\n        },\n  )\n\n  const iteratorMethods = [\n    'keys',\n    'values',\n    'entries',\n    Symbol.iterator,\n  ] as const\n\n  iteratorMethods.forEach(method => {\n    instrumentations[method] = createIterableMethod(method, readonly, shallow)\n  })\n\n  return instrumentations\n}\n\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\n  const instrumentations = createInstrumentations(isReadonly, shallow)\n\n  return (\n    target: CollectionTypes,\n    key: string | symbol,\n    receiver: CollectionTypes,\n  ) => {\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly\n    } else if (key === ReactiveFlags.RAW) {\n      return target\n    }\n\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target\n        ? instrumentations\n        : target,\n      key,\n      receiver,\n    )\n  }\n}\n\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\n  get: /*@__PURE__*/ createInstrumentationGetter(false, false),\n}\n\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\n  get: /*@__PURE__*/ createInstrumentationGetter(false, true),\n}\n\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\n  get: /*@__PURE__*/ createInstrumentationGetter(true, false),\n}\n\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\n  {\n    get: /*@__PURE__*/ createInstrumentationGetter(true, true),\n  }\n\nfunction checkIdentityKeys(\n  target: CollectionTypes,\n  has: (key: unknown) => boolean,\n  key: unknown,\n) {\n  const rawKey = toRaw(key)\n  if (rawKey !== key && has.call(target, rawKey)) {\n    const type = toRawType(target)\n    warn(\n      `Reactive ${type} contains both the raw and reactive ` +\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\n        `which can lead to inconsistencies. ` +\n        `Avoid differentiating between the raw and reactive versions ` +\n        `of an object and only use the reactive version if possible.`,\n    )\n  }\n}\n", "import { def, hasOwn, isObject, toRawType } from '@vue/shared'\nimport {\n  mutableHandlers,\n  readonlyHandlers,\n  shallowReactiveHandlers,\n  shallowReadonlyHandlers,\n} from './baseHandlers'\nimport {\n  mutableCollectionHandlers,\n  readonlyCollectionHandlers,\n  shallowCollectionHandlers,\n  shallowReadonlyCollectionHandlers,\n} from './collectionHandlers'\nimport type { RawSymbol, Ref, UnwrapRefSimple } from './ref'\nimport { ReactiveFlags } from './constants'\nimport { warn } from './warning'\n\nexport interface Target {\n  [ReactiveFlags.SKIP]?: boolean\n  [ReactiveFlags.IS_REACTIVE]?: boolean\n  [ReactiveFlags.IS_READONLY]?: boolean\n  [ReactiveFlags.IS_SHALLOW]?: boolean\n  [ReactiveFlags.RAW]?: any\n}\n\nexport const reactiveMap: WeakMap<Target, any> = new WeakMap<Target, any>()\nexport const shallowReactiveMap: WeakMap<Target, any> = new WeakMap<\n  Target,\n  any\n>()\nexport const readonlyMap: WeakMap<Target, any> = new WeakMap<Target, any>()\nexport const shallowReadonlyMap: WeakMap<Target, any> = new WeakMap<\n  Target,\n  any\n>()\n\nenum TargetType {\n  INVALID = 0,\n  COMMON = 1,\n  COLLECTION = 2,\n}\n\nfunction targetTypeMap(rawType: string) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return TargetType.COMMON\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return TargetType.COLLECTION\n    default:\n      return TargetType.INVALID\n  }\n}\n\nfunction getTargetType(value: Target) {\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\n    ? TargetType.INVALID\n    : targetTypeMap(toRawType(value))\n}\n\n// only unwrap nested ref\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\n\ndeclare const ReactiveMarkerSymbol: unique symbol\n\nexport interface ReactiveMarker {\n  [ReactiveMarkerSymbol]?: void\n}\n\nexport type Reactive<T> = UnwrapNestedRefs<T> &\n  (T extends readonly any[] ? ReactiveMarker : {})\n\n/**\n * Returns a reactive proxy of the object.\n *\n * The reactive conversion is \"deep\": it affects all nested properties. A\n * reactive object also deeply unwraps any properties that are refs while\n * maintaining reactivity.\n *\n * @example\n * ```js\n * const obj = reactive({ count: 0 })\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-core.html#reactive}\n */\nexport function reactive<T extends object>(target: T): Reactive<T>\nexport function reactive(target: object) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (isReadonly(target)) {\n    return target\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap,\n  )\n}\n\nexport declare const ShallowReactiveMarker: unique symbol\n\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\n\n/**\n * Shallow version of {@link reactive()}.\n *\n * Unlike {@link reactive()}, there is no deep conversion: only root-level\n * properties are reactive for a shallow reactive object. Property values are\n * stored and exposed as-is - this also means properties with ref values will\n * not be automatically unwrapped.\n *\n * @example\n * ```js\n * const state = shallowReactive({\n *   foo: 1,\n *   nested: {\n *     bar: 2\n *   }\n * })\n *\n * // mutating state's own properties is reactive\n * state.foo++\n *\n * // ...but does not convert nested objects\n * isReactive(state.nested) // false\n *\n * // NOT reactive\n * state.nested.bar++\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowreactive}\n */\nexport function shallowReactive<T extends object>(\n  target: T,\n): ShallowReactive<T> {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap,\n  )\n}\n\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\nexport type Builtin = Primitive | Function | Date | Error | RegExp\nexport type DeepReadonly<T> = T extends Builtin\n  ? T\n  : T extends Map<infer K, infer V>\n    ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\n    : T extends ReadonlyMap<infer K, infer V>\n      ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\n      : T extends WeakMap<infer K, infer V>\n        ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\n        : T extends Set<infer U>\n          ? ReadonlySet<DeepReadonly<U>>\n          : T extends ReadonlySet<infer U>\n            ? ReadonlySet<DeepReadonly<U>>\n            : T extends WeakSet<infer U>\n              ? WeakSet<DeepReadonly<U>>\n              : T extends Promise<infer U>\n                ? Promise<DeepReadonly<U>>\n                : T extends Ref<infer U, unknown>\n                  ? Readonly<Ref<DeepReadonly<U>>>\n                  : T extends {}\n                    ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\n                    : Readonly<T>\n\n/**\n * Takes an object (reactive or plain) or a ref and returns a readonly proxy to\n * the original.\n *\n * A readonly proxy is deep: any nested property accessed will be readonly as\n * well. It also has the same ref-unwrapping behavior as {@link reactive()},\n * except the unwrapped values will also be made readonly.\n *\n * @example\n * ```js\n * const original = reactive({ count: 0 })\n *\n * const copy = readonly(original)\n *\n * watchEffect(() => {\n *   // works for reactivity tracking\n *   console.log(copy.count)\n * })\n *\n * // mutating original will trigger watchers relying on the copy\n * original.count++\n *\n * // mutating the copy will fail and result in a warning\n * copy.count++ // warning!\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-core.html#readonly}\n */\nexport function readonly<T extends object>(\n  target: T,\n): DeepReadonly<UnwrapNestedRefs<T>> {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap,\n  )\n}\n\n/**\n * Shallow version of {@link readonly()}.\n *\n * Unlike {@link readonly()}, there is no deep conversion: only root-level\n * properties are made readonly. Property values are stored and exposed as-is -\n * this also means properties with ref values will not be automatically\n * unwrapped.\n *\n * @example\n * ```js\n * const state = shallowReadonly({\n *   foo: 1,\n *   nested: {\n *     bar: 2\n *   }\n * })\n *\n * // mutating state's own properties will fail\n * state.foo++\n *\n * // ...but works on nested objects\n * isReadonly(state.nested) // false\n *\n * // works\n * state.nested.bar++\n * ```\n *\n * @param target - The source object.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowreadonly}\n */\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap,\n  )\n}\n\nfunction createReactiveObject(\n  target: Target,\n  isReadonly: boolean,\n  baseHandlers: ProxyHandler<any>,\n  collectionHandlers: ProxyHandler<any>,\n  proxyMap: WeakMap<Target, any>,\n) {\n  if (!isObject(target)) {\n    if (__DEV__) {\n      warn(\n        `value cannot be made ${isReadonly ? 'readonly' : 'reactive'}: ${String(\n          target,\n        )}`,\n      )\n    }\n    return target\n  }\n  // target is already a Proxy, return it.\n  // exception: calling readonly() on a reactive object\n  if (\n    target[ReactiveFlags.RAW] &&\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\n  ) {\n    return target\n  }\n  // target already has corresponding Proxy\n  const existingProxy = proxyMap.get(target)\n  if (existingProxy) {\n    return existingProxy\n  }\n  // only specific value types can be observed.\n  const targetType = getTargetType(target)\n  if (targetType === TargetType.INVALID) {\n    return target\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers,\n  )\n  proxyMap.set(target, proxy)\n  return proxy\n}\n\n/**\n * Checks if an object is a proxy created by {@link reactive()} or\n * {@link shallowReactive()} (or {@link ref()} in some cases).\n *\n * @example\n * ```js\n * isReactive(reactive({}))            // => true\n * isReactive(readonly(reactive({})))  // => true\n * isReactive(ref({}).value)           // => true\n * isReactive(readonly(ref({})).value) // => true\n * isReactive(ref(true))               // => false\n * isReactive(shallowRef({}).value)    // => false\n * isReactive(shallowReactive({}))     // => true\n * ```\n *\n * @param value - The value to check.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isreactive}\n */\nexport function isReactive(value: unknown): boolean {\n  if (isReadonly(value)) {\n    return isReactive((value as Target)[ReactiveFlags.RAW])\n  }\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\n}\n\n/**\n * Checks whether the passed value is a readonly object. The properties of a\n * readonly object can change, but they can't be assigned directly via the\n * passed object.\n *\n * The proxies created by {@link readonly()} and {@link shallowReadonly()} are\n * both considered readonly, as is a computed ref without a set function.\n *\n * @param value - The value to check.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isreadonly}\n */\nexport function isReadonly(value: unknown): boolean {\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\n}\n\nexport function isShallow(value: unknown): boolean {\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\n}\n\n/**\n * Checks if an object is a proxy created by {@link reactive},\n * {@link readonly}, {@link shallowReactive} or {@link shallowReadonly()}.\n *\n * @param value - The value to check.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isproxy}\n */\nexport function isProxy(value: any): boolean {\n  return value ? !!value[ReactiveFlags.RAW] : false\n}\n\n/**\n * Returns the raw, original object of a Vue-created proxy.\n *\n * `toRaw()` can return the original object from proxies created by\n * {@link reactive()}, {@link readonly()}, {@link shallowReactive()} or\n * {@link shallowReadonly()}.\n *\n * This is an escape hatch that can be used to temporarily read without\n * incurring proxy access / tracking overhead or write without triggering\n * changes. It is **not** recommended to hold a persistent reference to the\n * original object. Use with caution.\n *\n * @example\n * ```js\n * const foo = {}\n * const reactiveFoo = reactive(foo)\n *\n * console.log(toRaw(reactiveFoo) === foo) // true\n * ```\n *\n * @param observed - The object for which the \"raw\" value is requested.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#toraw}\n */\nexport function toRaw<T>(observed: T): T {\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\n  return raw ? toRaw(raw) : observed\n}\n\nexport type Raw<T> = T & { [RawSymbol]?: true }\n\n/**\n * Marks an object so that it will never be converted to a proxy. Returns the\n * object itself.\n *\n * @example\n * ```js\n * const foo = markRaw({})\n * console.log(isReactive(reactive(foo))) // false\n *\n * // also works when nested inside other reactive objects\n * const bar = reactive({ foo })\n * console.log(isReactive(bar.foo)) // false\n * ```\n *\n * **Warning:** `markRaw()` together with the shallow APIs such as\n * {@link shallowReactive()} allow you to selectively opt-out of the default\n * deep reactive/readonly conversion and embed raw, non-proxied objects in your\n * state graph.\n *\n * @param value - The object to be marked as \"raw\".\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#markraw}\n */\nexport function markRaw<T extends object>(value: T): Raw<T> {\n  if (!hasOwn(value, ReactiveFlags.SKIP) && Object.isExtensible(value)) {\n    def(value, ReactiveFlags.SKIP, true)\n  }\n  return value\n}\n\n/**\n * Returns a reactive proxy of the given value (if possible).\n *\n * If the given value is not an object, the original value itself is returned.\n *\n * @param value - The value for which a reactive proxy shall be created.\n */\nexport const toReactive = <T extends unknown>(value: T): T =>\n  isObject(value) ? reactive(value) : value\n\n/**\n * Returns a readonly proxy of the given value (if possible).\n *\n * If the given value is not an object, the original value itself is returned.\n *\n * @param value - The value for which a readonly proxy shall be created.\n */\nexport const toReadonly = <T extends unknown>(value: T): DeepReadonly<T> =>\n  isObject(value) ? readonly(value) : (value as DeepReadonly<T>)\n", "import {\n  type IfAny,\n  hasChanged,\n  isArray,\n  isFunction,\n  isObject,\n} from '@vue/shared'\nimport { Dep, getDepFromReactive } from './dep'\nimport {\n  type Builtin,\n  type ShallowReactiveMarker,\n  isProxy,\n  isReactive,\n  isReadonly,\n  isShallow,\n  toRaw,\n  toReactive,\n} from './reactive'\nimport type { ComputedRef, WritableComputedRef } from './computed'\nimport { ReactiveFlags, TrackOpTypes, TriggerOpTypes } from './constants'\nimport { warn } from './warning'\n\ndeclare const RefSymbol: unique symbol\nexport declare const RawSymbol: unique symbol\n\nexport interface Ref<T = any, S = T> {\n  get value(): T\n  set value(_: S)\n  /**\n   * Type differentiator only.\n   * We need this to be in public d.ts but don't want it to show up in IDE\n   * autocomplete, so we use a private Symbol instead.\n   */\n  [RefSymbol]: true\n}\n\n/**\n * Checks if a value is a ref object.\n *\n * @param r - The value to inspect.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isref}\n */\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\nexport function isRef(r: any): r is Ref {\n  return r ? r[ReactiveFlags.IS_REF] === true : false\n}\n\n/**\n * Takes an inner value and returns a reactive and mutable ref object, which\n * has a single property `.value` that points to the inner value.\n *\n * @param value - The object to wrap in the ref.\n * @see {@link https://vuejs.org/api/reactivity-core.html#ref}\n */\nexport function ref<T>(\n  value: T,\n): [T] extends [Ref] ? IfAny<T, Ref<T>, T> : Ref<UnwrapRef<T>, UnwrapRef<T> | T>\nexport function ref<T = any>(): Ref<T | undefined>\nexport function ref(value?: unknown) {\n  return createRef(value, false)\n}\n\ndeclare const ShallowRefMarker: unique symbol\n\nexport type ShallowRef<T = any, S = T> = Ref<T, S> & {\n  [ShallowRefMarker]?: true\n}\n\n/**\n * Shallow version of {@link ref()}.\n *\n * @example\n * ```js\n * const state = shallowRef({ count: 1 })\n *\n * // does NOT trigger change\n * state.value.count = 2\n *\n * // does trigger change\n * state.value = { count: 2 }\n * ```\n *\n * @param value - The \"inner value\" for the shallow ref.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowref}\n */\nexport function shallowRef<T>(\n  value: T,\n): Ref extends T\n  ? T extends Ref\n    ? IfAny<T, ShallowRef<T>, T>\n    : ShallowRef<T>\n  : ShallowRef<T>\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\nexport function shallowRef(value?: unknown) {\n  return createRef(value, true)\n}\n\nfunction createRef(rawValue: unknown, shallow: boolean) {\n  if (isRef(rawValue)) {\n    return rawValue\n  }\n  return new RefImpl(rawValue, shallow)\n}\n\n/**\n * @internal\n */\nclass RefImpl<T = any> {\n  _value: T\n  private _rawValue: T\n\n  dep: Dep = new Dep()\n\n  public readonly [ReactiveFlags.IS_REF] = true\n  public readonly [ReactiveFlags.IS_SHALLOW]: boolean = false\n\n  constructor(value: T, isShallow: boolean) {\n    this._rawValue = isShallow ? value : toRaw(value)\n    this._value = isShallow ? value : toReactive(value)\n    this[ReactiveFlags.IS_SHALLOW] = isShallow\n  }\n\n  get value() {\n    if (__DEV__) {\n      this.dep.track({\n        target: this,\n        type: TrackOpTypes.GET,\n        key: 'value',\n      })\n    } else {\n      this.dep.track()\n    }\n    return this._value\n  }\n\n  set value(newValue) {\n    const oldValue = this._rawValue\n    const useDirectValue =\n      this[ReactiveFlags.IS_SHALLOW] ||\n      isShallow(newValue) ||\n      isReadonly(newValue)\n    newValue = useDirectValue ? newValue : toRaw(newValue)\n    if (hasChanged(newValue, oldValue)) {\n      this._rawValue = newValue\n      this._value = useDirectValue ? newValue : toReactive(newValue)\n      if (__DEV__) {\n        this.dep.trigger({\n          target: this,\n          type: TriggerOpTypes.SET,\n          key: 'value',\n          newValue,\n          oldValue,\n        })\n      } else {\n        this.dep.trigger()\n      }\n    }\n  }\n}\n\n/**\n * Force trigger effects that depends on a shallow ref. This is typically used\n * after making deep mutations to the inner value of a shallow ref.\n *\n * @example\n * ```js\n * const shallow = shallowRef({\n *   greet: 'Hello, world'\n * })\n *\n * // Logs \"Hello, world\" once for the first run-through\n * watchEffect(() => {\n *   console.log(shallow.value.greet)\n * })\n *\n * // This won't trigger the effect because the ref is shallow\n * shallow.value.greet = 'Hello, universe'\n *\n * // Logs \"Hello, universe\"\n * triggerRef(shallow)\n * ```\n *\n * @param ref - The ref whose tied effects shall be executed.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#triggerref}\n */\nexport function triggerRef(ref: Ref): void {\n  // ref may be an instance of ObjectRefImpl\n  if ((ref as unknown as RefImpl).dep) {\n    if (__DEV__) {\n      ;(ref as unknown as RefImpl).dep.trigger({\n        target: ref,\n        type: TriggerOpTypes.SET,\n        key: 'value',\n        newValue: (ref as unknown as RefImpl)._value,\n      })\n    } else {\n      ;(ref as unknown as RefImpl).dep.trigger()\n    }\n  }\n}\n\nexport type MaybeRef<T = any> =\n  | T\n  | Ref<T>\n  | ShallowRef<T>\n  | WritableComputedRef<T>\n\nexport type MaybeRefOrGetter<T = any> = MaybeRef<T> | ComputedRef<T> | (() => T)\n\n/**\n * Returns the inner value if the argument is a ref, otherwise return the\n * argument itself. This is a sugar function for\n * `val = isRef(val) ? val.value : val`.\n *\n * @example\n * ```js\n * function useFoo(x: number | Ref<number>) {\n *   const unwrapped = unref(x)\n *   // unwrapped is guaranteed to be number now\n * }\n * ```\n *\n * @param ref - Ref or plain value to be converted into the plain value.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#unref}\n */\nexport function unref<T>(ref: MaybeRef<T> | ComputedRef<T>): T {\n  return isRef(ref) ? ref.value : ref\n}\n\n/**\n * Normalizes values / refs / getters to values.\n * This is similar to {@link unref()}, except that it also normalizes getters.\n * If the argument is a getter, it will be invoked and its return value will\n * be returned.\n *\n * @example\n * ```js\n * toValue(1) // 1\n * toValue(ref(1)) // 1\n * toValue(() => 1) // 1\n * ```\n *\n * @param source - A getter, an existing ref, or a non-function value.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#tovalue}\n */\nexport function toValue<T>(source: MaybeRefOrGetter<T>): T {\n  return isFunction(source) ? source() : unref(source)\n}\n\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\n  get: (target, key, receiver) =>\n    key === ReactiveFlags.RAW\n      ? target\n      : unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key]\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value\n      return true\n    } else {\n      return Reflect.set(target, key, value, receiver)\n    }\n  },\n}\n\n/**\n * Returns a proxy for the given object that shallowly unwraps properties that\n * are refs. If the object already is reactive, it's returned as-is. If not, a\n * new reactive proxy is created.\n *\n * @param objectWithRefs - Either an already-reactive object or a simple object\n * that contains refs.\n */\nexport function proxyRefs<T extends object>(\n  objectWithRefs: T,\n): ShallowUnwrapRef<T> {\n  return isReactive(objectWithRefs)\n    ? objectWithRefs\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\n}\n\nexport type CustomRefFactory<T> = (\n  track: () => void,\n  trigger: () => void,\n) => {\n  get: () => T\n  set: (value: T) => void\n}\n\nclass CustomRefImpl<T> {\n  public dep: Dep\n\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\n\n  public readonly [ReactiveFlags.IS_REF] = true\n\n  public _value: T = undefined!\n\n  constructor(factory: CustomRefFactory<T>) {\n    const dep = (this.dep = new Dep())\n    const { get, set } = factory(dep.track.bind(dep), dep.trigger.bind(dep))\n    this._get = get\n    this._set = set\n  }\n\n  get value() {\n    return (this._value = this._get())\n  }\n\n  set value(newVal) {\n    this._set(newVal)\n  }\n}\n\n/**\n * Creates a customized ref with explicit control over its dependency tracking\n * and updates triggering.\n *\n * @param factory - The function that receives the `track` and `trigger` callbacks.\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#customref}\n */\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\n  return new CustomRefImpl(factory) as any\n}\n\nexport type ToRefs<T = any> = {\n  [K in keyof T]: ToRef<T[K]>\n}\n\n/**\n * Converts a reactive object to a plain object where each property of the\n * resulting object is a ref pointing to the corresponding property of the\n * original object. Each individual ref is created using {@link toRef()}.\n *\n * @param object - Reactive object to be made into an object of linked refs.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#torefs}\n */\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\n  if (__DEV__ && !isProxy(object)) {\n    warn(`toRefs() expects a reactive object but received a plain one.`)\n  }\n  const ret: any = isArray(object) ? new Array(object.length) : {}\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key)\n  }\n  return ret\n}\n\nclass ObjectRefImpl<T extends object, K extends keyof T> {\n  public readonly [ReactiveFlags.IS_REF] = true\n  public _value: T[K] = undefined!\n\n  constructor(\n    private readonly _object: T,\n    private readonly _key: K,\n    private readonly _defaultValue?: T[K],\n  ) {}\n\n  get value() {\n    const val = this._object[this._key]\n    return (this._value = val === undefined ? this._defaultValue! : val)\n  }\n\n  set value(newVal) {\n    this._object[this._key] = newVal\n  }\n\n  get dep(): Dep | undefined {\n    return getDepFromReactive(toRaw(this._object), this._key)\n  }\n}\n\nclass GetterRefImpl<T> {\n  public readonly [ReactiveFlags.IS_REF] = true\n  public readonly [ReactiveFlags.IS_READONLY] = true\n  public _value: T = undefined!\n\n  constructor(private readonly _getter: () => T) {}\n  get value() {\n    return (this._value = this._getter())\n  }\n}\n\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\n\n/**\n * Used to normalize values / refs / getters into refs.\n *\n * @example\n * ```js\n * // returns existing refs as-is\n * toRef(existingRef)\n *\n * // creates a ref that calls the getter on .value access\n * toRef(() => props.foo)\n *\n * // creates normal refs from non-function values\n * // equivalent to ref(1)\n * toRef(1)\n * ```\n *\n * Can also be used to create a ref for a property on a source reactive object.\n * The created ref is synced with its source property: mutating the source\n * property will update the ref, and vice-versa.\n *\n * @example\n * ```js\n * const state = reactive({\n *   foo: 1,\n *   bar: 2\n * })\n *\n * const fooRef = toRef(state, 'foo')\n *\n * // mutating the ref updates the original\n * fooRef.value++\n * console.log(state.foo) // 2\n *\n * // mutating the original also updates the ref\n * state.foo++\n * console.log(fooRef.value) // 3\n * ```\n *\n * @param source - A getter, an existing ref, a non-function value, or a\n *                 reactive object to create a property ref from.\n * @param [key] - (optional) Name of the property in the reactive object.\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#toref}\n */\nexport function toRef<T>(\n  value: T,\n): T extends () => infer R\n  ? Readonly<Ref<R>>\n  : T extends Ref\n    ? T\n    : Ref<UnwrapRef<T>>\nexport function toRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n): ToRef<T[K]>\nexport function toRef<T extends object, K extends keyof T>(\n  object: T,\n  key: K,\n  defaultValue: T[K],\n): ToRef<Exclude<T[K], undefined>>\nexport function toRef(\n  source: Record<string, any> | MaybeRef,\n  key?: string,\n  defaultValue?: unknown,\n): Ref {\n  if (isRef(source)) {\n    return source\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source) as any\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key!, defaultValue)\n  } else {\n    return ref(source)\n  }\n}\n\nfunction propertyToRef(\n  source: Record<string, any>,\n  key: string,\n  defaultValue?: unknown,\n) {\n  const val = source[key]\n  return isRef(val)\n    ? val\n    : (new ObjectRefImpl(source, key, defaultValue) as any)\n}\n\n/**\n * This is a special exported interface for other packages to declare\n * additional types that should bail out for ref unwrapping. For example\n * \\@vue/runtime-dom can declare it like so in its d.ts:\n *\n * ``` ts\n * declare module '@vue/reactivity' {\n *   export interface RefUnwrapBailTypes {\n *     runtimeDOMBailTypes: Node | Window\n *   }\n * }\n * ```\n */\nexport interface RefUnwrapBailTypes {}\n\nexport type ShallowUnwrapRef<T> = {\n  [K in keyof T]: DistributeRef<T[K]>\n}\n\ntype DistributeRef<T> = T extends Ref<infer V, unknown> ? V : T\n\nexport type UnwrapRef<T> =\n  T extends ShallowRef<infer V, unknown>\n    ? V\n    : T extends Ref<infer V, unknown>\n      ? UnwrapRefSimple<V>\n      : UnwrapRefSimple<T>\n\nexport type UnwrapRefSimple<T> = T extends\n  | Builtin\n  | Ref\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\n  | { [RawSymbol]?: true }\n  ? T\n  : T extends Map<infer K, infer V>\n    ? Map<K, UnwrapRefSimple<V>> & UnwrapRef<Omit<T, keyof Map<any, any>>>\n    : T extends WeakMap<infer K, infer V>\n      ? WeakMap<K, UnwrapRefSimple<V>> &\n          UnwrapRef<Omit<T, keyof WeakMap<any, any>>>\n      : T extends Set<infer V>\n        ? Set<UnwrapRefSimple<V>> & UnwrapRef<Omit<T, keyof Set<any>>>\n        : T extends WeakSet<infer V>\n          ? WeakSet<UnwrapRefSimple<V>> & UnwrapRef<Omit<T, keyof WeakSet<any>>>\n          : T extends ReadonlyArray<any>\n            ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\n            : T extends object & { [ShallowReactiveMarker]?: never }\n              ? {\n                  [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\n                }\n              : T\n", "import { isFunction } from '@vue/shared'\nimport {\n  type DebuggerEvent,\n  type DebuggerOptions,\n  EffectFlags,\n  type Subscriber,\n  activeSub,\n  batch,\n  refreshComputed,\n} from './effect'\nimport type { Ref } from './ref'\nimport { warn } from './warning'\nimport { Dep, type Link, globalVersion } from './dep'\nimport { ReactiveFlags, TrackOpTypes } from './constants'\n\ndeclare const ComputedRefSymbol: unique symbol\ndeclare const WritableComputedRefSymbol: unique symbol\n\ninterface BaseComputedRef<T, S = T> extends Ref<T, S> {\n  [ComputedRefSymbol]: true\n  /**\n   * @deprecated computed no longer uses effect\n   */\n  effect: ComputedRefImpl\n}\n\nexport interface ComputedRef<T = any> extends BaseComputedRef<T> {\n  readonly value: T\n}\n\nexport interface WritableComputedRef<T, S = T> extends BaseComputedRef<T, S> {\n  [WritableComputedRefSymbol]: true\n}\n\nexport type ComputedGetter<T> = (oldValue?: T) => T\nexport type ComputedSetter<T> = (newValue: T) => void\n\nexport interface WritableComputedOptions<T, S = T> {\n  get: ComputedGetter<T>\n  set: ComputedSetter<S>\n}\n\n/**\n * @private exported by @vue/reactivity for Vue core use, but not exported from\n * the main vue package\n */\nexport class ComputedRefImpl<T = any> implements Subscriber {\n  /**\n   * @internal\n   */\n  _value: any = undefined\n  /**\n   * @internal\n   */\n  readonly dep: Dep = new Dep(this)\n  /**\n   * @internal\n   */\n  readonly __v_isRef = true\n  // TODO isolatedDeclarations ReactiveFlags.IS_REF\n  /**\n   * @internal\n   */\n  readonly __v_isReadonly: boolean\n  // TODO isolatedDeclarations ReactiveFlags.IS_READONLY\n  // A computed is also a subscriber that tracks other deps\n  /**\n   * @internal\n   */\n  deps?: Link = undefined\n  /**\n   * @internal\n   */\n  depsTail?: Link = undefined\n  /**\n   * @internal\n   */\n  flags: EffectFlags = EffectFlags.DIRTY\n  /**\n   * @internal\n   */\n  globalVersion: number = globalVersion - 1\n  /**\n   * @internal\n   */\n  isSSR: boolean\n  /**\n   * @internal\n   */\n  next?: Subscriber = undefined\n\n  // for backwards compat\n  effect: this = this\n  // dev only\n  onTrack?: (event: DebuggerEvent) => void\n  // dev only\n  onTrigger?: (event: DebuggerEvent) => void\n\n  /**\n   * Dev only\n   * @internal\n   */\n  _warnRecursive?: boolean\n\n  constructor(\n    public fn: ComputedGetter<T>,\n    private readonly setter: ComputedSetter<T> | undefined,\n    isSSR: boolean,\n  ) {\n    this[ReactiveFlags.IS_READONLY] = !setter\n    this.isSSR = isSSR\n  }\n\n  /**\n   * @internal\n   */\n  notify(): true | void {\n    this.flags |= EffectFlags.DIRTY\n    if (\n      !(this.flags & EffectFlags.NOTIFIED) &&\n      // avoid infinite self recursion\n      activeSub !== this\n    ) {\n      batch(this, true)\n      return true\n    } else if (__DEV__) {\n      // TODO warn\n    }\n  }\n\n  get value(): T {\n    const link = __DEV__\n      ? this.dep.track({\n          target: this,\n          type: TrackOpTypes.GET,\n          key: 'value',\n        })\n      : this.dep.track()\n    refreshComputed(this)\n    // sync version after evaluation\n    if (link) {\n      link.version = this.dep.version\n    }\n    return this._value\n  }\n\n  set value(newValue) {\n    if (this.setter) {\n      this.setter(newValue)\n    } else if (__DEV__) {\n      warn('Write operation failed: computed value is readonly')\n    }\n  }\n}\n\n/**\n * Takes a getter function and returns a readonly reactive ref object for the\n * returned value from the getter. It can also take an object with get and set\n * functions to create a writable ref object.\n *\n * @example\n * ```js\n * // Creating a readonly computed ref:\n * const count = ref(1)\n * const plusOne = computed(() => count.value + 1)\n *\n * console.log(plusOne.value) // 2\n * plusOne.value++ // error\n * ```\n *\n * ```js\n * // Creating a writable computed ref:\n * const count = ref(1)\n * const plusOne = computed({\n *   get: () => count.value + 1,\n *   set: (val) => {\n *     count.value = val - 1\n *   }\n * })\n *\n * plusOne.value = 1\n * console.log(count.value) // 0\n * ```\n *\n * @param getter - Function that produces the next value.\n * @param debugOptions - For debugging. See {@link https://vuejs.org/guide/extras/reactivity-in-depth.html#computed-debugging}.\n * @see {@link https://vuejs.org/api/reactivity-core.html#computed}\n */\nexport function computed<T>(\n  getter: ComputedGetter<T>,\n  debugOptions?: DebuggerOptions,\n): ComputedRef<T>\nexport function computed<T, S = T>(\n  options: WritableComputedOptions<T, S>,\n  debugOptions?: DebuggerOptions,\n): WritableComputedRef<T, S>\nexport function computed<T>(\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\n  debugOptions?: DebuggerOptions,\n  isSSR = false,\n) {\n  let getter: ComputedGetter<T>\n  let setter: ComputedSetter<T> | undefined\n\n  if (isFunction(getterOrOptions)) {\n    getter = getterOrOptions\n  } else {\n    getter = getterOrOptions.get\n    setter = getterOrOptions.set\n  }\n\n  const cRef = new ComputedRefImpl(getter, setter, isSSR)\n\n  if (__DEV__ && debugOptions && !isSSR) {\n    cRef.onTrack = debugOptions.onTrack\n    cRef.onTrigger = debugOptions.onTrigger\n  }\n\n  return cRef as any\n}\n", "import {\n  EMPTY_OBJ,\n  NOOP,\n  hasChanged,\n  isArray,\n  isFunction,\n  isMap,\n  isObject,\n  isPlainObject,\n  isSet,\n  remove,\n} from '@vue/shared'\nimport { warn } from './warning'\nimport type { ComputedRef } from './computed'\nimport { ReactiveFlags } from './constants'\nimport {\n  type DebuggerOptions,\n  EffectFlags,\n  type EffectScheduler,\n  ReactiveEffect,\n  pauseTracking,\n  resetTracking,\n} from './effect'\nimport { isReactive, isShallow } from './reactive'\nimport { type Ref, isRef } from './ref'\nimport { getCurrentScope } from './effectScope'\n\n// These errors were transferred from `packages/runtime-core/src/errorHandling.ts`\n// to @vue/reactivity to allow co-location with the moved base watch logic, hence\n// it is essential to keep these values unchanged.\nexport enum WatchErrorCodes {\n  WATCH_GETTER = 2,\n  WATCH_CALLBACK,\n  WATCH_CLEANUP,\n}\n\nexport type WatchEffect = (onCleanup: OnCleanup) => void\n\nexport type WatchSource<T = any> = Ref<T, any> | ComputedRef<T> | (() => T)\n\nexport type WatchCallback<V = any, OV = any> = (\n  value: V,\n  oldValue: OV,\n  onCleanup: OnCleanup,\n) => any\n\nexport type OnCleanup = (cleanupFn: () => void) => void\n\nexport interface WatchOptions<Immediate = boolean> extends DebuggerOptions {\n  immediate?: Immediate\n  deep?: boolean | number\n  once?: boolean\n  scheduler?: WatchScheduler\n  onWarn?: (msg: string, ...args: any[]) => void\n  /**\n   * @internal\n   */\n  augmentJob?: (job: (...args: any[]) => void) => void\n  /**\n   * @internal\n   */\n  call?: (\n    fn: Function | Function[],\n    type: WatchErrorCodes,\n    args?: unknown[],\n  ) => void\n}\n\nexport type WatchStopHandle = () => void\n\nexport interface WatchHandle extends WatchStopHandle {\n  pause: () => void\n  resume: () => void\n  stop: () => void\n}\n\n// initial value for watchers to trigger on undefined initial values\nconst INITIAL_WATCHER_VALUE = {}\n\nexport type WatchScheduler = (job: () => void, isFirstRun: boolean) => void\n\nconst cleanupMap: WeakMap<ReactiveEffect, (() => void)[]> = new WeakMap()\nlet activeWatcher: ReactiveEffect | undefined = undefined\n\n/**\n * Returns the current active effect if there is one.\n */\nexport function getCurrentWatcher(): ReactiveEffect<any> | undefined {\n  return activeWatcher\n}\n\n/**\n * Registers a cleanup callback on the current active effect. This\n * registered cleanup callback will be invoked right before the\n * associated effect re-runs.\n *\n * @param cleanupFn - The callback function to attach to the effect's cleanup.\n * @param failSilently - if `true`, will not throw warning when called without\n * an active effect.\n * @param owner - The effect that this cleanup function should be attached to.\n * By default, the current active effect.\n */\nexport function onWatcherCleanup(\n  cleanupFn: () => void,\n  failSilently = false,\n  owner: ReactiveEffect | undefined = activeWatcher,\n): void {\n  if (owner) {\n    let cleanups = cleanupMap.get(owner)\n    if (!cleanups) cleanupMap.set(owner, (cleanups = []))\n    cleanups.push(cleanupFn)\n  } else if (__DEV__ && !failSilently) {\n    warn(\n      `onWatcherCleanup() was called when there was no active watcher` +\n        ` to associate with.`,\n    )\n  }\n}\n\nexport function watch(\n  source: WatchSource | WatchSource[] | WatchEffect | object,\n  cb?: WatchCallback | null,\n  options: WatchOptions = EMPTY_OBJ,\n): WatchHandle {\n  const { immediate, deep, once, scheduler, augmentJob, call } = options\n\n  const warnInvalidSource = (s: unknown) => {\n    ;(options.onWarn || warn)(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, ` +\n        `a reactive object, or an array of these types.`,\n    )\n  }\n\n  const reactiveGetter = (source: object) => {\n    // traverse will happen in wrapped getter below\n    if (deep) return source\n    // for `deep: false | 0` or shallow reactive, only traverse root-level properties\n    if (isShallow(source) || deep === false || deep === 0)\n      return traverse(source, 1)\n    // for `deep: undefined` on a reactive object, deeply traverse all properties\n    return traverse(source)\n  }\n\n  let effect: ReactiveEffect\n  let getter: () => any\n  let cleanup: (() => void) | undefined\n  let boundCleanup: typeof onWatcherCleanup\n  let forceTrigger = false\n  let isMultiSource = false\n\n  if (isRef(source)) {\n    getter = () => source.value\n    forceTrigger = isShallow(source)\n  } else if (isReactive(source)) {\n    getter = () => reactiveGetter(source)\n    forceTrigger = true\n  } else if (isArray(source)) {\n    isMultiSource = true\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\n    getter = () =>\n      source.map(s => {\n        if (isRef(s)) {\n          return s.value\n        } else if (isReactive(s)) {\n          return reactiveGetter(s)\n        } else if (isFunction(s)) {\n          return call ? call(s, WatchErrorCodes.WATCH_GETTER) : s()\n        } else {\n          __DEV__ && warnInvalidSource(s)\n        }\n      })\n  } else if (isFunction(source)) {\n    if (cb) {\n      // getter with cb\n      getter = call\n        ? () => call(source, WatchErrorCodes.WATCH_GETTER)\n        : (source as () => any)\n    } else {\n      // no cb -> simple effect\n      getter = () => {\n        if (cleanup) {\n          pauseTracking()\n          try {\n            cleanup()\n          } finally {\n            resetTracking()\n          }\n        }\n        const currentEffect = activeWatcher\n        activeWatcher = effect\n        try {\n          return call\n            ? call(source, WatchErrorCodes.WATCH_CALLBACK, [boundCleanup])\n            : source(boundCleanup)\n        } finally {\n          activeWatcher = currentEffect\n        }\n      }\n    }\n  } else {\n    getter = NOOP\n    __DEV__ && warnInvalidSource(source)\n  }\n\n  if (cb && deep) {\n    const baseGetter = getter\n    const depth = deep === true ? Infinity : deep\n    getter = () => traverse(baseGetter(), depth)\n  }\n\n  const scope = getCurrentScope()\n  const watchHandle: WatchHandle = () => {\n    effect.stop()\n    if (scope && scope.active) {\n      remove(scope.effects, effect)\n    }\n  }\n\n  if (once && cb) {\n    const _cb = cb\n    cb = (...args) => {\n      _cb(...args)\n      watchHandle()\n    }\n  }\n\n  let oldValue: any = isMultiSource\n    ? new Array((source as []).length).fill(INITIAL_WATCHER_VALUE)\n    : INITIAL_WATCHER_VALUE\n\n  const job = (immediateFirstRun?: boolean) => {\n    if (\n      !(effect.flags & EffectFlags.ACTIVE) ||\n      (!effect.dirty && !immediateFirstRun)\n    ) {\n      return\n    }\n    if (cb) {\n      // watch(source, cb)\n      const newValue = effect.run()\n      if (\n        deep ||\n        forceTrigger ||\n        (isMultiSource\n          ? (newValue as any[]).some((v, i) => hasChanged(v, oldValue[i]))\n          : hasChanged(newValue, oldValue))\n      ) {\n        // cleanup before running cb again\n        if (cleanup) {\n          cleanup()\n        }\n        const currentWatcher = activeWatcher\n        activeWatcher = effect\n        try {\n          const args = [\n            newValue,\n            // pass undefined as the old value when it's changed for the first time\n            oldValue === INITIAL_WATCHER_VALUE\n              ? undefined\n              : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE\n                ? []\n                : oldValue,\n            boundCleanup,\n          ]\n          call\n            ? call(cb!, WatchErrorCodes.WATCH_CALLBACK, args)\n            : // @ts-expect-error\n              cb!(...args)\n          oldValue = newValue\n        } finally {\n          activeWatcher = currentWatcher\n        }\n      }\n    } else {\n      // watchEffect\n      effect.run()\n    }\n  }\n\n  if (augmentJob) {\n    augmentJob(job)\n  }\n\n  effect = new ReactiveEffect(getter)\n\n  effect.scheduler = scheduler\n    ? () => scheduler(job, false)\n    : (job as EffectScheduler)\n\n  boundCleanup = fn => onWatcherCleanup(fn, false, effect)\n\n  cleanup = effect.onStop = () => {\n    const cleanups = cleanupMap.get(effect)\n    if (cleanups) {\n      if (call) {\n        call(cleanups, WatchErrorCodes.WATCH_CLEANUP)\n      } else {\n        for (const cleanup of cleanups) cleanup()\n      }\n      cleanupMap.delete(effect)\n    }\n  }\n\n  if (__DEV__) {\n    effect.onTrack = options.onTrack\n    effect.onTrigger = options.onTrigger\n  }\n\n  // initial run\n  if (cb) {\n    if (immediate) {\n      job(true)\n    } else {\n      oldValue = effect.run()\n    }\n  } else if (scheduler) {\n    scheduler(job.bind(null, true), true)\n  } else {\n    effect.run()\n  }\n\n  watchHandle.pause = effect.pause.bind(effect)\n  watchHandle.resume = effect.resume.bind(effect)\n  watchHandle.stop = watchHandle\n\n  return watchHandle\n}\n\nexport function traverse(\n  value: unknown,\n  depth: number = Infinity,\n  seen?: Set<unknown>,\n): unknown {\n  if (depth <= 0 || !isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\n    return value\n  }\n\n  seen = seen || new Set()\n  if (seen.has(value)) {\n    return value\n  }\n  seen.add(value)\n  depth--\n  if (isRef(value)) {\n    traverse(value.value, depth, seen)\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], depth, seen)\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v: any) => {\n      traverse(v, depth, seen)\n    })\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], depth, seen)\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n      if (Object.prototype.propertyIsEnumerable.call(value, key)) {\n        traverse(value[key as any], depth, seen)\n      }\n    }\n  }\n  return value\n}\n", "import type { VNode } from './vnode'\nimport {\n  type ComponentInternalInstance,\n  type ConcreteComponent,\n  type Data,\n  formatComponentName,\n} from './component'\nimport { isFunction, isString } from '@vue/shared'\nimport { isRef, pauseTracking, resetTracking, toRaw } from '@vue/reactivity'\nimport { ErrorCodes, callWithErrorHandling } from './errorHandling'\n\ntype ComponentVNode = VNode & {\n  type: ConcreteComponent\n}\n\nconst stack: VNode[] = []\n\ntype TraceEntry = {\n  vnode: ComponentVNode\n  recurseCount: number\n}\n\ntype ComponentTraceStack = TraceEntry[]\n\nexport function pushWarningContext(vnode: VNode): void {\n  stack.push(vnode)\n}\n\nexport function popWarningContext(): void {\n  stack.pop()\n}\n\nlet isWarning = false\n\nexport function warn(msg: string, ...args: any[]): void {\n  if (isWarning) return\n  isWarning = true\n\n  // avoid props formatting or warn handler tracking deps that might be mutated\n  // during patch, leading to infinite recursion.\n  pauseTracking()\n\n  const instance = stack.length ? stack[stack.length - 1].component : null\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\n  const trace = getComponentTrace()\n\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      ErrorCodes.APP_WARN_HANDLER,\n      [\n        // eslint-disable-next-line no-restricted-syntax\n        msg + args.map(a => a.toString?.() ?? JSON.stringify(a)).join(''),\n        instance && instance.proxy,\n        trace\n          .map(\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`,\n          )\n          .join('\\n'),\n        trace,\n      ],\n    )\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\n    if (\n      trace.length &&\n      // avoid spamming console during tests\n      !__TEST__\n    ) {\n      /* v8 ignore next 2 */\n      warnArgs.push(`\\n`, ...formatTrace(trace))\n    }\n    console.warn(...warnArgs)\n  }\n\n  resetTracking()\n  isWarning = false\n}\n\nexport function getComponentTrace(): ComponentTraceStack {\n  let currentVNode: VNode | null = stack[stack.length - 1]\n  if (!currentVNode) {\n    return []\n  }\n\n  // we can't just use the stack because it will be incomplete during updates\n  // that did not start from the root. Re-construct the parent chain using\n  // instance parent pointers.\n  const normalizedStack: ComponentTraceStack = []\n\n  while (currentVNode) {\n    const last = normalizedStack[0]\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode as ComponentVNode,\n        recurseCount: 0,\n      })\n    }\n    const parentInstance: ComponentInternalInstance | null =\n      currentVNode.component && currentVNode.component.parent\n    currentVNode = parentInstance && parentInstance.vnode\n  }\n\n  return normalizedStack\n}\n\n/* v8 ignore start */\nfunction formatTrace(trace: ComponentTraceStack): any[] {\n  const logs: any[] = []\n  trace.forEach((entry, i) => {\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\n  })\n  return logs\n}\n\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\n  const postfix =\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\n  const isRoot = vnode.component ? vnode.component.parent == null : false\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot,\n  )}`\n  const close = `>` + postfix\n  return vnode.props\n    ? [open, ...formatProps(vnode.props), close]\n    : [open + close]\n}\n\nfunction formatProps(props: Data): any[] {\n  const res: any[] = []\n  const keys = Object.keys(props)\n  keys.slice(0, 3).forEach(key => {\n    res.push(...formatProp(key, props[key]))\n  })\n  if (keys.length > 3) {\n    res.push(` ...`)\n  }\n  return res\n}\n\nfunction formatProp(key: string, value: unknown): any[]\nfunction formatProp(key: string, value: unknown, raw: true): any\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\n  if (isString(value)) {\n    value = JSON.stringify(value)\n    return raw ? value : [`${key}=${value}`]\n  } else if (\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    value == null\n  ) {\n    return raw ? value : [`${key}=${value}`]\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true)\n    return raw ? value : [`${key}=Ref<`, value, `>`]\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\n  } else {\n    value = toRaw(value)\n    return raw ? value : [`${key}=`, value]\n  }\n}\n\n/**\n * @internal\n */\nexport function assertNumber(val: unknown, type: string): void {\n  if (!__DEV__) return\n  if (val === undefined) {\n    return\n  } else if (typeof val !== 'number') {\n    warn(`${type} is not a valid number - ` + `got ${JSON.stringify(val)}.`)\n  } else if (isNaN(val)) {\n    warn(`${type} is NaN - ` + 'the duration expression might be incorrect.')\n  }\n}\n/* v8 ignore stop */\n", "import { pauseTracking, resetTracking } from '@vue/reactivity'\nimport type { VNode } from './vnode'\nimport type { ComponentInternalInstance } from './component'\nimport { popWarningContext, pushWarningContext, warn } from './warning'\nimport { EMPTY_OBJ, isArray, isFunction, isPromise } from '@vue/shared'\nimport { LifecycleHooks } from './enums'\nimport { WatchErrorCodes } from '@vue/reactivity'\n\n// contexts where user provided function may be executed, in addition to\n// lifecycle hooks.\nexport enum ErrorCodes {\n  SETUP_FUNCTION,\n  RENDER_FUNCTION,\n  // The error codes for the watch have been transferred to the reactivity\n  // package along with baseWatch to maintain code compatibility. Hence,\n  // it is essential to keep these values unchanged.\n  // WATCH_GETTER,\n  // WATCH_CALLBACK,\n  // WATCH_CLEANUP,\n  NATIVE_EVENT_HANDLER = 5,\n  COMPONENT_EVENT_HANDLER,\n  VNODE_HOOK,\n  DIRECTIVE_HOOK,\n  TRANSITION_HOOK,\n  APP_ERROR_HANDLER,\n  APP_WARN_HANDLER,\n  FUNCTION_REF,\n  ASYNC_COMPONENT_LOADER,\n  SCHEDULER,\n  COMPONENT_UPDATE,\n  APP_UNMOUNT_CLEANUP,\n}\n\nexport const ErrorTypeStrings: Record<ErrorTypes, string> = {\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\n  [LifecycleHooks.CREATED]: 'created hook',\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\n  [LifecycleHooks.UPDATED]: 'updated',\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\n  [WatchErrorCodes.WATCH_GETTER]: 'watcher getter',\n  [WatchErrorCodes.WATCH_CALLBACK]: 'watcher callback',\n  [WatchErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\n  [ErrorCodes.SCHEDULER]: 'scheduler flush',\n  [ErrorCodes.COMPONENT_UPDATE]: 'component update',\n  [ErrorCodes.APP_UNMOUNT_CLEANUP]: 'app unmount cleanup function',\n}\n\nexport type ErrorTypes = LifecycleHooks | ErrorCodes | WatchErrorCodes\n\nexport function callWithErrorHandling(\n  fn: Function,\n  instance: ComponentInternalInstance | null | undefined,\n  type: ErrorTypes,\n  args?: unknown[],\n): any {\n  try {\n    return args ? fn(...args) : fn()\n  } catch (err) {\n    handleError(err, instance, type)\n  }\n}\n\nexport function callWithAsyncErrorHandling(\n  fn: Function | Function[],\n  instance: ComponentInternalInstance | null,\n  type: ErrorTypes,\n  args?: unknown[],\n): any {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args)\n    if (res && isPromise(res)) {\n      res.catch(err => {\n        handleError(err, instance, type)\n      })\n    }\n    return res\n  }\n\n  if (isArray(fn)) {\n    const values = []\n    for (let i = 0; i < fn.length; i++) {\n      values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\n    }\n    return values\n  } else if (__DEV__) {\n    warn(\n      `Invalid value type passed to callWithAsyncErrorHandling(): ${typeof fn}`,\n    )\n  }\n}\n\nexport function handleError(\n  err: unknown,\n  instance: ComponentInternalInstance | null | undefined,\n  type: ErrorTypes,\n  throwInDev = true,\n): void {\n  const contextVNode = instance ? instance.vnode : null\n  const { errorHandler, throwUnhandledErrorInProduction } =\n    (instance && instance.appContext.config) || EMPTY_OBJ\n  if (instance) {\n    let cur = instance.parent\n    // the exposed instance is the render proxy to keep it consistent with 2.x\n    const exposedInstance = instance.proxy\n    // in production the hook receives only the error code\n    const errorInfo = __DEV__\n      ? ErrorTypeStrings[type]\n      : `https://vuejs.org/error-reference/#runtime-${type}`\n    while (cur) {\n      const errorCapturedHooks = cur.ec\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\n          ) {\n            return\n          }\n        }\n      }\n      cur = cur.parent\n    }\n    // app-level handling\n    if (errorHandler) {\n      pauseTracking()\n      callWithErrorHandling(errorHandler, null, ErrorCodes.APP_ERROR_HANDLER, [\n        err,\n        exposedInstance,\n        errorInfo,\n      ])\n      resetTracking()\n      return\n    }\n  }\n  logError(err, type, contextVNode, throwInDev, throwUnhandledErrorInProduction)\n}\n\nfunction logError(\n  err: unknown,\n  type: ErrorTypes,\n  contextVNode: VNode | null,\n  throwInDev = true,\n  throwInProd = false,\n) {\n  if (__DEV__) {\n    const info = ErrorTypeStrings[type]\n    if (contextVNode) {\n      pushWarningContext(contextVNode)\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\n    if (contextVNode) {\n      popWarningContext()\n    }\n    // crash in dev by default so it's more noticeable\n    if (throwInDev) {\n      throw err\n    } else if (!__TEST__) {\n      console.error(err)\n    }\n  } else if (throwInProd) {\n    throw err\n  } else {\n    // recover in prod to reduce the impact on end-user\n    console.error(err)\n  }\n}\n", "import { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\nimport { NOOP, isArray } from '@vue/shared'\nimport { type ComponentInternalInstance, getComponentName } from './component'\n\nexport enum SchedulerJobFlags {\n  QUEUED = 1 << 0,\n  PRE = 1 << 1,\n  /**\n   * Indicates whether the effect is allowed to recursively trigger itself\n   * when managed by the scheduler.\n   *\n   * By default, a job cannot trigger itself because some built-in method calls,\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\n   * can lead to confusing infinite loops.\n   * The allowed cases are component update functions and watch callbacks.\n   * Component update functions may update child component props, which in turn\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\n   * triggers itself again, it's likely intentional and it is the user's\n   * responsibility to perform recursive state mutation that eventually\n   * stabilizes (#1727).\n   */\n  ALLOW_RECURSE = 1 << 2,\n  DISPOSED = 1 << 3,\n}\n\nexport interface SchedulerJob extends Function {\n  id?: number\n  /**\n   * flags can technically be undefined, but it can still be used in bitwise\n   * operations just like 0.\n   */\n  flags?: SchedulerJobFlags\n  /**\n   * Attached by renderer.ts when setting up a component's render effect\n   * Used to obtain component information when reporting max recursive updates.\n   */\n  i?: ComponentInternalInstance\n}\n\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\n\nconst queue: SchedulerJob[] = []\nlet flushIndex = -1\n\nconst pendingPostFlushCbs: SchedulerJob[] = []\nlet activePostFlushCbs: SchedulerJob[] | null = null\nlet postFlushIndex = 0\n\nconst resolvedPromise = /*@__PURE__*/ Promise.resolve() as Promise<any>\nlet currentFlushPromise: Promise<void> | null = null\n\nconst RECURSION_LIMIT = 100\ntype CountMap = Map<SchedulerJob, number>\n\nexport function nextTick<T = void, R = void>(\n  this: T,\n  fn?: (this: T) => R,\n): Promise<Awaited<R>> {\n  const p = currentFlushPromise || resolvedPromise\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\n}\n\n// Use binary-search to find a suitable position in the queue. The queue needs\n// to be sorted in increasing order of the job ids. This ensures that:\n// 1. Components are updated from parent to child. As the parent is always\n//    created before the child it will always have a smaller id.\n// 2. If a component is unmounted during a parent component's update, its update\n//    can be skipped.\n// A pre watcher will have the same id as its component's update job. The\n// watcher should be inserted immediately before the update job. This allows\n// watchers to be skipped if the component is unmounted by the parent update.\nfunction findInsertionIndex(id: number) {\n  let start = flushIndex + 1\n  let end = queue.length\n\n  while (start < end) {\n    const middle = (start + end) >>> 1\n    const middleJob = queue[middle]\n    const middleJobId = getId(middleJob)\n    if (\n      middleJobId < id ||\n      (middleJobId === id && middleJob.flags! & SchedulerJobFlags.PRE)\n    ) {\n      start = middle + 1\n    } else {\n      end = middle\n    }\n  }\n\n  return start\n}\n\nexport function queueJob(job: SchedulerJob): void {\n  if (!(job.flags! & SchedulerJobFlags.QUEUED)) {\n    const jobId = getId(job)\n    const lastJob = queue[queue.length - 1]\n    if (\n      !lastJob ||\n      // fast path when the job id is larger than the tail\n      (!(job.flags! & SchedulerJobFlags.PRE) && jobId >= getId(lastJob))\n    ) {\n      queue.push(job)\n    } else {\n      queue.splice(findInsertionIndex(jobId), 0, job)\n    }\n\n    job.flags! |= SchedulerJobFlags.QUEUED\n\n    queueFlush()\n  }\n}\n\nfunction queueFlush() {\n  if (!currentFlushPromise) {\n    currentFlushPromise = resolvedPromise.then(flushJobs)\n  }\n}\n\nexport function queuePostFlushCb(cb: SchedulerJobs): void {\n  if (!isArray(cb)) {\n    if (activePostFlushCbs && cb.id === -1) {\n      activePostFlushCbs.splice(postFlushIndex + 1, 0, cb)\n    } else if (!(cb.flags! & SchedulerJobFlags.QUEUED)) {\n      pendingPostFlushCbs.push(cb)\n      cb.flags! |= SchedulerJobFlags.QUEUED\n    }\n  } else {\n    // if cb is an array, it is a component lifecycle hook which can only be\n    // triggered by a job, which is already deduped in the main queue, so\n    // we can skip duplicate check here to improve perf\n    pendingPostFlushCbs.push(...cb)\n  }\n  queueFlush()\n}\n\nexport function flushPreFlushCbs(\n  instance?: ComponentInternalInstance,\n  seen?: CountMap,\n  // skip the current job\n  i: number = flushIndex + 1,\n): void {\n  if (__DEV__) {\n    seen = seen || new Map()\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i]\n    if (cb && cb.flags! & SchedulerJobFlags.PRE) {\n      if (instance && cb.id !== instance.uid) {\n        continue\n      }\n      if (__DEV__ && checkRecursiveUpdates(seen!, cb)) {\n        continue\n      }\n      queue.splice(i, 1)\n      i--\n      if (cb.flags! & SchedulerJobFlags.ALLOW_RECURSE) {\n        cb.flags! &= ~SchedulerJobFlags.QUEUED\n      }\n      cb()\n      if (!(cb.flags! & SchedulerJobFlags.ALLOW_RECURSE)) {\n        cb.flags! &= ~SchedulerJobFlags.QUEUED\n      }\n    }\n  }\n}\n\nexport function flushPostFlushCbs(seen?: CountMap): void {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)].sort(\n      (a, b) => getId(a) - getId(b),\n    )\n    pendingPostFlushCbs.length = 0\n\n    // #1947 already has active queue, nested flushPostFlushCbs call\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped)\n      return\n    }\n\n    activePostFlushCbs = deduped\n    if (__DEV__) {\n      seen = seen || new Map()\n    }\n\n    for (\n      postFlushIndex = 0;\n      postFlushIndex < activePostFlushCbs.length;\n      postFlushIndex++\n    ) {\n      const cb = activePostFlushCbs[postFlushIndex]\n      if (__DEV__ && checkRecursiveUpdates(seen!, cb)) {\n        continue\n      }\n      if (cb.flags! & SchedulerJobFlags.ALLOW_RECURSE) {\n        cb.flags! &= ~SchedulerJobFlags.QUEUED\n      }\n      if (!(cb.flags! & SchedulerJobFlags.DISPOSED)) cb()\n      cb.flags! &= ~SchedulerJobFlags.QUEUED\n    }\n    activePostFlushCbs = null\n    postFlushIndex = 0\n  }\n}\n\nconst getId = (job: SchedulerJob): number =>\n  job.id == null ? (job.flags! & SchedulerJobFlags.PRE ? -1 : Infinity) : job.id\n\nfunction flushJobs(seen?: CountMap) {\n  if (__DEV__) {\n    seen = seen || new Map()\n  }\n\n  // conditional usage of checkRecursiveUpdate must be determined out of\n  // try ... catch block since Rollup by default de-optimizes treeshaking\n  // inside try-catch. This can leave all warning code unshaked. Although\n  // they would get eventually shaken by a minifier like terser, some minifiers\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\n  const check = __DEV__\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\n    : NOOP\n\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex]\n      if (job && !(job.flags! & SchedulerJobFlags.DISPOSED)) {\n        if (__DEV__ && check(job)) {\n          continue\n        }\n        if (job.flags! & SchedulerJobFlags.ALLOW_RECURSE) {\n          job.flags! &= ~SchedulerJobFlags.QUEUED\n        }\n        callWithErrorHandling(\n          job,\n          job.i,\n          job.i ? ErrorCodes.COMPONENT_UPDATE : ErrorCodes.SCHEDULER,\n        )\n        if (!(job.flags! & SchedulerJobFlags.ALLOW_RECURSE)) {\n          job.flags! &= ~SchedulerJobFlags.QUEUED\n        }\n      }\n    }\n  } finally {\n    // If there was an error we still need to clear the QUEUED flags\n    for (; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex]\n      if (job) {\n        job.flags! &= ~SchedulerJobFlags.QUEUED\n      }\n    }\n\n    flushIndex = -1\n    queue.length = 0\n\n    flushPostFlushCbs(seen)\n\n    currentFlushPromise = null\n    // If new jobs have been added to either queue, keep flushing\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen)\n    }\n  }\n}\n\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\n  const count = seen.get(fn) || 0\n  if (count > RECURSION_LIMIT) {\n    const instance = fn.i\n    const componentName = instance && getComponentName(instance.type)\n    handleError(\n      `Maximum recursive updates exceeded${\n        componentName ? ` in component <${componentName}>` : ``\n      }. ` +\n        `This means you have a reactive effect that is mutating its own ` +\n        `dependencies and thus recursively triggering itself. Possible sources ` +\n        `include component template, render function, updated hook or ` +\n        `watcher source function.`,\n      null,\n      ErrorCodes.APP_ERROR_HANDLER,\n    )\n    return true\n  }\n  seen.set(fn, count + 1)\n  return false\n}\n", "/* eslint-disable no-restricted-globals */\nimport {\n  type ClassComponent,\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type ConcreteComponent,\n  type InternalRenderFunction,\n  isClassComponent,\n} from './component'\nimport { queueJob, queuePostFlushCb } from './scheduler'\nimport { extend, getGlobalThis } from '@vue/shared'\n\ntype HMRComponent = ComponentOptions | ClassComponent\n\nexport let isHmrUpdating = false\n\nexport const hmrDirtyComponents: Map<\n  ConcreteComponent,\n  Set<ComponentInternalInstance>\n> = new Map<ConcreteComponent, Set<ComponentInternalInstance>>()\n\nexport interface HMRRuntime {\n  createRecord: typeof createRecord\n  rerender: typeof rerender\n  reload: typeof reload\n}\n\n// Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\nif (__DEV__) {\n  getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload),\n  } as HMRRuntime\n}\n\nconst map: Map<\n  string,\n  {\n    // the initial component definition is recorded on import - this allows us\n    // to apply hot updates to the component even when there are no actively\n    // rendered instance.\n    initialDef: ComponentOptions\n    instances: Set<ComponentInternalInstance>\n  }\n> = new Map()\n\nexport function registerHMR(instance: ComponentInternalInstance): void {\n  const id = instance.type.__hmrId!\n  let record = map.get(id)\n  if (!record) {\n    createRecord(id, instance.type as HMRComponent)\n    record = map.get(id)!\n  }\n  record.instances.add(instance)\n}\n\nexport function unregisterHMR(instance: ComponentInternalInstance): void {\n  map.get(instance.type.__hmrId!)!.instances.delete(instance)\n}\n\nfunction createRecord(id: string, initialDef: HMRComponent): boolean {\n  if (map.has(id)) {\n    return false\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: new Set(),\n  })\n  return true\n}\n\nfunction normalizeClassComponent(component: HMRComponent): ComponentOptions {\n  return isClassComponent(component) ? component.__vccOpts : component\n}\n\nfunction rerender(id: string, newRender?: Function): void {\n  const record = map.get(id)\n  if (!record) {\n    return\n  }\n\n  // update initial record (for not-yet-rendered component)\n  record.initialDef.render = newRender\n\n  // Create a snapshot which avoids the set being mutated during updates\n  ;[...record.instances].forEach(instance => {\n    if (newRender) {\n      instance.render = newRender as InternalRenderFunction\n      normalizeClassComponent(instance.type as HMRComponent).render = newRender\n    }\n    instance.renderCache = []\n    // this flag forces child components with slot content to update\n    isHmrUpdating = true\n    instance.update()\n    isHmrUpdating = false\n  })\n}\n\nfunction reload(id: string, newComp: HMRComponent): void {\n  const record = map.get(id)\n  if (!record) return\n\n  newComp = normalizeClassComponent(newComp)\n  // update initial def (for not-yet-rendered components)\n  updateComponentDef(record.initialDef, newComp)\n\n  // create a snapshot which avoids the set being mutated during updates\n  const instances = [...record.instances]\n\n  for (let i = 0; i < instances.length; i++) {\n    const instance = instances[i]\n    const oldComp = normalizeClassComponent(instance.type as HMRComponent)\n\n    let dirtyInstances = hmrDirtyComponents.get(oldComp)\n    if (!dirtyInstances) {\n      // 1. Update existing comp definition to match new one\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp)\n      }\n      // 2. mark definition dirty. This forces the renderer to replace the\n      // component on patch.\n      hmrDirtyComponents.set(oldComp, (dirtyInstances = new Set()))\n    }\n    dirtyInstances.add(instance)\n\n    // 3. invalidate options resolution cache\n    instance.appContext.propsCache.delete(instance.type as any)\n    instance.appContext.emitsCache.delete(instance.type as any)\n    instance.appContext.optionsCache.delete(instance.type as any)\n\n    // 4. actually update\n    if (instance.ceReload) {\n      // custom element\n      dirtyInstances.add(instance)\n      instance.ceReload((newComp as any).styles)\n      dirtyInstances.delete(instance)\n    } else if (instance.parent) {\n      // 4. Force the parent instance to re-render. This will cause all updated\n      // components to be unmounted and re-mounted. Queue the update so that we\n      // don't end up forcing the same parent to re-render multiple times.\n      queueJob(() => {\n        isHmrUpdating = true\n        instance.parent!.update()\n        isHmrUpdating = false\n        // #6930, #11248 avoid infinite recursion\n        dirtyInstances.delete(instance)\n      })\n    } else if (instance.appContext.reload) {\n      // root instance mounted via createApp() has a reload method\n      instance.appContext.reload()\n    } else if (typeof window !== 'undefined') {\n      // root instance inside tree created via raw render(). Force reload.\n      window.location.reload()\n    } else {\n      console.warn(\n        '[HMR] Root or manually mounted instance modified. Full reload required.',\n      )\n    }\n\n    // update custom element child style\n    if (instance.root.ce && instance !== instance.root) {\n      instance.root.ce._removeChildStyle(oldComp)\n    }\n  }\n\n  // 5. make sure to cleanup dirty hmr components after update\n  queuePostFlushCb(() => {\n    hmrDirtyComponents.clear()\n  })\n}\n\nfunction updateComponentDef(\n  oldComp: ComponentOptions,\n  newComp: ComponentOptions,\n) {\n  extend(oldComp, newComp)\n  for (const key in oldComp) {\n    if (key !== '__file' && !(key in newComp)) {\n      delete oldComp[key]\n    }\n  }\n}\n\nfunction tryWrap(fn: (id: string, arg: any) => any): Function {\n  return (id: string, arg: any) => {\n    try {\n      return fn(id, arg)\n    } catch (e: any) {\n      console.error(e)\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. ` +\n          `Full reload required.`,\n      )\n    }\n  }\n}\n", "/* eslint-disable no-restricted-globals */\nimport type { App } from './apiCreateApp'\nimport { Comment, Fragment, Static, Text } from './vnode'\nimport type { ComponentInternalInstance } from './component'\n\ninterface AppRecord {\n  id: number\n  app: App\n  version: string\n  types: Record<string, string | Symbol>\n}\n\nenum DevtoolsHooks {\n  APP_INIT = 'app:init',\n  APP_UNMOUNT = 'app:unmount',\n  COMPONENT_UPDATED = 'component:updated',\n  COMPONENT_ADDED = 'component:added',\n  COMPONENT_REMOVED = 'component:removed',\n  COMPONENT_EMIT = 'component:emit',\n  PERFORMANCE_START = 'perf:start',\n  PERFORMANCE_END = 'perf:end',\n}\n\nexport interface DevtoolsHook {\n  enabled?: boolean\n  emit: (event: string, ...payload: any[]) => void\n  on: (event: string, handler: Function) => void\n  once: (event: string, handler: Function) => void\n  off: (event: string, handler: Function) => void\n  appRecords: AppRecord[]\n  /**\n   * Added at https://github.com/vuejs/devtools/commit/f2ad51eea789006ab66942e5a27c0f0986a257f9\n   * Returns whether the arg was buffered or not\n   */\n  cleanupBuffer?: (matchArg: unknown) => boolean\n}\n\nexport let devtools: DevtoolsHook\n\nlet buffer: { event: string; args: any[] }[] = []\n\nlet devtoolsNotInstalled = false\n\nfunction emit(event: string, ...args: any[]) {\n  if (devtools) {\n    devtools.emit(event, ...args)\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args })\n  }\n}\n\nexport function setDevtoolsHook(hook: DevtoolsHook, target: any): void {\n  devtools = hook\n  if (devtools) {\n    devtools.enabled = true\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args))\n    buffer = []\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== 'undefined' &&\n    // some envs mock window but not fully\n    window.HTMLElement &&\n    // also exclude jsdom\n    // eslint-disable-next-line no-restricted-syntax\n    !window.navigator?.userAgent?.includes('jsdom')\n  ) {\n    const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [])\n    replay.push((newHook: DevtoolsHook) => {\n      setDevtoolsHook(newHook, target)\n    })\n    // clear buffer after 3s - the user probably doesn't have devtools installed\n    // at all, and keeping the buffer will cause memory leaks (#4738)\n    setTimeout(() => {\n      if (!devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null\n        devtoolsNotInstalled = true\n        buffer = []\n      }\n    }, 3000)\n  } else {\n    // non-browser env, assume not installed\n    devtoolsNotInstalled = true\n    buffer = []\n  }\n}\n\nexport function devtoolsInitApp(app: App, version: string): void {\n  emit(DevtoolsHooks.APP_INIT, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static,\n  })\n}\n\nexport function devtoolsUnmountApp(app: App): void {\n  emit(DevtoolsHooks.APP_UNMOUNT, app)\n}\n\nexport const devtoolsComponentAdded: DevtoolsComponentHook =\n  /*@__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_ADDED)\n\nexport const devtoolsComponentUpdated: DevtoolsComponentHook =\n  /*@__PURE__*/ createDevtoolsComponentHook(DevtoolsHooks.COMPONENT_UPDATED)\n\nconst _devtoolsComponentRemoved = /*@__PURE__*/ createDevtoolsComponentHook(\n  DevtoolsHooks.COMPONENT_REMOVED,\n)\n\nexport const devtoolsComponentRemoved = (\n  component: ComponentInternalInstance,\n): void => {\n  if (\n    devtools &&\n    typeof devtools.cleanupBuffer === 'function' &&\n    // remove the component if it wasn't buffered\n    !devtools.cleanupBuffer(component)\n  ) {\n    _devtoolsComponentRemoved(component)\n  }\n}\n\ntype DevtoolsComponentHook = (component: ComponentInternalInstance) => void\n\n/*! #__NO_SIDE_EFFECTS__ */\nfunction createDevtoolsComponentHook(\n  hook: DevtoolsHooks,\n): DevtoolsComponentHook {\n  return (component: ComponentInternalInstance) => {\n    emit(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : undefined,\n      component,\n    )\n  }\n}\n\nexport const devtoolsPerfStart: DevtoolsPerformanceHook =\n  /*@__PURE__*/ createDevtoolsPerformanceHook(DevtoolsHooks.PERFORMANCE_START)\n\nexport const devtoolsPerfEnd: DevtoolsPerformanceHook =\n  /*@__PURE__*/ createDevtoolsPerformanceHook(DevtoolsHooks.PERFORMANCE_END)\n\ntype DevtoolsPerformanceHook = (\n  component: ComponentInternalInstance,\n  type: string,\n  time: number,\n) => void\nfunction createDevtoolsPerformanceHook(\n  hook: DevtoolsHooks,\n): DevtoolsPerformanceHook {\n  return (component: ComponentInternalInstance, type: string, time: number) => {\n    emit(hook, component.appContext.app, component.uid, component, type, time)\n  }\n}\n\nexport function devtoolsComponentEmit(\n  component: ComponentInternalInstance,\n  event: string,\n  params: any[],\n): void {\n  emit(\n    DevtoolsHooks.COMPONENT_EMIT,\n    component.appContext.app,\n    component,\n    event,\n    params,\n  )\n}\n", "import type { ComponentInternalInstance } from './component'\nimport { devtoolsComponentUpdated } from './devtools'\nimport { setBlockTracking } from './vnode'\n\n/**\n * mark the current rendering instance for asset resolution (e.g.\n * resolveComponent, resolveDirective) during render\n */\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\nexport let currentScopeId: string | null = null\n\n/**\n * Note: rendering calls maybe nested. The function returns the parent rendering\n * instance if present, which should be restored after the render is done:\n *\n * ```js\n * const prev = setCurrentRenderingInstance(i)\n * // ...render\n * setCurrentRenderingInstance(prev)\n * ```\n */\nexport function setCurrentRenderingInstance(\n  instance: ComponentInternalInstance | null,\n): ComponentInternalInstance | null {\n  const prev = currentRenderingInstance\n  currentRenderingInstance = instance\n  currentScopeId = (instance && instance.type.__scopeId) || null\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\n  if (__COMPAT__ && !currentScopeId) {\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\n  }\n  return prev\n}\n\n/**\n * Set scope id when creating hoisted vnodes.\n * @private compiler helper\n */\nexport function pushScopeId(id: string | null): void {\n  currentScopeId = id\n}\n\n/**\n * Technically we no longer need this after 3.0.8 but we need to keep the same\n * API for backwards compat w/ code generated by compilers.\n * @private\n */\nexport function popScopeId(): void {\n  currentScopeId = null\n}\n\n/**\n * Only for backwards compat\n * @private\n */\nexport const withScopeId = (_id: string): typeof withCtx => withCtx\n\nexport type ContextualRenderFn = {\n  (...args: any[]): any\n  _n: boolean /* already normalized */\n  _c: boolean /* compiled */\n  _d: boolean /* disableTracking */\n  _ns: boolean /* nonScoped */\n}\n\n/**\n * Wrap a slot function to memoize current rendering instance\n * @private compiler helper\n */\nexport function withCtx(\n  fn: Function,\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\n  isNonScopedSlot?: boolean, // __COMPAT__ only\n): Function {\n  if (!ctx) return fn\n\n  // already normalized\n  if ((fn as ContextualRenderFn)._n) {\n    return fn\n  }\n\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\n    // If a user calls a compiled slot inside a template expression (#1745), it\n    // can mess up block tracking, so by default we disable block tracking and\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1)\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx)\n    let res\n    try {\n      res = fn(...args)\n    } finally {\n      setCurrentRenderingInstance(prevInstance)\n      if (renderFnWithContext._d) {\n        setBlockTracking(1)\n      }\n    }\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx)\n    }\n\n    return res\n  }\n\n  // mark normalized to avoid duplicated wrapping\n  renderFnWithContext._n = true\n  // mark this as compiled by default\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\n  // rendering flag.\n  renderFnWithContext._c = true\n  // disable block tracking by default\n  renderFnWithContext._d = true\n  // compat build only flag to distinguish scoped slots from non-scoped ones\n  if (__COMPAT__ && isNonScopedSlot) {\n    renderFnWithContext._ns = true\n  }\n  return renderFnWithContext\n}\n", "/**\nRuntime helper for applying directives to a vnode. Example usage:\n\nconst comp = resolveComponent('comp')\nconst foo = resolveDirective('foo')\nconst bar = resolveDirective('bar')\n\nreturn withDirectives(h(comp), [\n  [foo, this.x],\n  [bar, this.y]\n])\n*/\n\nimport type { VNode } from './vnode'\nimport { EMPTY_OBJ, isBuiltInDirective, isFunction } from '@vue/shared'\nimport { warn } from './warning'\nimport {\n  type ComponentInternalInstance,\n  type Data,\n  getComponentPublicInstance,\n} from './component'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\nimport type { ComponentPublicInstance } from './componentPublicInstance'\nimport { mapCompatDirectiveHook } from './compat/customDirective'\nimport { pauseTracking, resetTracking, traverse } from '@vue/reactivity'\n\nexport interface DirectiveBinding<\n  Value = any,\n  Modifiers extends string = string,\n  Arg extends string = string,\n> {\n  instance: ComponentPublicInstance | Record<string, any> | null\n  value: Value\n  oldValue: Value | null\n  arg?: Arg\n  modifiers: DirectiveModifiers<Modifiers>\n  dir: ObjectDirective<any, Value>\n}\n\nexport type DirectiveHook<\n  HostElement = any,\n  Prev = VNode<any, HostElement> | null,\n  Value = any,\n  Modifiers extends string = string,\n  Arg extends string = string,\n> = (\n  el: HostElement,\n  binding: DirectiveBinding<Value, Modifiers, Arg>,\n  vnode: VNode<any, HostElement>,\n  prevVNode: Prev,\n) => void\n\nexport type SSRDirectiveHook<\n  Value = any,\n  Modifiers extends string = string,\n  Arg extends string = string,\n> = (\n  binding: DirectiveBinding<Value, Modifiers, Arg>,\n  vnode: VNode,\n) => Data | undefined\n\nexport interface ObjectDirective<\n  HostElement = any,\n  Value = any,\n  Modifiers extends string = string,\n  Arg extends string = string,\n> {\n  /**\n   * @internal without this, ts-expect-error in directives.test-d.ts somehow\n   * fails when running tsc, but passes in IDE and when testing against built\n   * dts. Could be a TS bug.\n   */\n  __mod?: Modifiers\n  created?: DirectiveHook<HostElement, null, Value, Modifiers, Arg>\n  beforeMount?: DirectiveHook<HostElement, null, Value, Modifiers, Arg>\n  mounted?: DirectiveHook<HostElement, null, Value, Modifiers, Arg>\n  beforeUpdate?: DirectiveHook<\n    HostElement,\n    VNode<any, HostElement>,\n    Value,\n    Modifiers,\n    Arg\n  >\n  updated?: DirectiveHook<\n    HostElement,\n    VNode<any, HostElement>,\n    Value,\n    Modifiers,\n    Arg\n  >\n  beforeUnmount?: DirectiveHook<HostElement, null, Value, Modifiers, Arg>\n  unmounted?: DirectiveHook<HostElement, null, Value, Modifiers, Arg>\n  getSSRProps?: SSRDirectiveHook<Value, Modifiers, Arg>\n  deep?: boolean\n}\n\nexport type FunctionDirective<\n  HostElement = any,\n  V = any,\n  Modifiers extends string = string,\n  Arg extends string = string,\n> = DirectiveHook<HostElement, any, V, Modifiers, Arg>\n\nexport type Directive<\n  HostElement = any,\n  Value = any,\n  Modifiers extends string = string,\n  Arg extends string = string,\n> =\n  | ObjectDirective<HostElement, Value, Modifiers, Arg>\n  | FunctionDirective<HostElement, Value, Modifiers, Arg>\n\nexport type DirectiveModifiers<K extends string = string> = Record<K, boolean>\n\nexport function validateDirectiveName(name: string): void {\n  if (isBuiltInDirective(name)) {\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\n  }\n}\n\n// Directive, value, argument, modifiers\nexport type DirectiveArguments = Array<\n  | [Directive | undefined]\n  | [Directive | undefined, any]\n  | [Directive | undefined, any, string]\n  | [Directive | undefined, any, string | undefined, DirectiveModifiers]\n>\n\n/**\n * Adds directives to a VNode.\n */\nexport function withDirectives<T extends VNode>(\n  vnode: T,\n  directives: DirectiveArguments,\n): T {\n  if (currentRenderingInstance === null) {\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\n    return vnode\n  }\n  const instance = getComponentPublicInstance(currentRenderingInstance)\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\n    if (dir) {\n      if (isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir,\n        } as ObjectDirective\n      }\n      if (dir.deep) {\n        traverse(value)\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers,\n      })\n    }\n  }\n  return vnode\n}\n\nexport function invokeDirectiveHook(\n  vnode: VNode,\n  prevVNode: VNode | null,\n  instance: ComponentInternalInstance | null,\n  name: keyof ObjectDirective,\n): void {\n  const bindings = vnode.dirs!\n  const oldBindings = prevVNode && prevVNode.dirs!\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i]\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value\n    }\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\n    if (__COMPAT__ && !hook) {\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\n    }\n    if (hook) {\n      // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n      pauseTracking()\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode,\n      ])\n      resetTracking()\n    }\n  }\n}\n", "import type { ComponentInternalInstance } from '../component'\nimport type { SuspenseBoundary } from './Suspense'\nimport {\n  type ElementNamespace,\n  MoveType,\n  type RendererElement,\n  type RendererInternals,\n  type RendererNode,\n  type RendererOptions,\n  queuePostRenderEffect,\n  traverseStaticChildren,\n} from '../renderer'\nimport type { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\nimport { ShapeFlags, isString } from '@vue/shared'\nimport { warn } from '../warning'\nimport { isHmrUpdating } from '../hmr'\n\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\n\nexport interface TeleportProps {\n  to: string | RendererElement | null | undefined\n  disabled?: boolean\n  defer?: boolean\n}\n\nexport const TeleportEndKey: unique symbol = Symbol('_vte')\n\nexport const isTeleport = (type: any): boolean => type.__isTeleport\n\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\n  props && (props.disabled || props.disabled === '')\n\nconst isTeleportDeferred = (props: VNode['props']): boolean =>\n  props && (props.defer || props.defer === '')\n\nconst isTargetSVG = (target: RendererElement): boolean =>\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\n\nconst isTargetMathML = (target: RendererElement): boolean =>\n  typeof MathMLElement === 'function' && target instanceof MathMLElement\n\nconst resolveTarget = <T = RendererElement>(\n  props: TeleportProps | null,\n  select: RendererOptions['querySelector'],\n): T | null => {\n  const targetSelector = props && props.to\n  if (isString(targetSelector)) {\n    if (!select) {\n      __DEV__ &&\n        warn(\n          `Current renderer does not support string target for Teleports. ` +\n            `(missing querySelector renderer option)`,\n        )\n      return null\n    } else {\n      const target = select(targetSelector)\n      if (__DEV__ && !target && !isTeleportDisabled(props)) {\n        warn(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\n            `Note the target element must exist before the component is mounted - ` +\n            `i.e. the target cannot be rendered by the component itself, and ` +\n            `ideally should be outside of the entire Vue component tree.`,\n        )\n      }\n      return target as T\n    }\n  } else {\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`)\n    }\n    return targetSelector as T\n  }\n}\n\nexport const TeleportImpl = {\n  name: 'Teleport',\n  __isTeleport: true,\n  process(\n    n1: TeleportVNode | null,\n    n2: TeleportVNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n    internals: RendererInternals,\n  ): void {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment },\n    } = internals\n\n    const disabled = isTeleportDisabled(n2.props)\n    let { shapeFlag, children, dynamicChildren } = n2\n\n    // #3302\n    // HMR updated, force full diff\n    if (__DEV__ && isHmrUpdating) {\n      optimized = false\n      dynamicChildren = null\n    }\n\n    if (n1 == null) {\n      // insert anchors in the main view\n      const placeholder = (n2.el = __DEV__\n        ? createComment('teleport start')\n        : createText(''))\n      const mainAnchor = (n2.anchor = __DEV__\n        ? createComment('teleport end')\n        : createText(''))\n      insert(placeholder, container, anchor)\n      insert(mainAnchor, container, anchor)\n\n      const mount = (container: RendererElement, anchor: RendererNode) => {\n        // Teleport *always* has Array children. This is enforced in both the\n        // compiler and vnode children normalization.\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          if (parentComponent && parentComponent.isCE) {\n            parentComponent.ce!._teleportTarget = container\n          }\n          mountChildren(\n            children as VNodeArrayChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n        }\n      }\n\n      const mountToTarget = () => {\n        const target = (n2.target = resolveTarget(n2.props, querySelector))\n        const targetAnchor = prepareAnchor(target, n2, createText, insert)\n        if (target) {\n          // #2652 we could be teleporting from a non-SVG tree into an SVG tree\n          if (namespace !== 'svg' && isTargetSVG(target)) {\n            namespace = 'svg'\n          } else if (namespace !== 'mathml' && isTargetMathML(target)) {\n            namespace = 'mathml'\n          }\n          if (!disabled) {\n            mount(target, targetAnchor)\n            updateCssVars(n2, false)\n          }\n        } else if (__DEV__ && !disabled) {\n          warn(\n            'Invalid Teleport target on mount:',\n            target,\n            `(${typeof target})`,\n          )\n        }\n      }\n\n      if (disabled) {\n        mount(container, mainAnchor)\n        updateCssVars(n2, true)\n      }\n\n      if (isTeleportDeferred(n2.props)) {\n        queuePostRenderEffect(() => {\n          mountToTarget()\n          n2.el!.__isMounted = true\n        }, parentSuspense)\n      } else {\n        mountToTarget()\n      }\n    } else {\n      if (isTeleportDeferred(n2.props) && !n1.el!.__isMounted) {\n        queuePostRenderEffect(() => {\n          TeleportImpl.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals,\n          )\n          delete n1.el!.__isMounted\n        }, parentSuspense)\n        return\n      }\n      // update content\n      n2.el = n1.el\n      n2.targetStart = n1.targetStart\n      const mainAnchor = (n2.anchor = n1.anchor)!\n      const target = (n2.target = n1.target)!\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\n      const wasDisabled = isTeleportDisabled(n1.props)\n      const currentContainer = wasDisabled ? container : target\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\n\n      if (namespace === 'svg' || isTargetSVG(target)) {\n        namespace = 'svg'\n      } else if (namespace === 'mathml' || isTargetMathML(target)) {\n        namespace = 'mathml'\n      }\n\n      if (dynamicChildren) {\n        // fast path when the teleport happens to be a block root\n        patchBlockChildren(\n          n1.dynamicChildren!,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n        )\n        // even in block tree mode we need to make sure all root-level nodes\n        // in the teleport inherit previous DOM references so that they can\n        // be moved in future patches.\n        traverseStaticChildren(n1, n2, true)\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          false,\n        )\n      }\n\n      if (disabled) {\n        if (!wasDisabled) {\n          // enabled -> disabled\n          // move into main container\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            TeleportMoveTypes.TOGGLE,\n          )\n        } else {\n          // #7835\n          // When `teleport` is disabled, `to` may change, making it always old,\n          // to ensure the correct `to` when enabled\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to\n          }\n        }\n      } else {\n        // target changed\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = (n2.target = resolveTarget(\n            n2.props,\n            querySelector,\n          ))\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              TeleportMoveTypes.TARGET_CHANGE,\n            )\n          } else if (__DEV__) {\n            warn(\n              'Invalid Teleport target on update:',\n              target,\n              `(${typeof target})`,\n            )\n          }\n        } else if (wasDisabled) {\n          // disabled -> enabled\n          // move into teleport target\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            TeleportMoveTypes.TOGGLE,\n          )\n        }\n      }\n      updateCssVars(n2, disabled)\n    }\n  },\n\n  remove(\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\n    doRemove: boolean,\n  ): void {\n    const {\n      shapeFlag,\n      children,\n      anchor,\n      targetStart,\n      targetAnchor,\n      target,\n      props,\n    } = vnode\n\n    if (target) {\n      hostRemove(targetStart!)\n      hostRemove(targetAnchor!)\n    }\n\n    // an unmounted teleport should always unmount its children whether it's disabled or not\n    doRemove && hostRemove(anchor!)\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      const shouldRemove = doRemove || !isTeleportDisabled(props)\n      for (let i = 0; i < (children as VNode[]).length; i++) {\n        const child = (children as VNode[])[i]\n        unmount(\n          child,\n          parentComponent,\n          parentSuspense,\n          shouldRemove,\n          !!child.dynamicChildren,\n        )\n      }\n    }\n  },\n\n  move: moveTeleport as typeof moveTeleport,\n  hydrate: hydrateTeleport as typeof hydrateTeleport,\n}\n\nexport enum TeleportMoveTypes {\n  TARGET_CHANGE,\n  TOGGLE, // enable / disable\n  REORDER, // moved in the main view\n}\n\nfunction moveTeleport(\n  vnode: VNode,\n  container: RendererElement,\n  parentAnchor: RendererNode | null,\n  { o: { insert }, m: move }: RendererInternals,\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER,\n): void {\n  // move target anchor if this is a target change.\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\n    insert(vnode.targetAnchor!, container, parentAnchor)\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode\n  const isReorder = moveType === TeleportMoveTypes.REORDER\n  // move main view anchor if this is a re-order.\n  if (isReorder) {\n    insert(el!, container, parentAnchor)\n  }\n  // if this is a re-order and teleport is enabled (content is in target)\n  // do not move children. So the opposite is: only move children if this\n  // is not a reorder, or the teleport is disabled\n  if (!isReorder || isTeleportDisabled(props)) {\n    // Teleport has either Array children or no children.\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      for (let i = 0; i < (children as VNode[]).length; i++) {\n        move(\n          (children as VNode[])[i],\n          container,\n          parentAnchor,\n          MoveType.REORDER,\n        )\n      }\n    }\n  }\n  // move main view anchor if this is a re-order.\n  if (isReorder) {\n    insert(anchor!, container, parentAnchor)\n  }\n}\n\ninterface TeleportTargetElement extends Element {\n  // last teleport target\n  _lpa?: Node | null\n}\n\nfunction hydrateTeleport(\n  node: Node,\n  vnode: TeleportVNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  {\n    o: { nextSibling, parentNode, querySelector, insert, createText },\n  }: RendererInternals<Node, Element>,\n  hydrateChildren: (\n    node: Node | null,\n    vnode: VNode,\n    container: Element,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => Node | null,\n): Node | null {\n  const target = (vnode.target = resolveTarget<Element>(\n    vnode.props,\n    querySelector,\n  ))\n  if (target) {\n    const disabled = isTeleportDisabled(vnode.props)\n    // if multiple teleports rendered to the same target element, we need to\n    // pick up from where the last teleport finished instead of the first node\n    const targetNode =\n      (target as TeleportTargetElement)._lpa || target.firstChild\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      if (disabled) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node)!,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized,\n        )\n        vnode.targetStart = targetNode\n        vnode.targetAnchor = targetNode && nextSibling(targetNode)\n      } else {\n        vnode.anchor = nextSibling(node)\n\n        // lookahead until we find the target anchor\n        // we cannot rely on return value of hydrateChildren() because there\n        // could be nested teleports\n        let targetAnchor = targetNode\n        while (targetAnchor) {\n          if (targetAnchor && targetAnchor.nodeType === 8) {\n            if ((targetAnchor as Comment).data === 'teleport start anchor') {\n              vnode.targetStart = targetAnchor\n            } else if ((targetAnchor as Comment).data === 'teleport anchor') {\n              vnode.targetAnchor = targetAnchor\n              ;(target as TeleportTargetElement)._lpa =\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\n              break\n            }\n          }\n          targetAnchor = nextSibling(targetAnchor)\n        }\n\n        // #11400 if the HTML corresponding to Teleport is not embedded in the\n        // correct position on the final page during SSR. the targetAnchor will\n        // always be null, we need to manually add targetAnchor to ensure\n        // Teleport it can properly unmount or move\n        if (!vnode.targetAnchor) {\n          prepareAnchor(target, vnode, createText, insert)\n        }\n\n        hydrateChildren(\n          targetNode && nextSibling(targetNode),\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized,\n        )\n      }\n    }\n    updateCssVars(vnode, disabled)\n  }\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\n}\n\n// Force-casted public typing for h and TSX props inference\nexport const Teleport = TeleportImpl as unknown as {\n  __isTeleport: true\n  new (): {\n    $props: VNodeProps & TeleportProps\n    $slots: {\n      default(): VNode[]\n    }\n  }\n}\n\nfunction updateCssVars(vnode: VNode, isDisabled: boolean) {\n  // presence of .ut method indicates owner component uses css vars.\n  // code path here can assume browser environment.\n  const ctx = vnode.ctx\n  if (ctx && ctx.ut) {\n    let node, anchor\n    if (isDisabled) {\n      node = vnode.el\n      anchor = vnode.anchor\n    } else {\n      node = vnode.targetStart\n      anchor = vnode.targetAnchor\n    }\n    while (node && node !== anchor) {\n      if (node.nodeType === 1) node.setAttribute('data-v-owner', ctx.uid)\n      node = node.nextSibling\n    }\n    ctx.ut()\n  }\n}\n\nfunction prepareAnchor(\n  target: RendererElement | null,\n  vnode: TeleportVNode,\n  createText: RendererOptions['createText'],\n  insert: RendererOptions['insert'],\n) {\n  const targetStart = (vnode.targetStart = createText(''))\n  const targetAnchor = (vnode.targetAnchor = createText(''))\n\n  // attach a special property, so we can skip teleported content in\n  // renderer's nextSibling search\n  targetStart[TeleportEndKey] = targetAnchor\n\n  if (target) {\n    insert(targetStart, target)\n    insert(targetAnchor, target)\n  }\n\n  return targetAnchor\n}\n", "import {\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type SetupContext,\n  getCurrentInstance,\n} from '../component'\nimport {\n  Comment,\n  Fragment,\n  type VNode,\n  type VNodeArrayChildren,\n  cloneVNode,\n  isSameVNodeType,\n} from '../vnode'\nimport { warn } from '../warning'\nimport { isKeepAlive } from './KeepAlive'\nimport { toRaw } from '@vue/reactivity'\nimport { ErrorCodes, callWithAsyncErrorHandling } from '../errorHandling'\nimport { PatchFlags, ShapeFlags, isArray, isFunction } from '@vue/shared'\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\nimport { isTeleport } from './Teleport'\nimport type { RendererElement } from '../renderer'\nimport { SchedulerJobFlags } from '../scheduler'\n\ntype Hook<T = () => void> = T | T[]\n\nconst leaveCbKey: unique symbol = Symbol('_leaveCb')\nconst enterCbKey: unique symbol = Symbol('_enterCb')\n\nexport interface BaseTransitionProps<HostElement = RendererElement> {\n  mode?: 'in-out' | 'out-in' | 'default'\n  appear?: boolean\n\n  // If true, indicates this is a transition that doesn't actually insert/remove\n  // the element, but toggles the show / hidden status instead.\n  // The transition hooks are injected, but will be skipped by the renderer.\n  // Instead, a custom directive can control the transition by calling the\n  // injected hooks (e.g. v-show).\n  persisted?: boolean\n\n  // Hooks. Using camel case for easier usage in render functions & JSX.\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\n  // are camelized.\n  onBeforeEnter?: Hook<(el: HostElement) => void>\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\n  onAfterEnter?: Hook<(el: HostElement) => void>\n  onEnterCancelled?: Hook<(el: HostElement) => void>\n  // leave\n  onBeforeLeave?: Hook<(el: HostElement) => void>\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\n  onAfterLeave?: Hook<(el: HostElement) => void>\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\n  // appear\n  onBeforeAppear?: Hook<(el: HostElement) => void>\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\n  onAfterAppear?: Hook<(el: HostElement) => void>\n  onAppearCancelled?: Hook<(el: HostElement) => void>\n}\n\nexport interface TransitionHooks<HostElement = RendererElement> {\n  mode: BaseTransitionProps['mode']\n  persisted: boolean\n  beforeEnter(el: HostElement): void\n  enter(el: HostElement): void\n  leave(el: HostElement, remove: () => void): void\n  clone(vnode: VNode): TransitionHooks<HostElement>\n  // optional\n  afterLeave?(): void\n  delayLeave?(\n    el: HostElement,\n    earlyRemove: () => void,\n    delayedLeave: () => void,\n  ): void\n  delayedLeave?(): void\n}\n\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\n  hook: Hook<(...args: T) => void> | undefined,\n  args?: T,\n) => void\n\nexport type PendingCallback = (cancelled?: boolean) => void\n\nexport interface TransitionState {\n  isMounted: boolean\n  isLeaving: boolean\n  isUnmounting: boolean\n  // Track pending leave callbacks for children of the same key.\n  // This is used to force remove leaving a child when a new copy is entering.\n  leavingVNodes: Map<any, Record<string, VNode>>\n}\n\nexport interface TransitionElement {\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\n  // before it finishes.\n  [enterCbKey]?: PendingCallback\n  [leaveCbKey]?: PendingCallback\n}\n\nexport function useTransitionState(): TransitionState {\n  const state: TransitionState = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: new Map(),\n  }\n  onMounted(() => {\n    state.isMounted = true\n  })\n  onBeforeUnmount(() => {\n    state.isUnmounting = true\n  })\n  return state\n}\n\nconst TransitionHookValidator = [Function, Array]\n\nexport const BaseTransitionPropsValidators: Record<string, any> = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator,\n}\n\nconst recursiveGetSubtree = (instance: ComponentInternalInstance): VNode => {\n  const subTree = instance.subTree\n  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree\n}\n\nconst BaseTransitionImpl: ComponentOptions = {\n  name: `BaseTransition`,\n\n  props: BaseTransitionPropsValidators,\n\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const state = useTransitionState()\n\n    return () => {\n      const children =\n        slots.default && getTransitionRawChildren(slots.default(), true)\n      if (!children || !children.length) {\n        return\n      }\n\n      const child: VNode = findNonCommentChild(children)\n      // there's no need to track reactivity for these props so use the raw\n      // props for a bit better perf\n      const rawProps = toRaw(props)\n      const { mode } = rawProps\n      // check mode\n      if (\n        __DEV__ &&\n        mode &&\n        mode !== 'in-out' &&\n        mode !== 'out-in' &&\n        mode !== 'default'\n      ) {\n        warn(`invalid <transition> mode: ${mode}`)\n      }\n\n      if (state.isLeaving) {\n        return emptyPlaceholder(child)\n      }\n\n      // in the case of <transition><keep-alive/></transition>, we need to\n      // compare the type of the kept-alive children.\n      const innerChild = getInnerChild(child)\n      if (!innerChild) {\n        return emptyPlaceholder(child)\n      }\n\n      let enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance,\n        // #11061, ensure enterHooks is fresh after clone\n        hooks => (enterHooks = hooks),\n      )\n\n      if (innerChild.type !== Comment) {\n        setTransitionHooks(innerChild, enterHooks)\n      }\n\n      let oldInnerChild = instance.subTree && getInnerChild(instance.subTree)\n\n      // handle mode\n      if (\n        oldInnerChild &&\n        oldInnerChild.type !== Comment &&\n        !isSameVNodeType(innerChild, oldInnerChild) &&\n        recursiveGetSubtree(instance).type !== Comment\n      ) {\n        let leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance,\n        )\n        // update old tree's hooks in case of dynamic transition\n        setTransitionHooks(oldInnerChild, leavingHooks)\n        // switching between different views\n        if (mode === 'out-in' && innerChild.type !== Comment) {\n          state.isLeaving = true\n          // return placeholder node and queue update when leave finishes\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false\n            // #6835\n            // it also needs to be updated when active is undefined\n            if (!(instance.job.flags! & SchedulerJobFlags.DISPOSED)) {\n              instance.update()\n            }\n            delete leavingHooks.afterLeave\n            oldInnerChild = undefined\n          }\n          return emptyPlaceholder(child)\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (\n            el: TransitionElement,\n            earlyRemove,\n            delayedLeave,\n          ) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild!,\n            )\n            leavingVNodesCache[String(oldInnerChild!.key)] = oldInnerChild!\n            // early removal callback\n            el[leaveCbKey] = () => {\n              earlyRemove()\n              el[leaveCbKey] = undefined\n              delete enterHooks.delayedLeave\n              oldInnerChild = undefined\n            }\n            enterHooks.delayedLeave = () => {\n              delayedLeave()\n              delete enterHooks.delayedLeave\n              oldInnerChild = undefined\n            }\n          }\n        } else {\n          oldInnerChild = undefined\n        }\n      } else if (oldInnerChild) {\n        oldInnerChild = undefined\n      }\n\n      return child\n    }\n  },\n}\n\nif (__COMPAT__) {\n  BaseTransitionImpl.__isBuiltIn = true\n}\n\nfunction findNonCommentChild(children: VNode[]): VNode {\n  let child: VNode = children[0]\n  if (children.length > 1) {\n    let hasFound = false\n    // locate first non-comment child\n    for (const c of children) {\n      if (c.type !== Comment) {\n        if (__DEV__ && hasFound) {\n          // warn more than one non-comment child\n          warn(\n            '<transition> can only be used on a single element or component. ' +\n              'Use <transition-group> for lists.',\n          )\n          break\n        }\n        child = c\n        hasFound = true\n        if (!__DEV__) break\n      }\n    }\n  }\n  return child\n}\n\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nexport const BaseTransition = BaseTransitionImpl as unknown as {\n  new (): {\n    $props: BaseTransitionProps<any>\n    $slots: {\n      default(): VNode[]\n    }\n  }\n}\n\nfunction getLeavingNodesForType(\n  state: TransitionState,\n  vnode: VNode,\n): Record<string, VNode> {\n  const { leavingVNodes } = state\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = Object.create(null)\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\n  }\n  return leavingVNodesCache\n}\n\n// The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\nexport function resolveTransitionHooks(\n  vnode: VNode,\n  props: BaseTransitionProps<any>,\n  state: TransitionState,\n  instance: ComponentInternalInstance,\n  postClone?: (hooks: TransitionHooks) => void,\n): TransitionHooks {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled,\n  } = props\n  const key = String(vnode.key)\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\n\n  const callHook: TransitionHookCaller = (hook, args) => {\n    hook &&\n      callWithAsyncErrorHandling(\n        hook,\n        instance,\n        ErrorCodes.TRANSITION_HOOK,\n        args,\n      )\n  }\n\n  const callAsyncHook = (\n    hook: Hook<(el: any, done: () => void) => void>,\n    args: [TransitionElement, () => void],\n  ) => {\n    const done = args[1]\n    callHook(hook, args)\n    if (isArray(hook)) {\n      if (hook.every(hook => hook.length <= 1)) done()\n    } else if (hook.length <= 1) {\n      done()\n    }\n  }\n\n  const hooks: TransitionHooks<TransitionElement> = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter\n        } else {\n          return\n        }\n      }\n      // for same element (v-show)\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](true /* cancelled */)\n      }\n      // for toggled element with same key (v-if)\n      const leavingVNode = leavingVNodesCache[key]\n      if (\n        leavingVNode &&\n        isSameVNodeType(vnode, leavingVNode) &&\n        (leavingVNode.el as TransitionElement)[leaveCbKey]\n      ) {\n        // force early removal (not cancelled)\n        ;(leavingVNode.el as TransitionElement)[leaveCbKey]!()\n      }\n      callHook(hook, [el])\n    },\n\n    enter(el) {\n      let hook = onEnter\n      let afterHook = onAfterEnter\n      let cancelHook = onEnterCancelled\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter\n          afterHook = onAfterAppear || onAfterEnter\n          cancelHook = onAppearCancelled || onEnterCancelled\n        } else {\n          return\n        }\n      }\n      let called = false\n      const done = (el[enterCbKey] = (cancelled?) => {\n        if (called) return\n        called = true\n        if (cancelled) {\n          callHook(cancelHook, [el])\n        } else {\n          callHook(afterHook, [el])\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave()\n        }\n        el[enterCbKey] = undefined\n      })\n      if (hook) {\n        callAsyncHook(hook, [el, done])\n      } else {\n        done()\n      }\n    },\n\n    leave(el, remove) {\n      const key = String(vnode.key)\n      if (el[enterCbKey]) {\n        el[enterCbKey](true /* cancelled */)\n      }\n      if (state.isUnmounting) {\n        return remove()\n      }\n      callHook(onBeforeLeave, [el])\n      let called = false\n      const done = (el[leaveCbKey] = (cancelled?) => {\n        if (called) return\n        called = true\n        remove()\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el])\n        } else {\n          callHook(onAfterLeave, [el])\n        }\n        el[leaveCbKey] = undefined\n        if (leavingVNodesCache[key] === vnode) {\n          delete leavingVNodesCache[key]\n        }\n      })\n      leavingVNodesCache[key] = vnode\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done])\n      } else {\n        done()\n      }\n    },\n\n    clone(vnode) {\n      const hooks = resolveTransitionHooks(\n        vnode,\n        props,\n        state,\n        instance,\n        postClone,\n      )\n      if (postClone) postClone(hooks)\n      return hooks\n    },\n  }\n\n  return hooks\n}\n\n// the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode)\n    vnode.children = null\n    return vnode\n  }\n}\n\nfunction getInnerChild(vnode: VNode): VNode | undefined {\n  if (!isKeepAlive(vnode)) {\n    if (isTeleport(vnode.type) && vnode.children) {\n      return findNonCommentChild(vnode.children as VNode[])\n    }\n\n    return vnode\n  }\n  // #7121 ensure get the child component subtree in case\n  // it's been replaced during HMR\n  if (__DEV__ && vnode.component) {\n    return vnode.component.subTree\n  }\n\n  const { shapeFlag, children } = vnode\n\n  if (children) {\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      return (children as VNodeArrayChildren)[0] as VNode\n    }\n\n    if (\n      shapeFlag & ShapeFlags.SLOTS_CHILDREN &&\n      isFunction((children as any).default)\n    ) {\n      return (children as any).default()\n    }\n  }\n}\n\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks): void {\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\n    vnode.transition = hooks\n    setTransitionHooks(vnode.component.subTree, hooks)\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\n  } else {\n    vnode.transition = hooks\n  }\n}\n\nexport function getTransitionRawChildren(\n  children: VNode[],\n  keepComment: boolean = false,\n  parentKey?: VNode['key'],\n): VNode[] {\n  let ret: VNode[] = []\n  let keyedFragmentCount = 0\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i]\n    // #5360 inherit parent key in case of <template v-for>\n    const key =\n      parentKey == null\n        ? child.key\n        : String(parentKey) + String(child.key != null ? child.key : i)\n    // handle fragment children case, e.g. v-for\n    if (child.type === Fragment) {\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\n      ret = ret.concat(\n        getTransitionRawChildren(child.children as VNode[], keepComment, key),\n      )\n    }\n    // comment placeholders should be skipped, e.g. v-if\n    else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\n    }\n  }\n  // #1126 if a transition children list contains multiple sub fragments, these\n  // fragments will be merged into a flat children array. Since each v-for\n  // fragment may contain different static bindings inside, we need to de-op\n  // these children to force full diffs to ensure correct behavior.\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = PatchFlags.BAIL\n    }\n  }\n  return ret\n}\n", "import type {\n  ComponentInjectOptions,\n  ComponentOptions,\n  ComponentOptionsBase,\n  ComponentOptionsMixin,\n  ComponentProvideOptions,\n  ComputedOptions,\n  MethodOptions,\n  RenderFunction,\n} from './componentOptions'\nimport type {\n  AllowedComponentProps,\n  Component,\n  ComponentCustomProps,\n  GlobalComponents,\n  GlobalDirectives,\n  SetupContext,\n} from './component'\nimport type {\n  ComponentObjectPropsOptions,\n  ComponentPropsOptions,\n  ExtractDefaultPropTypes,\n  ExtractPropTypes,\n} from './componentProps'\nimport type {\n  EmitsOptions,\n  EmitsToProps,\n  TypeEmitsToOptions,\n} from './componentEmits'\nimport { type IsKeyValues, extend, isFunction } from '@vue/shared'\nimport type { VNodeProps } from './vnode'\nimport type {\n  ComponentPublicInstanceConstructor,\n  CreateComponentPublicInstanceWithMixins,\n} from './componentPublicInstance'\nimport type { SlotsType } from './componentSlots'\nimport type { Directive } from './directives'\nimport type { ComponentTypeEmits } from './apiSetupHelpers'\n\nexport type PublicProps = VNodeProps &\n  AllowedComponentProps &\n  ComponentCustomProps\n\ntype ResolveProps<PropsOrPropOptions, E extends EmitsOptions> = Readonly<\n  PropsOrPropOptions extends ComponentPropsOptions\n    ? ExtractPropTypes<PropsOrPropOptions>\n    : PropsOrPropOptions\n> &\n  ({} extends E ? {} : EmitsToProps<E>)\n\nexport type DefineComponent<\n  PropsOrPropOptions = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions,\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  PP = PublicProps,\n  Props = ResolveProps<PropsOrPropOptions, E>,\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>,\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  MakeDefaultsOptional extends boolean = true,\n  TypeRefs extends Record<string, unknown> = {},\n  TypeEl extends Element = any,\n> = ComponentPublicInstanceConstructor<\n  CreateComponentPublicInstanceWithMixins<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    PP,\n    Defaults,\n    MakeDefaultsOptional,\n    {},\n    S,\n    LC & GlobalComponents,\n    Directives & GlobalDirectives,\n    Exposed,\n    TypeRefs,\n    TypeEl\n  >\n> &\n  ComponentOptionsBase<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    Defaults,\n    {},\n    string,\n    S,\n    LC & GlobalComponents,\n    Directives & GlobalDirectives,\n    Exposed,\n    Provide\n  > &\n  PP\n\nexport type DefineSetupFnComponent<\n  P extends Record<string, any>,\n  E extends EmitsOptions = {},\n  S extends SlotsType = SlotsType,\n  Props = P & EmitsToProps<E>,\n  PP = PublicProps,\n> = new (\n  props: Props & PP,\n) => CreateComponentPublicInstanceWithMixins<\n  Props,\n  {},\n  {},\n  {},\n  {},\n  ComponentOptionsMixin,\n  ComponentOptionsMixin,\n  E,\n  PP,\n  {},\n  false,\n  {},\n  S\n>\n\ntype ToResolvedProps<Props, Emits extends EmitsOptions> = Readonly<Props> &\n  Readonly<EmitsToProps<Emits>>\n\n// defineComponent is a utility that is primarily used for type inference\n// when declaring components. Type inference is provided in the component\n// options (provided as the argument). The returned value has artificial types\n// for TSX / manual render function / IDE support.\n\n// overload 1: direct setup function\n// (uses user defined props interface)\nexport function defineComponent<\n  Props extends Record<string, any>,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {},\n>(\n  setup: (\n    props: Props,\n    ctx: SetupContext<E, S>,\n  ) => RenderFunction | Promise<RenderFunction>,\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs'> & {\n    props?: (keyof Props)[]\n    emits?: E | EE[]\n    slots?: S\n  },\n): DefineSetupFnComponent<Props, E, S>\nexport function defineComponent<\n  Props extends Record<string, any>,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  S extends SlotsType = {},\n>(\n  setup: (\n    props: Props,\n    ctx: SetupContext<E, S>,\n  ) => RenderFunction | Promise<RenderFunction>,\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs'> & {\n    props?: ComponentObjectPropsOptions<Props>\n    emits?: E | EE[]\n    slots?: S\n  },\n): DefineSetupFnComponent<Props, E, S>\n\n// overload 2: defineComponent with options object, infer props from options\nexport function defineComponent<\n  // props\n  TypeProps,\n  RuntimePropsOptions extends\n    ComponentObjectPropsOptions = ComponentObjectPropsOptions,\n  RuntimePropsKeys extends string = string,\n  // emits\n  TypeEmits extends ComponentTypeEmits = {},\n  RuntimeEmitsOptions extends EmitsOptions = {},\n  RuntimeEmitsKeys extends string = string,\n  // other options\n  Data = {},\n  SetupBindings = {},\n  Computed extends ComputedOptions = {},\n  Methods extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  InjectOptions extends ComponentInjectOptions = {},\n  InjectKeys extends string = string,\n  Slots extends SlotsType = {},\n  LocalComponents extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  // resolved types\n  ResolvedEmits extends EmitsOptions = {} extends RuntimeEmitsOptions\n    ? TypeEmitsToOptions<TypeEmits>\n    : RuntimeEmitsOptions,\n  InferredProps = IsKeyValues<TypeProps> extends true\n    ? TypeProps\n    : string extends RuntimePropsKeys\n      ? ComponentObjectPropsOptions extends RuntimePropsOptions\n        ? {}\n        : ExtractPropTypes<RuntimePropsOptions>\n      : { [key in RuntimePropsKeys]?: any },\n  TypeRefs extends Record<string, unknown> = {},\n  TypeEl extends Element = any,\n>(\n  options: {\n    props?: (RuntimePropsOptions & ThisType<void>) | RuntimePropsKeys[]\n    /**\n     * @private for language-tools use only\n     */\n    __typeProps?: TypeProps\n    /**\n     * @private for language-tools use only\n     */\n    __typeEmits?: TypeEmits\n    /**\n     * @private for language-tools use only\n     */\n    __typeRefs?: TypeRefs\n    /**\n     * @private for language-tools use only\n     */\n    __typeEl?: TypeEl\n  } & ComponentOptionsBase<\n    ToResolvedProps<InferredProps, ResolvedEmits>,\n    SetupBindings,\n    Data,\n    Computed,\n    Methods,\n    Mixin,\n    Extends,\n    RuntimeEmitsOptions,\n    RuntimeEmitsKeys,\n    {}, // Defaults\n    InjectOptions,\n    InjectKeys,\n    Slots,\n    LocalComponents,\n    Directives,\n    Exposed,\n    Provide\n  > &\n    ThisType<\n      CreateComponentPublicInstanceWithMixins<\n        ToResolvedProps<InferredProps, ResolvedEmits>,\n        SetupBindings,\n        Data,\n        Computed,\n        Methods,\n        Mixin,\n        Extends,\n        ResolvedEmits,\n        {},\n        {},\n        false,\n        InjectOptions,\n        Slots,\n        LocalComponents,\n        Directives,\n        Exposed\n      >\n    >,\n): DefineComponent<\n  InferredProps,\n  SetupBindings,\n  Data,\n  Computed,\n  Methods,\n  Mixin,\n  Extends,\n  ResolvedEmits,\n  RuntimeEmitsKeys,\n  PublicProps,\n  ToResolvedProps<InferredProps, ResolvedEmits>,\n  ExtractDefaultPropTypes<RuntimePropsOptions>,\n  Slots,\n  LocalComponents,\n  Directives,\n  Exposed,\n  Provide,\n  // MakeDefaultsOptional - if TypeProps is provided, set to false to use\n  // user props types verbatim\n  unknown extends TypeProps ? true : false,\n  TypeRefs,\n  TypeEl\n>\n\n// implementation, close to no-op\n/*! #__NO_SIDE_EFFECTS__ */\nexport function defineComponent(\n  options: unknown,\n  extraOptions?: ComponentOptions,\n) {\n  return isFunction(options)\n    ? // #8236: extend call and options.name access are considered side-effects\n      // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n      /*@__PURE__*/ (() =>\n        extend({ name: options.name }, extraOptions, { setup: options }))()\n    : options\n}\n", "import {\n  type ComponentInternalInstance,\n  getCurrentInstance,\n} from '../component'\nimport { warn } from '../warning'\n\nexport function useId(): string {\n  const i = getCurrentInstance()\n  if (i) {\n    return (i.appContext.config.idPrefix || 'v') + '-' + i.ids[0] + i.ids[1]++\n  } else if (__DEV__) {\n    warn(\n      `useId() is called when there is no active component ` +\n        `instance to be associated with.`,\n    )\n  }\n  return ''\n}\n\n/**\n * There are 3 types of async boundaries:\n * - async components\n * - components with async setup()\n * - components with serverPrefetch\n */\nexport function markAsyncBoundary(instance: ComponentInternalInstance): void {\n  instance.ids = [instance.ids[0] + instance.ids[2]++ + '-', 0, 0]\n}\n", "import { type ShallowRef, readonly, shallowRef } from '@vue/reactivity'\nimport { getCurrentInstance } from '../component'\nimport { warn } from '../warning'\nimport { EMPTY_OBJ } from '@vue/shared'\n\nexport const knownTemplateRefs: WeakSet<ShallowRef> = new WeakSet()\n\nexport function useTemplateRef<T = unknown, Keys extends string = string>(\n  key: Keys,\n): Readonly<ShallowRef<T | null>> {\n  const i = getCurrentInstance()\n  const r = shallowRef(null)\n  if (i) {\n    const refs = i.refs === EMPTY_OBJ ? (i.refs = {}) : i.refs\n    let desc: PropertyDescriptor | undefined\n    if (\n      __DEV__ &&\n      (desc = Object.getOwnPropertyDescriptor(refs, key)) &&\n      !desc.configurable\n    ) {\n      warn(`useTemplateRef('${key}') already exists.`)\n    } else {\n      Object.defineProperty(refs, key, {\n        enumerable: true,\n        get: () => r.value,\n        set: val => (r.value = val),\n      })\n    }\n  } else if (__DEV__) {\n    warn(\n      `useTemplateRef() is called when there is no active component ` +\n        `instance to be associated with.`,\n    )\n  }\n  const ret = __DEV__ ? readonly(r) : r\n  if (__DEV__) {\n    knownTemplateRefs.add(ret)\n  }\n  return ret\n}\n", "import type { SuspenseBoundary } from './components/Suspense'\nimport type { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\nimport {\n  EMPTY_OBJ,\n  ShapeFlags,\n  hasOwn,\n  isArray,\n  isFunction,\n  isString,\n  remove,\n} from '@vue/shared'\nimport { isAsyncWrapper } from './apiAsyncComponent'\nimport { warn } from './warning'\nimport { isRef, toRaw } from '@vue/reactivity'\nimport { ErrorCodes, callWithErrorHandling } from './errorHandling'\nimport type { SchedulerJob } from './scheduler'\nimport { queuePostRenderEffect } from './renderer'\nimport { type ComponentOptions, getComponentPublicInstance } from './component'\nimport { knownTemplateRefs } from './helpers/useTemplateRef'\n\n/**\n * Function for handling a template ref\n */\nexport function setRef(\n  rawRef: VNodeNormalizedRef,\n  oldRawRef: VNodeNormalizedRef | null,\n  parentSuspense: SuspenseBoundary | null,\n  vnode: VNode,\n  isUnmount = false,\n): void {\n  if (isArray(rawRef)) {\n    rawRef.forEach((r, i) =>\n      setRef(\n        r,\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount,\n      ),\n    )\n    return\n  }\n\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    // #4999 if an async component already resolved and cached by KeepAlive,\n    // we need to set the ref to inner component\n    if (\n      vnode.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE &&\n      (vnode.type as ComponentOptions).__asyncResolved &&\n      vnode.component!.subTree.component\n    ) {\n      setRef(rawRef, oldRawRef, parentSuspense, vnode.component!.subTree)\n    }\n\n    // otherwise, nothing needs to be done because the template ref\n    // is forwarded to inner component\n    return\n  }\n\n  const refValue =\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\n      ? getComponentPublicInstance(vnode.component!)\n      : vnode.el\n  const value = isUnmount ? null : refValue\n\n  const { i: owner, r: ref } = rawRef\n  if (__DEV__ && !owner) {\n    warn(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\n        `A vnode with ref must be created inside the render function.`,\n    )\n    return\n  }\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\n  const setupState = owner.setupState\n  const rawSetupState = toRaw(setupState)\n  const canSetSetupRef =\n    setupState === EMPTY_OBJ\n      ? () => false\n      : (key: string) => {\n          if (__DEV__) {\n            if (hasOwn(rawSetupState, key) && !isRef(rawSetupState[key])) {\n              warn(\n                `Template ref \"${key}\" used on a non-ref value. ` +\n                  `It will not work in the production build.`,\n              )\n            }\n\n            if (knownTemplateRefs.has(rawSetupState[key] as any)) {\n              return false\n            }\n          }\n          return hasOwn(rawSetupState, key)\n        }\n\n  // dynamic ref changed. unset old ref\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null\n      if (canSetSetupRef(oldRef)) {\n        setupState[oldRef] = null\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null\n    }\n  }\n\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\n  } else {\n    const _isString = isString(ref)\n    const _isRef = isRef(ref)\n\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString\n            ? canSetSetupRef(ref)\n              ? setupState[ref]\n              : refs[ref]\n            : ref.value\n          if (isUnmount) {\n            isArray(existing) && remove(existing, refValue)\n          } else {\n            if (!isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue]\n                if (canSetSetupRef(ref)) {\n                  setupState[ref] = refs[ref]\n                }\n              } else {\n                ref.value = [refValue]\n                if (rawRef.k) refs[rawRef.k] = ref.value\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue)\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value\n          if (canSetSetupRef(ref)) {\n            setupState[ref] = value\n          }\n        } else if (_isRef) {\n          ref.value = value\n          if (rawRef.k) refs[rawRef.k] = value\n        } else if (__DEV__) {\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\n        }\n      }\n      if (value) {\n        // #1789: for non-null values, set them after render\n        // null values means this is unmount and it should not overwrite another\n        // ref with the same key\n        ;(doSet as SchedulerJob).id = -1\n        queuePostRenderEffect(doSet, parentSuspense)\n      } else {\n        doSet()\n      }\n    } else if (__DEV__) {\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\n    }\n  }\n}\n", "import {\n  Fragment,\n  Static,\n  Text,\n  Comment as VComment,\n  type VNode,\n  type VNodeHook,\n  createTextVNode,\n  createVNode,\n  invokeVNodeHook,\n  normalizeVNode,\n} from './vnode'\nimport { flushPostFlushCbs } from './scheduler'\nimport type { ComponentInternalInstance, ComponentOptions } from './component'\nimport { invokeDirectiveHook } from './directives'\nimport { warn } from './warning'\nimport {\n  PatchFlags,\n  ShapeFlags,\n  def,\n  getEscapedCssVarName,\n  includeBooleanAttr,\n  isBooleanAttr,\n  isKnownHtmlAttr,\n  isKnownSvgAttr,\n  isOn,\n  isRenderableAttrValue,\n  isReservedProp,\n  isString,\n  normalizeClass,\n  normalizeStyle,\n  stringifyStyle,\n} from '@vue/shared'\nimport { type RendererInternals, needTransition } from './renderer'\nimport { setRef } from './rendererTemplateRef'\nimport {\n  type SuspenseBoundary,\n  type SuspenseImpl,\n  queueEffectWithSuspense,\n} from './components/Suspense'\nimport type { TeleportImpl, TeleportVNode } from './components/Teleport'\nimport { isAsyncWrapper } from './apiAsyncComponent'\nimport { isReactive } from '@vue/reactivity'\nimport { updateHOCHostEl } from './componentRenderUtils'\n\nexport type RootHydrateFunction = (\n  vnode: VNode<Node, Element>,\n  container: (Element | ShadowRoot) & { _vnode?: VNode },\n) => void\n\nexport enum DOMNodeTypes {\n  ELEMENT = 1,\n  TEXT = 3,\n  COMMENT = 8,\n}\n\nlet hasLoggedMismatchError = false\nconst logMismatchError = () => {\n  if (__TEST__ || hasLoggedMismatchError) {\n    return\n  }\n  // this error should show up in production\n  console.error('Hydration completed but contains mismatches.')\n  hasLoggedMismatchError = true\n}\n\nconst isSVGContainer = (container: Element) =>\n  container.namespaceURI!.includes('svg') &&\n  container.tagName !== 'foreignObject'\n\nconst isMathMLContainer = (container: Element) =>\n  container.namespaceURI!.includes('MathML')\n\nconst getContainerType = (\n  container: Element | ShadowRoot,\n): 'svg' | 'mathml' | undefined => {\n  if (container.nodeType !== DOMNodeTypes.ELEMENT) return undefined\n  if (isSVGContainer(container as Element)) return 'svg'\n  if (isMathMLContainer(container as Element)) return 'mathml'\n  return undefined\n}\n\nexport const isComment = (node: Node): node is Comment =>\n  node.nodeType === DOMNodeTypes.COMMENT\n\n// Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\nexport function createHydrationFunctions(\n  rendererInternals: RendererInternals<Node, Element>,\n): [\n  RootHydrateFunction,\n  (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized?: boolean,\n  ) => Node | null,\n] {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment,\n    },\n  } = rendererInternals\n\n  const hydrate: RootHydrateFunction = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n        warn(\n          `Attempting to hydrate existing markup but container is empty. ` +\n            `Performing full mount instead.`,\n        )\n      patch(null, vnode, container)\n      flushPostFlushCbs()\n      container._vnode = vnode\n      return\n    }\n\n    hydrateNode(container.firstChild!, vnode, null, null, null)\n    flushPostFlushCbs()\n    container._vnode = vnode\n  }\n\n  const hydrateNode = (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized = false,\n  ): Node | null => {\n    optimized = optimized || !!vnode.dynamicChildren\n    const isFragmentStart = isComment(node) && node.data === '['\n    const onMismatch = () =>\n      handleMismatch(\n        node,\n        vnode,\n        parentComponent,\n        parentSuspense,\n        slotScopeIds,\n        isFragmentStart,\n      )\n\n    const { type, ref, shapeFlag, patchFlag } = vnode\n    let domType = node.nodeType\n    vnode.el = node\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      def(node, '__vnode', vnode, true)\n      def(node, '__vueParentComponent', parentComponent, true)\n    }\n\n    if (patchFlag === PatchFlags.BAIL) {\n      optimized = false\n      vnode.dynamicChildren = null\n    }\n\n    let nextNode: Node | null = null\n    switch (type) {\n      case Text:\n        if (domType !== DOMNodeTypes.TEXT) {\n          // #5728 empty text node inside a slot can cause hydration failure\n          // because the server rendered HTML won't contain a text node\n          if (vnode.children === '') {\n            insert((vnode.el = createText('')), parentNode(node)!, node)\n            nextNode = node\n          } else {\n            nextNode = onMismatch()\n          }\n        } else {\n          if ((node as Text).data !== vnode.children) {\n            ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n              warn(\n                `Hydration text mismatch in`,\n                node.parentNode,\n                `\\n  - rendered on server: ${JSON.stringify(\n                  (node as Text).data,\n                )}` +\n                  `\\n  - expected on client: ${JSON.stringify(vnode.children)}`,\n              )\n            logMismatchError()\n            ;(node as Text).data = vnode.children as string\n          }\n          nextNode = nextSibling(node)\n        }\n        break\n      case VComment:\n        if (isTemplateNode(node)) {\n          nextNode = nextSibling(node)\n          // wrapped <transition appear>\n          // replace <template> node with inner child\n          replaceNode(\n            (vnode.el = node.content.firstChild!),\n            node,\n            parentComponent,\n          )\n        } else if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\n          nextNode = onMismatch()\n        } else {\n          nextNode = nextSibling(node)\n        }\n        break\n      case Static:\n        if (isFragmentStart) {\n          // entire template is static but SSRed as a fragment\n          node = nextSibling(node)!\n          domType = node.nodeType\n        }\n        if (domType === DOMNodeTypes.ELEMENT || domType === DOMNodeTypes.TEXT) {\n          // determine anchor, adopt content\n          nextNode = node\n          // if the static vnode has its content stripped during build,\n          // adopt it from the server-rendered HTML.\n          const needToAdoptContent = !(vnode.children as string).length\n          for (let i = 0; i < vnode.staticCount!; i++) {\n            if (needToAdoptContent)\n              vnode.children +=\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\n                  ? (nextNode as Element).outerHTML\n                  : (nextNode as Text).data\n            if (i === vnode.staticCount! - 1) {\n              vnode.anchor = nextNode\n            }\n            nextNode = nextSibling(nextNode)!\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode\n        } else {\n          onMismatch()\n        }\n        break\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch()\n        } else {\n          nextNode = hydrateFragment(\n            node as Comment,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized,\n          )\n        }\n        break\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          if (\n            (domType !== DOMNodeTypes.ELEMENT ||\n              (vnode.type as string).toLowerCase() !==\n                (node as Element).tagName.toLowerCase()) &&\n            !isTemplateNode(node)\n          ) {\n            nextNode = onMismatch()\n          } else {\n            nextNode = hydrateElement(\n              node as Element,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n            )\n          }\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\n          // when setting up the render effect, if the initial vnode already\n          // has .el set, the component will perform hydration instead of mount\n          // on its sub-tree.\n          vnode.slotScopeIds = slotScopeIds\n          const container = parentNode(node)!\n\n          // Locate the next node.\n          if (isFragmentStart) {\n            // If it's a fragment: since components may be async, we cannot rely\n            // on component's rendered output to determine the end of the\n            // fragment. Instead, we do a lookahead to find the end anchor node.\n            nextNode = locateClosingAnchor(node)\n          } else if (isComment(node) && node.data === 'teleport start') {\n            // #4293 #6152\n            // If a teleport is at component root, look ahead for teleport end.\n            nextNode = locateClosingAnchor(node, node.data, 'teleport end')\n          } else {\n            nextNode = nextSibling(node)\n          }\n\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            getContainerType(container),\n            optimized,\n          )\n\n          // #3787\n          // if component is async, it may get moved / unmounted before its\n          // inner component is loaded, so we need to give it a placeholder\n          // vnode that matches its adopted DOM.\n          if (\n            isAsyncWrapper(vnode) &&\n            !(vnode.type as ComponentOptions).__asyncResolved\n          ) {\n            let subTree\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment)\n              subTree.anchor = nextNode\n                ? nextNode.previousSibling\n                : container.lastChild\n            } else {\n              subTree =\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\n            }\n            subTree.el = node\n            vnode.component!.subTree = subTree\n          }\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\n          if (domType !== DOMNodeTypes.COMMENT) {\n            nextNode = onMismatch()\n          } else {\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\n              node,\n              vnode as TeleportVNode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren,\n            )\n          }\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            getContainerType(parentNode(node)!),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode,\n          )\n        } else if (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) {\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\n        }\n    }\n\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode)\n    }\n\n    return nextNode\n  }\n\n  const hydrateElement = (\n    el: Element,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    optimized = optimized || !!vnode.dynamicChildren\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode\n    // #4006 for form elements with non-string v-model value bindings\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\n    // #7476 <input indeterminate>\n    const forcePatch = type === 'input' || type === 'option'\n    // skip props & children if this is hoisted static nodes\n    // #5405 in dev, always hydrate children for HMR\n    if (__DEV__ || forcePatch || patchFlag !== PatchFlags.CACHED) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\n      }\n\n      // handle appear transition\n      let needCallTransitionHooks = false\n      if (isTemplateNode(el)) {\n        needCallTransitionHooks =\n          needTransition(\n            null, // no need check parentSuspense in hydration\n            transition,\n          ) &&\n          parentComponent &&\n          parentComponent.vnode.props &&\n          parentComponent.vnode.props.appear\n\n        const content = (el as HTMLTemplateElement).content\n          .firstChild as Element\n\n        if (needCallTransitionHooks) {\n          transition!.beforeEnter(content)\n        }\n\n        // replace <template> node with inner children\n        replaceNode(content, el, parentComponent)\n        vnode.el = el = content\n      }\n\n      // children\n      if (\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\n        // skip if element has innerHTML / textContent\n        !(props && (props.innerHTML || props.textContent))\n      ) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized,\n        )\n        let hasWarned = false\n        while (next) {\n          if (!isMismatchAllowed(el, MismatchTypes.CHILDREN)) {\n            if (\n              (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n              !hasWarned\n            ) {\n              warn(\n                `Hydration children mismatch on`,\n                el,\n                `\\nServer rendered element contains more child nodes than client vdom.`,\n              )\n              hasWarned = true\n            }\n            logMismatchError()\n          }\n\n          // The SSRed DOM contains more nodes than it should. Remove them.\n          const cur = next\n          next = next.nextSibling\n          remove(cur)\n        }\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n        // #11873 the HTML parser will \"eat\" the first newline when parsing\n        // <pre> and <textarea>, so if the client value starts with a newline,\n        // we need to remove it before comparing\n        let clientText = vnode.children as string\n        if (\n          clientText[0] === '\\n' &&\n          (el.tagName === 'PRE' || el.tagName === 'TEXTAREA')\n        ) {\n          clientText = clientText.slice(1)\n        }\n        if (el.textContent !== clientText) {\n          if (!isMismatchAllowed(el, MismatchTypes.TEXT)) {\n            ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n              warn(\n                `Hydration text content mismatch on`,\n                el,\n                `\\n  - rendered on server: ${el.textContent}` +\n                  `\\n  - expected on client: ${vnode.children as string}`,\n              )\n            logMismatchError()\n          }\n\n          el.textContent = vnode.children as string\n        }\n      }\n\n      // props\n      if (props) {\n        if (\n          __DEV__ ||\n          __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__ ||\n          forcePatch ||\n          !optimized ||\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.NEED_HYDRATION)\n        ) {\n          const isCustomElement = el.tagName.includes('-')\n          for (const key in props) {\n            // check hydration mismatch\n            if (\n              (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n              // #11189 skip if this node has directives that have created hooks\n              // as it could have mutated the DOM in any possible way\n              !(dirs && dirs.some(d => d.dir.created)) &&\n              propHasMismatch(el, key, props[key], vnode, parentComponent)\n            ) {\n              logMismatchError()\n            }\n            if (\n              (forcePatch &&\n                (key.endsWith('value') || key === 'indeterminate')) ||\n              (isOn(key) && !isReservedProp(key)) ||\n              // force hydrate v-bind with .prop modifiers\n              key[0] === '.' ||\n              isCustomElement\n            ) {\n              patchProp(el, key, null, props[key], undefined, parentComponent)\n            }\n          }\n        } else if (props.onClick) {\n          // Fast path for click listeners (which is most often) to avoid\n          // iterating through props.\n          patchProp(\n            el,\n            'onClick',\n            null,\n            props.onClick,\n            undefined,\n            parentComponent,\n          )\n        } else if (patchFlag & PatchFlags.STYLE && isReactive(props.style)) {\n          // #11372: object style values are iterated during patch instead of\n          // render/normalization phase, but style patch is skipped during\n          // hydration, so we need to force iterate the object to track deps\n          for (const key in props.style) props.style[key]\n        }\n      }\n\n      // vnode / directive hooks\n      let vnodeHooks: VNodeHook | null | undefined\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\n      }\n      if (\n        (vnodeHooks = props && props.onVnodeMounted) ||\n        dirs ||\n        needCallTransitionHooks\n      ) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\n          needCallTransitionHooks && transition!.enter(el)\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\n        }, parentSuspense)\n      }\n    }\n\n    return el.nextSibling\n  }\n\n  const hydrateChildren = (\n    node: Node | null,\n    parentVNode: VNode,\n    container: Element,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ): Node | null => {\n    optimized = optimized || !!parentVNode.dynamicChildren\n    const children = parentVNode.children as VNode[]\n    const l = children.length\n    let hasWarned = false\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized\n        ? children[i]\n        : (children[i] = normalizeVNode(children[i]))\n      const isText = vnode.type === Text\n      if (node) {\n        if (isText && !optimized) {\n          // #7285 possible consecutive text vnodes from manual render fns or\n          // JSX-compiled fns, but on the client the browser parses only 1 text\n          // node.\n          // look ahead for next possible text vnode\n          if (i + 1 < l && normalizeVNode(children[i + 1]).type === Text) {\n            // create an extra TextNode on the client for the next vnode to\n            // adopt\n            insert(\n              createText(\n                (node as Text).data.slice((vnode.children as string).length),\n              ),\n              container,\n              nextSibling(node),\n            )\n            ;(node as Text).data = vnode.children as string\n          }\n        }\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized,\n        )\n      } else if (isText && !vnode.children) {\n        // #7215 create a TextNode for empty text node\n        // because server rendered HTML won't contain a text node\n        insert((vnode.el = createText('')), container)\n      } else {\n        if (!isMismatchAllowed(container, MismatchTypes.CHILDREN)) {\n          if (\n            (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n            !hasWarned\n          ) {\n            warn(\n              `Hydration children mismatch on`,\n              container,\n              `\\nServer rendered element contains fewer child nodes than client vdom.`,\n            )\n            hasWarned = true\n          }\n          logMismatchError()\n        }\n\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          getContainerType(container),\n          slotScopeIds,\n        )\n      }\n    }\n    return node\n  }\n\n  const hydrateFragment = (\n    node: Comment,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\n        : fragmentSlotScopeIds\n    }\n\n    const container = parentNode(node)!\n    const next = hydrateChildren(\n      nextSibling(node)!,\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized,\n    )\n    if (next && isComment(next) && next.data === ']') {\n      return nextSibling((vnode.anchor = next))\n    } else {\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\n      // back. This should have led to node/children mismatch warnings.\n      logMismatchError()\n\n      // since the anchor is missing, we need to create one and insert it\n      insert((vnode.anchor = createComment(`]`)), container, next)\n      return next\n    }\n  }\n\n  const handleMismatch = (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    isFragment: boolean,\n  ): Node | null => {\n    if (!isMismatchAllowed(node.parentElement!, MismatchTypes.CHILDREN)) {\n      ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\n        warn(\n          `Hydration node mismatch:\\n- rendered on server:`,\n          node,\n          node.nodeType === DOMNodeTypes.TEXT\n            ? `(text)`\n            : isComment(node) && node.data === '['\n              ? `(start of fragment)`\n              : ``,\n          `\\n- expected on client:`,\n          vnode.type,\n        )\n      logMismatchError()\n    }\n\n    vnode.el = null\n\n    if (isFragment) {\n      // remove excessive fragment nodes\n      const end = locateClosingAnchor(node)\n      while (true) {\n        const next = nextSibling(node)\n        if (next && next !== end) {\n          remove(next)\n        } else {\n          break\n        }\n      }\n    }\n\n    const next = nextSibling(node)\n    const container = parentNode(node)!\n    remove(node)\n\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      getContainerType(container),\n      slotScopeIds,\n    )\n    // the component vnode's el should be updated when a mismatch occurs.\n    if (parentComponent) {\n      parentComponent.vnode.el = vnode.el\n      updateHOCHostEl(parentComponent, vnode.el)\n    }\n    return next\n  }\n\n  // looks ahead for a start and closing comment node\n  const locateClosingAnchor = (\n    node: Node | null,\n    open = '[',\n    close = ']',\n  ): Node | null => {\n    let match = 0\n    while (node) {\n      node = nextSibling(node)\n      if (node && isComment(node)) {\n        if (node.data === open) match++\n        if (node.data === close) {\n          if (match === 0) {\n            return nextSibling(node)\n          } else {\n            match--\n          }\n        }\n      }\n    }\n    return node\n  }\n\n  const replaceNode = (\n    newNode: Node,\n    oldNode: Node,\n    parentComponent: ComponentInternalInstance | null,\n  ): void => {\n    // replace node\n    const parentNode = oldNode.parentNode\n    if (parentNode) {\n      parentNode.replaceChild(newNode, oldNode)\n    }\n\n    // update vnode\n    let parent = parentComponent\n    while (parent) {\n      if (parent.vnode.el === oldNode) {\n        parent.vnode.el = parent.subTree.el = newNode\n      }\n      parent = parent.parent\n    }\n  }\n\n  const isTemplateNode = (node: Node): node is HTMLTemplateElement => {\n    return (\n      node.nodeType === DOMNodeTypes.ELEMENT &&\n      (node as Element).tagName === 'TEMPLATE'\n    )\n  }\n\n  return [hydrate, hydrateNode]\n}\n\n/**\n * Dev only\n */\nfunction propHasMismatch(\n  el: Element,\n  key: string,\n  clientValue: any,\n  vnode: VNode,\n  instance: ComponentInternalInstance | null,\n): boolean {\n  let mismatchType: MismatchTypes | undefined\n  let mismatchKey: string | undefined\n  let actual: string | boolean | null | undefined\n  let expected: string | boolean | null | undefined\n  if (key === 'class') {\n    // classes might be in different order, but that doesn't affect cascade\n    // so we just need to check if the class lists contain the same classes.\n    actual = el.getAttribute('class')\n    expected = normalizeClass(clientValue)\n    if (!isSetEqual(toClassSet(actual || ''), toClassSet(expected))) {\n      mismatchType = MismatchTypes.CLASS\n      mismatchKey = `class`\n    }\n  } else if (key === 'style') {\n    // style might be in different order, but that doesn't affect cascade\n    actual = el.getAttribute('style') || ''\n    expected = isString(clientValue)\n      ? clientValue\n      : stringifyStyle(normalizeStyle(clientValue))\n    const actualMap = toStyleMap(actual)\n    const expectedMap = toStyleMap(expected)\n    // If `v-show=false`, `display: 'none'` should be added to expected\n    if (vnode.dirs) {\n      for (const { dir, value } of vnode.dirs) {\n        // @ts-expect-error only vShow has this internal name\n        if (dir.name === 'show' && !value) {\n          expectedMap.set('display', 'none')\n        }\n      }\n    }\n\n    if (instance) {\n      resolveCssVars(instance, vnode, expectedMap)\n    }\n\n    if (!isMapEqual(actualMap, expectedMap)) {\n      mismatchType = MismatchTypes.STYLE\n      mismatchKey = 'style'\n    }\n  } else if (\n    (el instanceof SVGElement && isKnownSvgAttr(key)) ||\n    (el instanceof HTMLElement && (isBooleanAttr(key) || isKnownHtmlAttr(key)))\n  ) {\n    if (isBooleanAttr(key)) {\n      actual = el.hasAttribute(key)\n      expected = includeBooleanAttr(clientValue)\n    } else if (clientValue == null) {\n      actual = el.hasAttribute(key)\n      expected = false\n    } else {\n      if (el.hasAttribute(key)) {\n        actual = el.getAttribute(key)\n      } else if (key === 'value' && el.tagName === 'TEXTAREA') {\n        // #10000 textarea.value can't be retrieved by `hasAttribute`\n        actual = (el as HTMLTextAreaElement).value\n      } else {\n        actual = false\n      }\n      expected = isRenderableAttrValue(clientValue)\n        ? String(clientValue)\n        : false\n    }\n    if (actual !== expected) {\n      mismatchType = MismatchTypes.ATTRIBUTE\n      mismatchKey = key\n    }\n  }\n\n  if (mismatchType != null && !isMismatchAllowed(el, mismatchType)) {\n    const format = (v: any) =>\n      v === false ? `(not rendered)` : `${mismatchKey}=\"${v}\"`\n    const preSegment = `Hydration ${MismatchTypeString[mismatchType]} mismatch on`\n    const postSegment =\n      `\\n  - rendered on server: ${format(actual)}` +\n      `\\n  - expected on client: ${format(expected)}` +\n      `\\n  Note: this mismatch is check-only. The DOM will not be rectified ` +\n      `in production due to performance overhead.` +\n      `\\n  You should fix the source of the mismatch.`\n    if (__TEST__) {\n      // during tests, log the full message in one single string for easier\n      // debugging.\n      warn(`${preSegment} ${el.tagName}${postSegment}`)\n    } else {\n      warn(preSegment, el, postSegment)\n    }\n    return true\n  }\n  return false\n}\n\nfunction toClassSet(str: string): Set<string> {\n  return new Set(str.trim().split(/\\s+/))\n}\n\nfunction isSetEqual(a: Set<string>, b: Set<string>): boolean {\n  if (a.size !== b.size) {\n    return false\n  }\n  for (const s of a) {\n    if (!b.has(s)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction toStyleMap(str: string): Map<string, string> {\n  const styleMap: Map<string, string> = new Map()\n  for (const item of str.split(';')) {\n    let [key, value] = item.split(':')\n    key = key.trim()\n    value = value && value.trim()\n    if (key && value) {\n      styleMap.set(key, value)\n    }\n  }\n  return styleMap\n}\n\nfunction isMapEqual(a: Map<string, string>, b: Map<string, string>): boolean {\n  if (a.size !== b.size) {\n    return false\n  }\n  for (const [key, value] of a) {\n    if (value !== b.get(key)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction resolveCssVars(\n  instance: ComponentInternalInstance,\n  vnode: VNode,\n  expectedMap: Map<string, string>,\n) {\n  const root = instance.subTree\n  if (\n    instance.getCssVars &&\n    (vnode === root ||\n      (root &&\n        root.type === Fragment &&\n        (root.children as VNode[]).includes(vnode)))\n  ) {\n    const cssVars = instance.getCssVars()\n    for (const key in cssVars) {\n      expectedMap.set(\n        `--${getEscapedCssVarName(key, false)}`,\n        String(cssVars[key]),\n      )\n    }\n  }\n  if (vnode === root && instance.parent) {\n    resolveCssVars(instance.parent, instance.vnode, expectedMap)\n  }\n}\n\nconst allowMismatchAttr = 'data-allow-mismatch'\n\nenum MismatchTypes {\n  TEXT = 0,\n  CHILDREN = 1,\n  CLASS = 2,\n  STYLE = 3,\n  ATTRIBUTE = 4,\n}\n\nconst MismatchTypeString: Record<MismatchTypes, string> = {\n  [MismatchTypes.TEXT]: 'text',\n  [MismatchTypes.CHILDREN]: 'children',\n  [MismatchTypes.CLASS]: 'class',\n  [MismatchTypes.STYLE]: 'style',\n  [MismatchTypes.ATTRIBUTE]: 'attribute',\n} as const\n\nfunction isMismatchAllowed(\n  el: Element | null,\n  allowedType: MismatchTypes,\n): boolean {\n  if (\n    allowedType === MismatchTypes.TEXT ||\n    allowedType === MismatchTypes.CHILDREN\n  ) {\n    while (el && !el.hasAttribute(allowMismatchAttr)) {\n      el = el.parentElement\n    }\n  }\n  const allowedAttr = el && el.getAttribute(allowMismatchAttr)\n  if (allowedAttr == null) {\n    return false\n  } else if (allowedAttr === '') {\n    return true\n  } else {\n    const list = allowedAttr.split(',')\n    // text is a subset of children\n    if (allowedType === MismatchTypes.TEXT && list.includes('children')) {\n      return true\n    }\n    return allowedAttr.split(',').includes(MismatchTypeString[allowedType])\n  }\n}\n", "import { getGlobalThis, isString } from '@vue/shared'\nimport { DOMNodeTypes, isComment } from './hydration'\n\n// Polyfills for Safari support\n// see https://caniuse.com/requestidlecallback\nconst requestIdleCallback: Window['requestIdleCallback'] =\n  getGlobalThis().requestIdleCallback || (cb => setTimeout(cb, 1))\nconst cancelIdleCallback: Window['cancelIdleCallback'] =\n  getGlobalThis().cancelIdleCallback || (id => clearTimeout(id))\n\n/**\n * A lazy hydration strategy for async components.\n * @param hydrate - call this to perform the actual hydration.\n * @param forEachElement - iterate through the root elements of the component's\n *                         non-hydrated DOM, accounting for possible fragments.\n * @returns a teardown function to be called if the async component is unmounted\n *          before it is hydrated. This can be used to e.g. remove DOM event\n *          listeners.\n */\nexport type HydrationStrategy = (\n  hydrate: () => void,\n  forEachElement: (cb: (el: Element) => any) => void,\n) => (() => void) | void\n\nexport type HydrationStrategyFactory<Options> = (\n  options?: Options,\n) => HydrationStrategy\n\nexport const hydrateOnIdle: HydrationStrategyFactory<number> =\n  (timeout = 10000) =>\n  hydrate => {\n    const id = requestIdleCallback(hydrate, { timeout })\n    return () => cancelIdleCallback(id)\n  }\n\nfunction elementIsVisibleInViewport(el: Element) {\n  const { top, left, bottom, right } = el.getBoundingClientRect()\n  // eslint-disable-next-line no-restricted-globals\n  const { innerHeight, innerWidth } = window\n  return (\n    ((top > 0 && top < innerHeight) || (bottom > 0 && bottom < innerHeight)) &&\n    ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n  )\n}\n\nexport const hydrateOnVisible: HydrationStrategyFactory<\n  IntersectionObserverInit\n> = opts => (hydrate, forEach) => {\n  const ob = new IntersectionObserver(entries => {\n    for (const e of entries) {\n      if (!e.isIntersecting) continue\n      ob.disconnect()\n      hydrate()\n      break\n    }\n  }, opts)\n  forEach(el => {\n    if (!(el instanceof Element)) return\n    if (elementIsVisibleInViewport(el)) {\n      hydrate()\n      ob.disconnect()\n      return false\n    }\n    ob.observe(el)\n  })\n  return () => ob.disconnect()\n}\n\nexport const hydrateOnMediaQuery: HydrationStrategyFactory<string> =\n  query => hydrate => {\n    if (query) {\n      const mql = matchMedia(query)\n      if (mql.matches) {\n        hydrate()\n      } else {\n        mql.addEventListener('change', hydrate, { once: true })\n        return () => mql.removeEventListener('change', hydrate)\n      }\n    }\n  }\n\nexport const hydrateOnInteraction: HydrationStrategyFactory<\n  keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap>\n> =\n  (interactions = []) =>\n  (hydrate, forEach) => {\n    if (isString(interactions)) interactions = [interactions]\n    let hasHydrated = false\n    const doHydrate = (e: Event) => {\n      if (!hasHydrated) {\n        hasHydrated = true\n        teardown()\n        hydrate()\n        // replay event\n        e.target!.dispatchEvent(new (e.constructor as any)(e.type, e))\n      }\n    }\n    const teardown = () => {\n      forEach(el => {\n        for (const i of interactions) {\n          el.removeEventListener(i, doHydrate)\n        }\n      })\n    }\n    forEach(el => {\n      for (const i of interactions) {\n        el.addEventListener(i, doHydrate, { once: true })\n      }\n    })\n    return teardown\n  }\n\nexport function forEachElement(\n  node: Node,\n  cb: (el: Element) => void | false,\n): void {\n  // fragment\n  if (isComment(node) && node.data === '[') {\n    let depth = 1\n    let next = node.nextSibling\n    while (next) {\n      if (next.nodeType === DOMNodeTypes.ELEMENT) {\n        const result = cb(next as Element)\n        if (result === false) {\n          break\n        }\n      } else if (isComment(next)) {\n        if (next.data === ']') {\n          if (--depth === 0) break\n        } else if (next.data === '[') {\n          depth++\n        }\n      }\n      next = next.nextSibling\n    }\n  } else {\n    cb(node as Element)\n  }\n}\n", "import {\n  type Component,\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type ConcreteComponent,\n  currentInstance,\n  isInSSRComponentSetup,\n} from './component'\nimport { isFunction, isObject } from '@vue/shared'\nimport type { ComponentPublicInstance } from './componentPublicInstance'\nimport { type VNode, createVNode } from './vnode'\nimport { defineComponent } from './apiDefineComponent'\nimport { warn } from './warning'\nimport { ref } from '@vue/reactivity'\nimport { ErrorCodes, handleError } from './errorHandling'\nimport { isKeepAlive } from './components/KeepAlive'\nimport { markAsyncBoundary } from './helpers/useId'\nimport { type HydrationStrategy, forEachElement } from './hydrationStrategies'\n\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\n\nexport type AsyncComponentLoader<T = any> = () => Promise<\n  AsyncComponentResolveResult<T>\n>\n\nexport interface AsyncComponentOptions<T = any> {\n  loader: AsyncComponentLoader<T>\n  loadingComponent?: Component\n  errorComponent?: Component\n  delay?: number\n  timeout?: number\n  suspensible?: boolean\n  hydrate?: HydrationStrategy\n  onError?: (\n    error: Error,\n    retry: () => void,\n    fail: () => void,\n    attempts: number,\n  ) => any\n}\n\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\n  !!(i.type as ComponentOptions).__asyncLoader\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport function defineAsyncComponent<\n  T extends Component = { new (): ComponentPublicInstance },\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\n  if (isFunction(source)) {\n    source = { loader: source }\n  }\n\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    hydrate: hydrateStrategy,\n    timeout, // undefined = never times out\n    suspensible = true,\n    onError: userOnError,\n  } = source\n\n  let pendingRequest: Promise<ConcreteComponent> | null = null\n  let resolvedComp: ConcreteComponent | undefined\n\n  let retries = 0\n  const retry = () => {\n    retries++\n    pendingRequest = null\n    return load()\n  }\n\n  const load = (): Promise<ConcreteComponent> => {\n    let thisRequest: Promise<ConcreteComponent>\n    return (\n      pendingRequest ||\n      (thisRequest = pendingRequest =\n        loader()\n          .catch(err => {\n            err = err instanceof Error ? err : new Error(String(err))\n            if (userOnError) {\n              return new Promise((resolve, reject) => {\n                const userRetry = () => resolve(retry())\n                const userFail = () => reject(err)\n                userOnError(err, userRetry, userFail, retries + 1)\n              })\n            } else {\n              throw err\n            }\n          })\n          .then((comp: any) => {\n            if (thisRequest !== pendingRequest && pendingRequest) {\n              return pendingRequest\n            }\n            if (__DEV__ && !comp) {\n              warn(\n                `Async component loader resolved to undefined. ` +\n                  `If you are using retry(), make sure to return its return value.`,\n              )\n            }\n            // interop module default\n            if (\n              comp &&\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\n            ) {\n              comp = comp.default\n            }\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\n              throw new Error(`Invalid async component load result: ${comp}`)\n            }\n            resolvedComp = comp\n            return comp\n          }))\n    )\n  }\n\n  return defineComponent({\n    name: 'AsyncComponentWrapper',\n\n    __asyncLoader: load,\n\n    __asyncHydrate(el, instance, hydrate) {\n      const doHydrate = hydrateStrategy\n        ? () => {\n            const teardown = hydrateStrategy(hydrate, cb =>\n              forEachElement(el, cb),\n            )\n            if (teardown) {\n              ;(instance.bum || (instance.bum = [])).push(teardown)\n            }\n          }\n        : hydrate\n      if (resolvedComp) {\n        doHydrate()\n      } else {\n        load().then(() => !instance.isUnmounted && doHydrate())\n      }\n    },\n\n    get __asyncResolved() {\n      return resolvedComp\n    },\n\n    setup() {\n      const instance = currentInstance!\n      markAsyncBoundary(instance)\n\n      // already resolved\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp!, instance)\n      }\n\n      const onError = (err: Error) => {\n        pendingRequest = null\n        handleError(\n          err,\n          instance,\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\n          !errorComponent /* do not throw in dev if user provided error component */,\n        )\n      }\n\n      // suspense-controlled or SSR.\n      if (\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\n        (__SSR__ && isInSSRComponentSetup)\n      ) {\n        return load()\n          .then(comp => {\n            return () => createInnerComp(comp, instance)\n          })\n          .catch(err => {\n            onError(err)\n            return () =>\n              errorComponent\n                ? createVNode(errorComponent as ConcreteComponent, {\n                    error: err,\n                  })\n                : null\n          })\n      }\n\n      const loaded = ref(false)\n      const error = ref()\n      const delayed = ref(!!delay)\n\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false\n        }, delay)\n      }\n\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`,\n            )\n            onError(err)\n            error.value = err\n          }\n        }, timeout)\n      }\n\n      load()\n        .then(() => {\n          loaded.value = true\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n            // parent is keep-alive, force update so the loaded component's\n            // name is taken into account\n            instance.parent.update()\n          }\n        })\n        .catch(err => {\n          onError(err)\n          error.value = err\n        })\n\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance)\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value,\n          })\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent)\n        }\n      }\n    },\n  }) as T\n}\n\nfunction createInnerComp(\n  comp: ConcreteComponent,\n  parent: ComponentInternalInstance,\n) {\n  const { ref, props, children, ce } = parent.vnode\n  const vnode = createVNode(comp, props, children)\n  // ensure inner component inherits the async wrapper's ref owner\n  vnode.ref = ref\n  // pass the custom element callback on to the inner comp\n  // and remove it from the async wrapper\n  vnode.ce = ce\n  delete parent.vnode.ce\n\n  return vnode\n}\n", "import {\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type ConcreteComponent,\n  type SetupContext,\n  currentInstance,\n  getComponentName,\n  getCurrentInstance,\n} from '../component'\nimport {\n  Comment,\n  type VNode,\n  type VNodeProps,\n  cloneVNode,\n  invokeVNodeHook,\n  isSameVNodeType,\n  isVNode,\n} from '../vnode'\nimport { warn } from '../warning'\nimport {\n  injectHook,\n  onBeforeUnmount,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n} from '../apiLifecycle'\nimport {\n  ShapeFlags,\n  invokeArrayFns,\n  isArray,\n  isRegExp,\n  isString,\n  remove,\n} from '@vue/shared'\nimport { watch } from '../apiWatch'\nimport {\n  type ElementNamespace,\n  MoveType,\n  type RendererElement,\n  type RendererInternals,\n  type RendererNode,\n  invalidateMount,\n  queuePostRenderEffect,\n} from '../renderer'\nimport { setTransitionHooks } from './BaseTransition'\nimport type { ComponentRenderContext } from '../componentPublicInstance'\nimport { devtoolsComponentAdded } from '../devtools'\nimport { isAsyncWrapper } from '../apiAsyncComponent'\nimport { isSuspense } from './Suspense'\nimport { LifecycleHooks } from '../enums'\n\ntype MatchPattern = string | RegExp | (string | RegExp)[]\n\nexport interface KeepAliveProps {\n  include?: MatchPattern\n  exclude?: MatchPattern\n  max?: number | string\n}\n\ntype CacheKey = PropertyKey | ConcreteComponent\ntype Cache = Map<CacheKey, VNode>\ntype Keys = Set<CacheKey>\n\nexport interface KeepAliveContext extends ComponentRenderContext {\n  renderer: RendererInternals\n  activate: (\n    vnode: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    namespace: ElementNamespace,\n    optimized: boolean,\n  ) => void\n  deactivate: (vnode: VNode) => void\n}\n\nexport const isKeepAlive = (vnode: VNode): boolean =>\n  (vnode.type as any).__isKeepAlive\n\nconst KeepAliveImpl: ComponentOptions = {\n  name: `KeepAlive`,\n\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number],\n  },\n\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    // KeepAlive communicates with the instantiated renderer via the\n    // ctx where the renderer passes in its internals,\n    // and the KeepAlive instance exposes activate/deactivate implementations.\n    // The whole point of this is to avoid importing KeepAlive directly in the\n    // renderer to facilitate tree-shaking.\n    const sharedContext = instance.ctx as KeepAliveContext\n\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\n    // for KeepAlive, we just need to render its children\n    if (__SSR__ && !sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default()\n        return children && children.length === 1 ? children[0] : children\n      }\n    }\n\n    const cache: Cache = new Map()\n    const keys: Keys = new Set()\n    let current: VNode | null = null\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      ;(instance as any).__v_cache = cache\n    }\n\n    const parentSuspense = instance.suspense\n\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement },\n      },\n    } = sharedContext\n    const storageContainer = createElement('div')\n\n    sharedContext.activate = (\n      vnode,\n      container,\n      anchor,\n      namespace,\n      optimized,\n    ) => {\n      const instance = vnode.component!\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\n      // in case props have changed\n      patch(\n        instance.vnode,\n        vnode,\n        container,\n        anchor,\n        instance,\n        parentSuspense,\n        namespace,\n        vnode.slotScopeIds,\n        optimized,\n      )\n      queuePostRenderEffect(() => {\n        instance.isDeactivated = false\n        if (instance.a) {\n          invokeArrayFns(instance.a)\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\n        }\n      }, parentSuspense)\n\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n        // Update components tree\n        devtoolsComponentAdded(instance)\n      }\n    }\n\n    sharedContext.deactivate = (vnode: VNode) => {\n      const instance = vnode.component!\n      invalidateMount(instance.m)\n      invalidateMount(instance.a)\n\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\n      queuePostRenderEffect(() => {\n        if (instance.da) {\n          invokeArrayFns(instance.da)\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\n        }\n        instance.isDeactivated = true\n      }, parentSuspense)\n\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n        // Update components tree\n        devtoolsComponentAdded(instance)\n      }\n    }\n\n    function unmount(vnode: VNode) {\n      // reset the shapeFlag so it can be properly unmounted\n      resetShapeFlag(vnode)\n      _unmount(vnode, instance, parentSuspense, true)\n    }\n\n    function pruneCache(filter: (name: string) => boolean) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type as ConcreteComponent)\n        if (name && !filter(name)) {\n          pruneCacheEntry(key)\n        }\n      })\n    }\n\n    function pruneCacheEntry(key: CacheKey) {\n      const cached = cache.get(key) as VNode\n      if (cached && (!current || !isSameVNodeType(cached, current))) {\n        unmount(cached)\n      } else if (current) {\n        // current active instance should no longer be kept-alive.\n        // we can't unmount it now but it might be later, so reset its flag now.\n        resetShapeFlag(current)\n      }\n      cache.delete(key)\n      keys.delete(key)\n    }\n\n    // prune cache on include/exclude prop change\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache(name => matches(include, name))\n        exclude && pruneCache(name => !matches(exclude, name))\n      },\n      // prune post-render after `current` has been updated\n      { flush: 'post', deep: true },\n    )\n\n    // cache sub tree after render\n    let pendingCacheKey: CacheKey | null = null\n    const cacheSubtree = () => {\n      // fix #1621, the pendingCacheKey could be 0\n      if (pendingCacheKey != null) {\n        // if KeepAlive child is a Suspense, it needs to be cached after Suspense resolves\n        // avoid caching vnode that not been mounted\n        if (isSuspense(instance.subTree.type)) {\n          queuePostRenderEffect(() => {\n            cache.set(pendingCacheKey!, getInnerChild(instance.subTree))\n          }, instance.subTree.suspense)\n        } else {\n          cache.set(pendingCacheKey, getInnerChild(instance.subTree))\n        }\n      }\n    }\n    onMounted(cacheSubtree)\n    onUpdated(cacheSubtree)\n\n    onBeforeUnmount(() => {\n      cache.forEach(cached => {\n        const { subTree, suspense } = instance\n        const vnode = getInnerChild(subTree)\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          // current instance will be unmounted as part of keep-alive's unmount\n          resetShapeFlag(vnode)\n          // but invoke its deactivated hook here\n          const da = vnode.component!.da\n          da && queuePostRenderEffect(da, suspense)\n          return\n        }\n        unmount(cached)\n      })\n    })\n\n    return () => {\n      pendingCacheKey = null\n\n      if (!slots.default) {\n        return (current = null)\n      }\n\n      const children = slots.default()\n      const rawVNode = children[0]\n      if (children.length > 1) {\n        if (__DEV__) {\n          warn(`KeepAlive should contain exactly one component child.`)\n        }\n        current = null\n        return children\n      } else if (\n        !isVNode(rawVNode) ||\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\n      ) {\n        current = null\n        return rawVNode\n      }\n\n      let vnode = getInnerChild(rawVNode)\n      // #6028 Suspense ssContent maybe a comment VNode, should avoid caching it\n      if (vnode.type === Comment) {\n        current = null\n        return vnode\n      }\n\n      const comp = vnode.type as ConcreteComponent\n\n      // for async components, name check should be based in its loaded\n      // inner component if available\n      const name = getComponentName(\n        isAsyncWrapper(vnode)\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\n          : comp,\n      )\n\n      const { include, exclude, max } = props\n\n      if (\n        (include && (!name || !matches(include, name))) ||\n        (exclude && name && matches(exclude, name))\n      ) {\n        // #11717\n        vnode.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n        current = vnode\n        return rawVNode\n      }\n\n      const key = vnode.key == null ? comp : vnode.key\n      const cachedVNode = cache.get(key)\n\n      // clone vnode if it's reused because we are going to mutate it\n      if (vnode.el) {\n        vnode = cloneVNode(vnode)\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\n          rawVNode.ssContent = vnode\n        }\n      }\n      // #1511 it's possible for the returned vnode to be cloned due to attr\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\n      // that is mounted. Instead of caching it directly, we store the pending\n      // key and cache `instance.subTree` (the normalized vnode) in\n      // mounted/updated hooks.\n      pendingCacheKey = key\n\n      if (cachedVNode) {\n        // copy over mounted state\n        vnode.el = cachedVNode.el\n        vnode.component = cachedVNode.component\n        if (vnode.transition) {\n          // recursively update transition hooks on subTree\n          setTransitionHooks(vnode, vnode.transition!)\n        }\n        // avoid vnode being mounted as fresh\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\n        // make this key the freshest\n        keys.delete(key)\n        keys.add(key)\n      } else {\n        keys.add(key)\n        // prune oldest entry\n        if (max && keys.size > parseInt(max as string, 10)) {\n          pruneCacheEntry(keys.values().next().value!)\n        }\n      }\n      // avoid vnode being unmounted\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n\n      current = vnode\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\n    }\n  },\n}\n\nconst decorate = (t: typeof KeepAliveImpl) => {\n  t.__isBuiltIn = true\n  return t\n}\n\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nexport const KeepAlive = (__COMPAT__\n  ? /*@__PURE__*/ decorate(KeepAliveImpl)\n  : KeepAliveImpl) as any as {\n  __isKeepAlive: true\n  new (): {\n    $props: VNodeProps & KeepAliveProps\n    $slots: {\n      default(): VNode[]\n    }\n  }\n}\n\nfunction matches(pattern: MatchPattern, name: string): boolean {\n  if (isArray(pattern)) {\n    return pattern.some((p: string | RegExp) => matches(p, name))\n  } else if (isString(pattern)) {\n    return pattern.split(',').includes(name)\n  } else if (isRegExp(pattern)) {\n    pattern.lastIndex = 0\n    return pattern.test(name)\n  }\n  /* v8 ignore next */\n  return false\n}\n\nexport function onActivated(\n  hook: Function,\n  target?: ComponentInternalInstance | null,\n): void {\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\n}\n\nexport function onDeactivated(\n  hook: Function,\n  target?: ComponentInternalInstance | null,\n): void {\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\n}\n\nfunction registerKeepAliveHook(\n  hook: Function & { __wdc?: Function },\n  type: LifecycleHooks,\n  target: ComponentInternalInstance | null = currentInstance,\n) {\n  // cache the deactivate branch check wrapper for injected hooks so the same\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n  // deactivation check\".\n  const wrappedHook =\n    hook.__wdc ||\n    (hook.__wdc = () => {\n      // only fire the hook if the target instance is NOT in a deactivated branch.\n      let current: ComponentInternalInstance | null = target\n      while (current) {\n        if (current.isDeactivated) {\n          return\n        }\n        current = current.parent\n      }\n      return hook()\n    })\n  injectHook(type, wrappedHook, target)\n  // In addition to registering it on the target instance, we walk up the parent\n  // chain and register it on all ancestor instances that are keep-alive roots.\n  // This avoids the need to walk the entire component tree when invoking these\n  // hooks, and more importantly, avoids the need to track child components in\n  // arrays.\n  if (target) {\n    let current = target.parent\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\n      }\n      current = current.parent\n    }\n  }\n}\n\nfunction injectToKeepAliveRoot(\n  hook: Function & { __weh?: Function },\n  type: LifecycleHooks,\n  target: ComponentInternalInstance,\n  keepAliveRoot: ComponentInternalInstance,\n) {\n  // injectHook wraps the original for error handling, so make sure to remove\n  // the wrapped version.\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\n  onUnmounted(() => {\n    remove(keepAliveRoot[type]!, injected)\n  }, target)\n}\n\nfunction resetShapeFlag(vnode: VNode) {\n  // bitwise operations to remove keep alive flags\n  vnode.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n  vnode.shapeFlag &= ~ShapeFlags.COMPONENT_KEPT_ALIVE\n}\n\nfunction getInnerChild(vnode: VNode) {\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\n}\n", "import {\n  type ComponentInternalInstance,\n  currentInstance,\n  isInSSRComponentSetup,\n  setCurrentInstance,\n} from './component'\nimport type { ComponentPublicInstance } from './componentPublicInstance'\nimport { ErrorTypeStrings, callWithAsyncErrorHandling } from './errorHandling'\nimport { warn } from './warning'\nimport { toHandlerKey } from '@vue/shared'\nimport {\n  type DebuggerEvent,\n  pauseTracking,\n  resetTracking,\n} from '@vue/reactivity'\nimport { LifecycleHooks } from './enums'\n\nexport { onActivated, onDeactivated } from './components/KeepAlive'\n\nexport function injectHook(\n  type: LifecycleHooks,\n  hook: Function & { __weh?: Function },\n  target: ComponentInternalInstance | null = currentInstance,\n  prepend: boolean = false,\n): Function | undefined {\n  if (target) {\n    const hooks = target[type] || (target[type] = [])\n    // cache the error handling wrapper for injected hooks so the same hook\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n    // handling\".\n    const wrappedHook =\n      hook.__weh ||\n      (hook.__weh = (...args: unknown[]) => {\n        // disable tracking inside all lifecycle hooks\n        // since they can potentially be called inside effects.\n        pauseTracking()\n        // Set currentInstance during hook invocation.\n        // This assumes the hook does not synchronously trigger other hooks, which\n        // can only be false when the user does something really funky.\n        const reset = setCurrentInstance(target)\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\n        reset()\n        resetTracking()\n        return res\n      })\n    if (prepend) {\n      hooks.unshift(wrappedHook)\n    } else {\n      hooks.push(wrappedHook)\n    }\n    return wrappedHook\n  } else if (__DEV__) {\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\n    warn(\n      `${apiName} is called when there is no active component instance to be ` +\n        `associated with. ` +\n        `Lifecycle injection APIs can only be used during execution of setup().` +\n        (__FEATURE_SUSPENSE__\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\n            `hooks before the first await statement.`\n          : ``),\n    )\n  }\n}\n\nconst createHook =\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\n  (\n    hook: T,\n    target: ComponentInternalInstance | null = currentInstance,\n  ): void => {\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n    if (\n      !isInSSRComponentSetup ||\n      lifecycle === LifecycleHooks.SERVER_PREFETCH\n    ) {\n      injectHook(lifecycle, (...args: unknown[]) => hook(...args), target)\n    }\n  }\ntype CreateHook<T = any> = (\n  hook: T,\n  target?: ComponentInternalInstance | null,\n) => void\n\nexport const onBeforeMount: CreateHook = createHook(LifecycleHooks.BEFORE_MOUNT)\nexport const onMounted: CreateHook = createHook(LifecycleHooks.MOUNTED)\nexport const onBeforeUpdate: CreateHook = createHook(\n  LifecycleHooks.BEFORE_UPDATE,\n)\nexport const onUpdated: CreateHook = createHook(LifecycleHooks.UPDATED)\nexport const onBeforeUnmount: CreateHook = createHook(\n  LifecycleHooks.BEFORE_UNMOUNT,\n)\nexport const onUnmounted: CreateHook = createHook(LifecycleHooks.UNMOUNTED)\nexport const onServerPrefetch: CreateHook = createHook(\n  LifecycleHooks.SERVER_PREFETCH,\n)\n\nexport type DebuggerHook = (e: DebuggerEvent) => void\nexport const onRenderTriggered: CreateHook<DebuggerHook> =\n  createHook<DebuggerHook>(LifecycleHooks.RENDER_TRIGGERED)\nexport const onRenderTracked: CreateHook<DebuggerHook> =\n  createHook<DebuggerHook>(LifecycleHooks.RENDER_TRACKED)\n\nexport type ErrorCapturedHook<TError = unknown> = (\n  err: TError,\n  instance: ComponentPublicInstance | null,\n  info: string,\n) => boolean | void\n\nexport function onErrorCaptured<TError = Error>(\n  hook: ErrorCapturedHook<TError>,\n  target: ComponentInternalInstance | null = currentInstance,\n): void {\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\n}\n", "import {\n  type ComponentOptions,\n  type ConcreteComponent,\n  currentInstance,\n  getComponentName,\n} from '../component'\nimport { currentRenderingInstance } from '../componentRenderContext'\nimport type { Directive } from '../directives'\nimport { camelize, capitalize, isString } from '@vue/shared'\nimport { warn } from '../warning'\nimport type { VNodeTypes } from '../vnode'\n\nexport const COMPONENTS = 'components'\nexport const DIRECTIVES = 'directives'\nexport const FILTERS = 'filters'\n\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\n\n/**\n * @private\n */\nexport function resolveComponent(\n  name: string,\n  maybeSelfReference?: boolean,\n): ConcreteComponent | string {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\n}\n\nexport const NULL_DYNAMIC_COMPONENT: unique symbol = Symbol.for('v-ndc')\n\n/**\n * @private\n */\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component\n  } else {\n    // invalid types will fallthrough to createVNode and raise warning\n    return (component || NULL_DYNAMIC_COMPONENT) as any\n  }\n}\n\n/**\n * @private\n */\nexport function resolveDirective(name: string): Directive | undefined {\n  return resolveAsset(DIRECTIVES, name)\n}\n\n/**\n * v2 compat only\n * @internal\n */\nexport function resolveFilter(name: string): Function | undefined {\n  return resolveAsset(FILTERS, name)\n}\n\n/**\n * @private\n * overload 1: components\n */\nfunction resolveAsset(\n  type: typeof COMPONENTS,\n  name: string,\n  warnMissing?: boolean,\n  maybeSelfReference?: boolean,\n): ConcreteComponent | undefined\n// overload 2: directives\nfunction resolveAsset(\n  type: typeof DIRECTIVES,\n  name: string,\n): Directive | undefined\n// implementation\n// overload 3: filters (compat only)\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\n// implementation\nfunction resolveAsset(\n  type: AssetTypes,\n  name: string,\n  warnMissing = true,\n  maybeSelfReference = false,\n) {\n  const instance = currentRenderingInstance || currentInstance\n  if (instance) {\n    const Component = instance.type\n\n    // explicit self name has highest priority\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false /* do not include inferred name to avoid breaking existing code */,\n      )\n      if (\n        selfName &&\n        (selfName === name ||\n          selfName === camelize(name) ||\n          selfName === capitalize(camelize(name)))\n      ) {\n        return Component\n      }\n    }\n\n    const res =\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\n      // global registration\n      resolve(instance.appContext[type], name)\n\n    if (!res && maybeSelfReference) {\n      // fallback to implicit self-reference\n      return Component\n    }\n\n    if (__DEV__ && warnMissing && !res) {\n      const extra =\n        type === COMPONENTS\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\n            `component resolution via compilerOptions.isCustomElement.`\n          : ``\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\n    }\n\n    return res\n  } else if (__DEV__) {\n    warn(\n      `resolve${capitalize(type.slice(0, -1))} ` +\n        `can only be used in render() or setup().`,\n    )\n  }\n}\n\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\n  return (\n    registry &&\n    (registry[name] ||\n      registry[camelize(name)] ||\n      registry[capitalize(camelize(name))])\n  )\n}\n", "import type { VNode, VNodeChild } from '../vnode'\nimport {\n  isReactive,\n  isShallow,\n  shallowReadArray,\n  toReactive,\n} from '@vue/reactivity'\nimport { isArray, isObject, isString } from '@vue/shared'\nimport { warn } from '../warning'\n\n/**\n * v-for string\n * @private\n */\nexport function renderList(\n  source: string,\n  renderItem: (value: string, index: number) => VNodeChild,\n): VNodeChild[]\n\n/**\n * v-for number\n */\nexport function renderList(\n  source: number,\n  renderItem: (value: number, index: number) => VNodeChild,\n): VNodeChild[]\n\n/**\n * v-for array\n */\nexport function renderList<T>(\n  source: T[],\n  renderItem: (value: T, index: number) => VNodeChild,\n): VNodeChild[]\n\n/**\n * v-for iterable\n */\nexport function renderList<T>(\n  source: Iterable<T>,\n  renderItem: (value: T, index: number) => VNodeChild,\n): VNodeChild[]\n\n/**\n * v-for object\n */\nexport function renderList<T>(\n  source: T,\n  renderItem: <K extends keyof T>(\n    value: T[K],\n    key: string,\n    index: number,\n  ) => VNodeChild,\n): VNodeChild[]\n\n/**\n * Actual implementation\n */\nexport function renderList(\n  source: any,\n  renderItem: (...args: any[]) => VNodeChild,\n  cache?: any[],\n  index?: number,\n): VNodeChild[] {\n  let ret: VNodeChild[]\n  const cached = (cache && cache[index!]) as VNode[] | undefined\n  const sourceIsArray = isArray(source)\n\n  if (sourceIsArray || isString(source)) {\n    const sourceIsReactiveArray = sourceIsArray && isReactive(source)\n    let needsWrap = false\n    if (sourceIsReactiveArray) {\n      needsWrap = !isShallow(source)\n      source = shallowReadArray(source)\n    }\n    ret = new Array(source.length)\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(\n        needsWrap ? toReactive(source[i]) : source[i],\n        i,\n        undefined,\n        cached && cached[i],\n      )\n    }\n  } else if (typeof source === 'number') {\n    if (__DEV__ && !Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`)\n    }\n    ret = new Array(source)\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator as any]) {\n      ret = Array.from(source as Iterable<any>, (item, i) =>\n        renderItem(item, i, undefined, cached && cached[i]),\n      )\n    } else {\n      const keys = Object.keys(source)\n      ret = new Array(keys.length)\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i]\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\n      }\n    }\n  } else {\n    ret = []\n  }\n\n  if (cache) {\n    cache[index!] = ret\n  }\n  return ret\n}\n", "import { isArray } from '@vue/shared'\nimport type { VNode } from '../vnode'\n\n// #6651 res can be undefined in SSR in string push mode\ntype SSRSlot = (...args: any[]) => VNode[] | undefined\n\ninterface CompiledSlotDescriptor {\n  name: string\n  fn: SSRSlot\n  key?: string\n}\n\n/**\n * Compiler runtime helper for creating dynamic slots object\n * @private\n */\nexport function createSlots(\n  slots: Record<string, SSRSlot>,\n  dynamicSlots: (\n    | CompiledSlotDescriptor\n    | CompiledSlotDescriptor[]\n    | undefined\n  )[],\n): Record<string, SSRSlot> {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i]\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn\n      }\n    } else if (slot) {\n      // conditional single slot generated by <template v-if=\"...\" #foo>\n      slots[slot.name] = slot.key\n        ? (...args: any[]) => {\n            const res = slot.fn(...args)\n            // attach branch key so each conditional branch is considered a\n            // different fragment\n            if (res) (res as any).key = slot.key\n            return res\n          }\n        : slot.fn\n    }\n  }\n  return slots\n}\n", "import type { Data } from '../component'\nimport type { RawSlots, Slots } from '../componentSlots'\nimport {\n  type ContextualRenderFn,\n  currentRenderingInstance,\n} from '../componentRenderContext'\nimport {\n  Comment,\n  Fragment,\n  type VNode,\n  type VNodeArrayChildren,\n  createBlock,\n  createVNode,\n  isVNode,\n  openBlock,\n} from '../vnode'\nimport { PatchFlags, SlotFlags, isSymbol } from '@vue/shared'\nimport { warn } from '../warning'\nimport { isAsyncWrapper } from '../apiAsyncComponent'\n\n/**\n * Compiler runtime helper for rendering `<slot/>`\n * @private\n */\nexport function renderSlot(\n  slots: Slots,\n  name: string,\n  props: Data = {},\n  // this is not a user-facing function, so the fallback is always generated by\n  // the compiler and guaranteed to be a function returning an array\n  fallback?: () => VNodeArrayChildren,\n  noSlotted?: boolean,\n): VNode {\n  if (\n    currentRenderingInstance!.ce ||\n    (currentRenderingInstance!.parent &&\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\n      currentRenderingInstance!.parent.ce)\n  ) {\n    // in custom element mode, render <slot/> as actual slot outlets\n    // wrap it with a fragment because in shadowRoot: false mode the slot\n    // element gets replaced by injected content\n    if (name !== 'default') props.name = name\n    return (\n      openBlock(),\n      createBlock(\n        Fragment,\n        null,\n        [createVNode('slot', props, fallback && fallback())],\n        PatchFlags.STABLE_FRAGMENT,\n      )\n    )\n  }\n\n  let slot = slots[name]\n\n  if (__DEV__ && slot && slot.length > 1) {\n    warn(\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\n        `function. You need to mark this component with $dynamic-slots in the ` +\n        `parent template.`,\n    )\n    slot = () => []\n  }\n\n  // a compiled slot disables block tracking by default to avoid manual\n  // invocation interfering with template-based block tracking, but in\n  // `renderSlot` we can be sure that it's template-based so we can force\n  // enable it.\n  if (slot && (slot as ContextualRenderFn)._c) {\n    ;(slot as ContextualRenderFn)._d = false\n  }\n  openBlock()\n  const validSlotContent = slot && ensureValidVNode(slot(props))\n  const slotKey =\n    props.key ||\n    // slot content array of a dynamic conditional slot may have a branch\n    // key attached in the `createSlots` helper, respect that\n    (validSlotContent && (validSlotContent as any).key)\n  const rendered = createBlock(\n    Fragment,\n    {\n      key:\n        (slotKey && !isSymbol(slotKey) ? slotKey : `_${name}`) +\n        // #7256 force differentiate fallback content from actual content\n        (!validSlotContent && fallback ? '_fb' : ''),\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\n      ? PatchFlags.STABLE_FRAGMENT\n      : PatchFlags.BAIL,\n  )\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\n  }\n  if (slot && (slot as ContextualRenderFn)._c) {\n    ;(slot as ContextualRenderFn)._d = true\n  }\n  return rendered\n}\n\nexport function ensureValidVNode(\n  vnodes: VNodeArrayChildren,\n): VNodeArrayChildren | null {\n  return vnodes.some(child => {\n    if (!isVNode(child)) return true\n    if (child.type === Comment) return false\n    if (\n      child.type === Fragment &&\n      !ensureValidVNode(child.children as VNodeArrayChildren)\n    )\n      return false\n    return true\n  })\n    ? vnodes\n    : null\n}\n", "import { isObject, toHandlerKey } from '@vue/shared'\nimport { warn } from '../warning'\n\n/**\n * For prefixing keys in v-on=\"obj\" with \"on\"\n * @private\n */\nexport function toHandlers(\n  obj: Record<string, any>,\n  preserveCaseIfNecessary?: boolean,\n): Record<string, any> {\n  const ret: Record<string, any> = {}\n  if (__DEV__ && !isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`)\n    return ret\n  }\n  for (const key in obj) {\n    ret[\n      preserveCaseIfNecessary && /[A-Z]/.test(key)\n        ? `on:${key}`\n        : toHandlerKey(key)\n    ] = obj[key]\n  }\n  return ret\n}\n", "import {\n  type Component,\n  type ComponentInternalInstance,\n  type Data,\n  getComponentPublicInstance,\n  isStatefulComponent,\n} from './component'\nimport { nextTick, queueJob } from './scheduler'\nimport {\n  type OnCleanup,\n  type WatchOptions,\n  type WatchStopHandle,\n  instanceWatch,\n} from './apiWatch'\nimport {\n  EMPTY_OBJ,\n  type IfAny,\n  NOOP,\n  type Prettify,\n  type UnionToIntersection,\n  extend,\n  hasOwn,\n  isFunction,\n  isGloballyAllowed,\n  isString,\n} from '@vue/shared'\nimport {\n  ReactiveFlags,\n  type ShallowUnwrapRef,\n  TrackOpTypes,\n  type UnwrapNestedRefs,\n  shallowReadonly,\n  toRaw,\n  track,\n} from '@vue/reactivity'\nimport {\n  type ComponentInjectOptions,\n  type ComponentOptionsBase,\n  type ComponentOptionsMixin,\n  type ComponentProvideOptions,\n  type ComputedOptions,\n  type ExtractComputedReturns,\n  type InjectToObject,\n  type MergedComponentOptionsOverride,\n  type MethodOptions,\n  type OptionTypesKeys,\n  type OptionTypesType,\n  resolveMergedOptions,\n  shouldCacheAccess,\n} from './componentOptions'\nimport type { EmitFn, EmitsOptions } from './componentEmits'\nimport type { SlotsType, UnwrapSlotsType } from './componentSlots'\nimport { markAttrsAccessed } from './componentRenderUtils'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { warn } from './warning'\nimport { installCompatInstanceProperties } from './compat/instance'\nimport type { Directive } from './directives'\n\n/**\n * Custom properties added to component instances in any way and can be accessed through `this`\n *\n * @example\n * Here is an example of adding a property `$router` to every component instance:\n * ```ts\n * import { createApp } from 'vue'\n * import { Router, createRouter } from 'vue-router'\n *\n * declare module 'vue' {\n *   interface ComponentCustomProperties {\n *     $router: Router\n *   }\n * }\n *\n * // effectively adding the router to every component instance\n * const app = createApp({})\n * const router = createRouter()\n * app.config.globalProperties.$router = router\n *\n * const vm = app.mount('#app')\n * // we can access the router from the instance\n * vm.$router.push('/')\n * ```\n */\nexport interface ComponentCustomProperties {}\n\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\n  ? ComponentOptionsMixin extends T\n    ? true\n    : false\n  : false\n\ntype MixinToOptionTypes<T> =\n  T extends ComponentOptionsBase<\n    infer P,\n    infer B,\n    infer D,\n    infer C,\n    infer M,\n    infer Mixin,\n    infer Extends,\n    any,\n    any,\n    infer Defaults,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  >\n    ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\n        IntersectionMixin<Mixin> &\n        IntersectionMixin<Extends>\n    : never\n\n// ExtractMixin(map type) is used to resolve circularly references\ntype ExtractMixin<T> = {\n  Mixin: MixinToOptionTypes<T>\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\n\nexport type IntersectionMixin<T> =\n  IsDefaultMixinComponent<T> extends true\n    ? OptionTypesType\n    : UnionToIntersection<ExtractMixin<T>>\n\nexport type UnwrapMixinsType<\n  T,\n  Type extends OptionTypesKeys,\n> = T extends OptionTypesType ? T[Type] : never\n\ntype EnsureNonVoid<T> = T extends void ? {} : T\n\nexport type ComponentPublicInstanceConstructor<\n  T extends ComponentPublicInstance<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M\n  > = ComponentPublicInstance<any>,\n  Props = any,\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions,\n> = {\n  __isFragment?: never\n  __isTeleport?: never\n  __isSuspense?: never\n  new (...args: any[]): T\n}\n\n/**\n * @deprecated This is no longer used internally, but exported and relied on by\n * existing library types generated by vue-tsc.\n */\nexport type CreateComponentPublicInstance<\n  P = {},\n  B = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  PublicProps = P,\n  Defaults = {},\n  MakeDefaultsOptional extends boolean = false,\n  I extends ComponentInjectOptions = {},\n  S extends SlotsType = {},\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\n    EnsureNonVoid<C>,\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\n    EnsureNonVoid<M>,\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\n    EnsureNonVoid<Defaults>,\n> = ComponentPublicInstance<\n  PublicP,\n  PublicB,\n  PublicD,\n  PublicC,\n  PublicM,\n  E,\n  PublicProps,\n  PublicDefaults,\n  MakeDefaultsOptional,\n  ComponentOptionsBase<\n    P,\n    B,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    string,\n    Defaults,\n    {},\n    string,\n    S\n  >,\n  I,\n  S\n>\n\n/**\n * This is the same as `CreateComponentPublicInstance` but adds local components,\n * global directives, exposed, and provide inference.\n * It changes the arguments order so that we don't need to repeat mixin\n * inference everywhere internally, but it has to be a new type to avoid\n * breaking types that relies on previous arguments order (#10842)\n */\nexport type CreateComponentPublicInstanceWithMixins<\n  P = {},\n  B = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  PublicProps = P,\n  Defaults = {},\n  MakeDefaultsOptional extends boolean = false,\n  I extends ComponentInjectOptions = {},\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  TypeRefs extends Data = {},\n  TypeEl extends Element = any,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  // mixin inference\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\n    EnsureNonVoid<C>,\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\n    EnsureNonVoid<M>,\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\n    EnsureNonVoid<Defaults>,\n> = ComponentPublicInstance<\n  PublicP,\n  PublicB,\n  PublicD,\n  PublicC,\n  PublicM,\n  E,\n  PublicProps,\n  PublicDefaults,\n  MakeDefaultsOptional,\n  ComponentOptionsBase<\n    P,\n    B,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    string,\n    Defaults,\n    {},\n    string,\n    S,\n    LC,\n    Directives,\n    Exposed,\n    Provide\n  >,\n  I,\n  S,\n  Exposed,\n  TypeRefs,\n  TypeEl\n>\n\nexport type ExposedKeys<\n  T,\n  Exposed extends string & keyof T,\n> = '' extends Exposed ? T : Pick<T, Exposed>\n\n// public properties exposed on the proxy, which is used as the render context\n// in templates (as `this` in the render option)\nexport type ComponentPublicInstance<\n  P = {}, // props type extracted from props option\n  B = {}, // raw bindings returned from setup()\n  D = {}, // return from data()\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  E extends EmitsOptions = {},\n  PublicProps = {},\n  Defaults = {},\n  MakeDefaultsOptional extends boolean = false,\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>,\n  I extends ComponentInjectOptions = {},\n  S extends SlotsType = {},\n  Exposed extends string = '',\n  TypeRefs extends Data = {},\n  TypeEl extends Element = any,\n> = {\n  $: ComponentInternalInstance\n  $data: D\n  $props: MakeDefaultsOptional extends true\n    ? Partial<Defaults> & Omit<Prettify<P> & PublicProps, keyof Defaults>\n    : Prettify<P> & PublicProps\n  $attrs: Data\n  $refs: Data & TypeRefs\n  $slots: UnwrapSlotsType<S>\n  $root: ComponentPublicInstance | null\n  $parent: ComponentPublicInstance | null\n  $host: Element | null\n  $emit: EmitFn<E>\n  $el: TypeEl\n  $options: Options & MergedComponentOptionsOverride\n  $forceUpdate: () => void\n  $nextTick: typeof nextTick\n  $watch<T extends string | ((...args: any) => any)>(\n    source: T,\n    cb: T extends (...args: any) => infer R\n      ? (...args: [R, R, OnCleanup]) => any\n      : (...args: [any, any, OnCleanup]) => any,\n    options?: WatchOptions,\n  ): WatchStopHandle\n} & ExposedKeys<\n  IfAny<\n    P,\n    P,\n    Readonly<Defaults> & Omit<P, keyof ShallowUnwrapRef<B> | keyof Defaults>\n  > &\n    ShallowUnwrapRef<B> &\n    UnwrapNestedRefs<D> &\n    ExtractComputedReturns<C> &\n    M &\n    ComponentCustomProperties &\n    InjectToObject<I>,\n  Exposed\n>\n\nexport type PublicPropertiesMap = Record<\n  string,\n  (i: ComponentInternalInstance) => any\n>\n\n/**\n * #2437 In Vue 3, functional components do not have a public instance proxy but\n * they exist in the internal parent chain. For code that relies on traversing\n * public $parent chains, skip functional ones and go to the parent instead.\n */\nconst getPublicInstance = (\n  i: ComponentInternalInstance | null,\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\n  if (!i) return null\n  if (isStatefulComponent(i)) return getComponentPublicInstance(i)\n  return getPublicInstance(i.parent)\n}\n\nexport const publicPropertiesMap: PublicPropertiesMap =\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /*@__PURE__*/ extend(Object.create(null), {\n    $: i => i,\n    $el: i => i.vnode.el,\n    $data: i => i.data,\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\n    $parent: i => getPublicInstance(i.parent),\n    $root: i => getPublicInstance(i.root),\n    $host: i => i.ce,\n    $emit: i => i.emit,\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\n    $forceUpdate: i =>\n      i.f ||\n      (i.f = () => {\n        queueJob(i.update)\n      }),\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP),\n  } as PublicPropertiesMap)\n\nif (__COMPAT__) {\n  installCompatInstanceProperties(publicPropertiesMap)\n}\n\nenum AccessTypes {\n  OTHER,\n  SETUP,\n  DATA,\n  PROPS,\n  CONTEXT,\n}\n\nexport interface ComponentRenderContext {\n  [key: string]: any\n  _: ComponentInternalInstance\n}\n\nexport const isReservedPrefix = (key: string): key is '_' | '$' =>\n  key === '_' || key === '$'\n\nconst hasSetupBinding = (state: Data, key: string) =>\n  state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key)\n\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\n  get({ _: instance }: ComponentRenderContext, key: string) {\n    if (key === ReactiveFlags.SKIP) {\n      return true\n    }\n\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\n      instance\n\n    // for internal formatters to know that this is a Vue instance\n    if (__DEV__ && key === '__isVue') {\n      return true\n    }\n\n    // data / props / ctx\n    // This getter gets called for every property access on the render context\n    // during render and is a major hotspot. The most expensive part of this\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\n    // access on a plain object, so we use an accessCache object (with null\n    // prototype) to memoize what access type a key corresponds to.\n    let normalizedProps\n    if (key[0] !== '$') {\n      const n = accessCache![key]\n      if (n !== undefined) {\n        switch (n) {\n          case AccessTypes.SETUP:\n            return setupState[key]\n          case AccessTypes.DATA:\n            return data[key]\n          case AccessTypes.CONTEXT:\n            return ctx[key]\n          case AccessTypes.PROPS:\n            return props![key]\n          // default: just fallthrough\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache![key] = AccessTypes.SETUP\n        return setupState[key]\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache![key] = AccessTypes.DATA\n        return data[key]\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) &&\n        hasOwn(normalizedProps, key)\n      ) {\n        accessCache![key] = AccessTypes.PROPS\n        return props![key]\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache![key] = AccessTypes.CONTEXT\n        return ctx[key]\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache![key] = AccessTypes.OTHER\n      }\n    }\n\n    const publicGetter = publicPropertiesMap[key]\n    let cssModule, globalProperties\n    // public $xxx properties\n    if (publicGetter) {\n      if (key === '$attrs') {\n        track(instance.attrs, TrackOpTypes.GET, '')\n        __DEV__ && markAttrsAccessed()\n      } else if (__DEV__ && key === '$slots') {\n        // for HMR only\n        track(instance, TrackOpTypes.GET, key)\n      }\n      return publicGetter(instance)\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) &&\n      (cssModule = cssModule[key])\n    ) {\n      return cssModule\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      // user may set custom properties to `this` that start with `$`\n      accessCache![key] = AccessTypes.CONTEXT\n      return ctx[key]\n    } else if (\n      // global properties\n      ((globalProperties = appContext.config.globalProperties),\n      hasOwn(globalProperties, key))\n    ) {\n      if (__COMPAT__) {\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\n        if (desc.get) {\n          return desc.get.call(instance.proxy)\n        } else {\n          const val = globalProperties[key]\n          return isFunction(val) ? extend(val.bind(instance.proxy), val) : val\n        }\n      } else {\n        return globalProperties[key]\n      }\n    } else if (\n      __DEV__ &&\n      currentRenderingInstance &&\n      (!isString(key) ||\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\n        // to infinite warning loop\n        key.indexOf('__v') !== 0)\n    ) {\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key,\n          )} must be accessed via $data because it starts with a reserved ` +\n            `character (\"$\" or \"_\") and is not proxied on the render context.`,\n        )\n      } else if (instance === currentRenderingInstance) {\n        warn(\n          `Property ${JSON.stringify(key)} was accessed during render ` +\n            `but is not defined on instance.`,\n        )\n      }\n    }\n  },\n\n  set(\n    { _: instance }: ComponentRenderContext,\n    key: string,\n    value: any,\n  ): boolean {\n    const { data, setupState, ctx } = instance\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value\n      return true\n    } else if (\n      __DEV__ &&\n      setupState.__isScriptSetup &&\n      hasOwn(setupState, key)\n    ) {\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`)\n      return false\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value\n      return true\n    } else if (hasOwn(instance.props, key)) {\n      __DEV__ && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`)\n      return false\n    }\n    if (key[0] === '$' && key.slice(1) in instance) {\n      __DEV__ &&\n        warn(\n          `Attempting to mutate public property \"${key}\". ` +\n            `Properties starting with $ are reserved and readonly.`,\n        )\n      return false\n    } else {\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value,\n        })\n      } else {\n        ctx[key] = value\n      }\n    }\n    return true\n  },\n\n  has(\n    {\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions },\n    }: ComponentRenderContext,\n    key: string,\n  ) {\n    let normalizedProps\n    return (\n      !!accessCache![key] ||\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\n      hasSetupBinding(setupState, key) ||\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\n      hasOwn(ctx, key) ||\n      hasOwn(publicPropertiesMap, key) ||\n      hasOwn(appContext.config.globalProperties, key)\n    )\n  },\n\n  defineProperty(\n    target: ComponentRenderContext,\n    key: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    if (descriptor.get != null) {\n      // invalidate key cache of a getter based property #5417\n      target._.accessCache![key] = 0\n    } else if (hasOwn(descriptor, 'value')) {\n      this.set!(target, key, descriptor.value, null)\n    }\n    return Reflect.defineProperty(target, key, descriptor)\n  },\n}\n\nif (__DEV__ && !__TEST__) {\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\n    warn(\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\n        `The keys will be empty in production mode to avoid performance overhead.`,\n    )\n    return Reflect.ownKeys(target)\n  }\n}\n\nexport const RuntimeCompiledPublicInstanceProxyHandlers: ProxyHandler<any> =\n  /*@__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\n    get(target: ComponentRenderContext, key: string) {\n      // fast path for unscopables when using `with` block\n      if ((key as any) === Symbol.unscopables) {\n        return\n      }\n      return PublicInstanceProxyHandlers.get!(target, key, target)\n    },\n    has(_: ComponentRenderContext, key: string) {\n      const has = key[0] !== '_' && !isGloballyAllowed(key)\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key,\n          )} should not start with _ which is a reserved prefix for Vue internals.`,\n        )\n      }\n      return has\n    },\n  })\n\n// dev only\n// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\n  const target: Record<string, any> = {}\n\n  // expose internal instance for proxy handlers\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance,\n  })\n\n  // expose public properties\n  Object.keys(publicPropertiesMap).forEach(key => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP,\n    })\n  })\n\n  return target as ComponentRenderContext\n}\n\n// dev only\nexport function exposePropsOnRenderContext(\n  instance: ComponentInternalInstance,\n): void {\n  const {\n    ctx,\n    propsOptions: [propsOptions],\n  } = instance\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach(key => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP,\n      })\n    })\n  }\n}\n\n// dev only\nexport function exposeSetupStateOnRenderContext(\n  instance: ComponentInternalInstance,\n): void {\n  const { ctx, setupState } = instance\n  Object.keys(toRaw(setupState)).forEach(key => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(\n          `setup() return property ${JSON.stringify(\n            key,\n          )} should not start with \"$\" or \"_\" ` +\n            `which are reserved prefixes for Vue internals.`,\n        )\n        return\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP,\n      })\n    }\n  })\n}\n", "import {\n  type IfAny,\n  type LooseRequired,\n  type Prettify,\n  type UnionToIntersection,\n  extend,\n  isArray,\n  isFunction,\n  isPromise,\n} from '@vue/shared'\nimport {\n  type SetupContext,\n  createSetupContext,\n  getCurrentInstance,\n  setCurrentInstance,\n  unsetCurrentInstance,\n} from './component'\nimport type { EmitFn, EmitsOptions, ObjectEmitsOptions } from './componentEmits'\nimport type {\n  ComponentOptionsBase,\n  ComponentOptionsMixin,\n  ComputedOptions,\n  MethodOptions,\n} from './componentOptions'\nimport type {\n  ComponentObjectPropsOptions,\n  ComponentPropsOptions,\n  ExtractPropTypes,\n  PropOptions,\n} from './componentProps'\nimport { warn } from './warning'\nimport type { SlotsType, StrictUnwrapSlotsType } from './componentSlots'\nimport type { Ref } from '@vue/reactivity'\n\n// dev only\nconst warnRuntimeUsage = (method: string) =>\n  warn(\n    `${method}() is a compiler-hint helper that is only usable inside ` +\n      `<script setup> of a single file component. Its arguments should be ` +\n      `compiled away and passing it at runtime has no effect.`,\n  )\n\n/**\n * Vue `<script setup>` compiler macro for declaring component props. The\n * expected argument is the same as the component `props` option.\n *\n * Example runtime declaration:\n * ```js\n * // using Array syntax\n * const props = defineProps(['foo', 'bar'])\n * // using Object syntax\n * const props = defineProps({\n *   foo: String,\n *   bar: {\n *     type: Number,\n *     required: true\n *   }\n * })\n * ```\n *\n * Equivalent type-based declaration:\n * ```ts\n * // will be compiled into equivalent runtime declarations\n * const props = defineProps<{\n *   foo?: string\n *   bar: number\n * }>()\n * ```\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits}\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n */\n// overload 1: runtime props w/ array\nexport function defineProps<PropNames extends string = string>(\n  props: PropNames[],\n): Prettify<Readonly<{ [key in PropNames]?: any }>>\n// overload 2: runtime props w/ object\nexport function defineProps<\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions,\n>(props: PP): Prettify<Readonly<ExtractPropTypes<PP>>>\n// overload 3: typed-based declaration\nexport function defineProps<TypeProps>(): DefineProps<\n  LooseRequired<TypeProps>,\n  BooleanKey<TypeProps>\n>\n// implementation\nexport function defineProps() {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineProps`)\n  }\n  return null as any\n}\n\nexport type DefineProps<T, BKeys extends keyof T> = Readonly<T> & {\n  readonly [K in BKeys]-?: boolean\n}\n\ntype BooleanKey<T, K extends keyof T = keyof T> = K extends any\n  ? [T[K]] extends [boolean | undefined]\n    ? K\n    : never\n  : never\n\n/**\n * Vue `<script setup>` compiler macro for declaring a component's emitted\n * events. The expected argument is the same as the component `emits` option.\n *\n * Example runtime declaration:\n * ```js\n * const emit = defineEmits(['change', 'update'])\n * ```\n *\n * Example type-based declaration:\n * ```ts\n * const emit = defineEmits<{\n *   // <eventName>: <expected arguments>\n *   change: []\n *   update: [value: number] // named tuple syntax\n * }>()\n *\n * emit('change')\n * emit('update', 1)\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits}\n */\n// overload 1: runtime emits w/ array\nexport function defineEmits<EE extends string = string>(\n  emitOptions: EE[],\n): EmitFn<EE[]>\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\n  emitOptions: E,\n): EmitFn<E>\nexport function defineEmits<T extends ComponentTypeEmits>(): T extends (\n  ...args: any[]\n) => any\n  ? T\n  : ShortEmits<T>\n// implementation\nexport function defineEmits() {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineEmits`)\n  }\n  return null as any\n}\n\nexport type ComponentTypeEmits = ((...args: any[]) => any) | Record<string, any>\n\ntype RecordToUnion<T extends Record<string, any>> = T[keyof T]\n\ntype ShortEmits<T extends Record<string, any>> = UnionToIntersection<\n  RecordToUnion<{\n    [K in keyof T]: (evt: K, ...args: T[K]) => void\n  }>\n>\n\n/**\n * Vue `<script setup>` compiler macro for declaring a component's exposed\n * instance properties when it is accessed by a parent component via template\n * refs.\n *\n * `<script setup>` components are closed by default - i.e. variables inside\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\n * via `defineExpose`.\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineexpose}\n */\nexport function defineExpose<\n  Exposed extends Record<string, any> = Record<string, any>,\n>(exposed?: Exposed): void {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineExpose`)\n  }\n}\n\n/**\n * Vue `<script setup>` compiler macro for declaring a component's additional\n * options. This should be used only for options that cannot be expressed via\n * Composition API - e.g. `inheritAttrs`.\n *\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineoptions}\n */\nexport function defineOptions<\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n>(\n  options?: ComponentOptionsBase<\n    {},\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    {}\n  > & {\n    /**\n     * props should be defined via defineProps().\n     */\n    props?: never\n    /**\n     * emits should be defined via defineEmits().\n     */\n    emits?: never\n    /**\n     * expose should be defined via defineExpose().\n     */\n    expose?: never\n    /**\n     * slots should be defined via defineSlots().\n     */\n    slots?: never\n  },\n): void {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineOptions`)\n  }\n}\n\nexport function defineSlots<\n  S extends Record<string, any> = Record<string, any>,\n>(): StrictUnwrapSlotsType<SlotsType<S>> {\n  if (__DEV__) {\n    warnRuntimeUsage(`defineSlots`)\n  }\n  return null as any\n}\n\nexport type ModelRef<T, M extends PropertyKey = string, G = T, S = T> = Ref<\n  G,\n  S\n> &\n  [ModelRef<T, M, G, S>, Record<M, true | undefined>]\n\nexport type DefineModelOptions<T = any, G = T, S = T> = {\n  get?: (v: T) => G\n  set?: (v: S) => any\n}\n\n/**\n * Vue `<script setup>` compiler macro for declaring a\n * two-way binding prop that can be consumed via `v-model` from the parent\n * component. This will declare a prop with the same name and a corresponding\n * `update:propName` event.\n *\n * If the first argument is a string, it will be used as the prop name;\n * Otherwise the prop name will default to \"modelValue\". In both cases, you\n * can also pass an additional object which will be used as the prop's options.\n *\n * The returned ref behaves differently depending on whether the parent\n * provided the corresponding v-model props or not:\n * - If yes, the returned ref's value will always be in sync with the parent\n *   prop.\n * - If not, the returned ref will behave like a normal local ref.\n *\n * @example\n * ```ts\n * // default model (consumed via `v-model`)\n * const modelValue = defineModel<string>()\n * modelValue.value = \"hello\"\n *\n * // default model with options\n * const modelValue = defineModel<string>({ required: true })\n *\n * // with specified name (consumed via `v-model:count`)\n * const count = defineModel<number>('count')\n * count.value++\n *\n * // with specified name and default value\n * const count = defineModel<number>('count', { default: 0 })\n * ```\n */\nexport function defineModel<T, M extends PropertyKey = string, G = T, S = T>(\n  options: ({ default: any } | { required: true }) &\n    PropOptions<T> &\n    DefineModelOptions<T, G, S>,\n): ModelRef<T, M, G, S>\n\nexport function defineModel<T, M extends PropertyKey = string, G = T, S = T>(\n  options?: PropOptions<T> & DefineModelOptions<T, G, S>,\n): ModelRef<T | undefined, M, G | undefined, S | undefined>\n\nexport function defineModel<T, M extends PropertyKey = string, G = T, S = T>(\n  name: string,\n  options: ({ default: any } | { required: true }) &\n    PropOptions<T> &\n    DefineModelOptions<T, G, S>,\n): ModelRef<T, M, G, S>\n\nexport function defineModel<T, M extends PropertyKey = string, G = T, S = T>(\n  name: string,\n  options?: PropOptions<T> & DefineModelOptions<T, G, S>,\n): ModelRef<T | undefined, M, G | undefined, S | undefined>\n\nexport function defineModel(): any {\n  if (__DEV__) {\n    warnRuntimeUsage('defineModel')\n  }\n}\n\ntype NotUndefined<T> = T extends undefined ? never : T\ntype MappedOmit<T, K extends keyof any> = {\n  [P in keyof T as P extends K ? never : P]: T[P]\n}\n\ntype InferDefaults<T> = {\n  [K in keyof T]?: InferDefault<T, T[K]>\n}\n\ntype NativeType = null | number | string | boolean | symbol | Function\n\ntype InferDefault<P, T> =\n  | ((props: P) => T & {})\n  | (T extends NativeType ? T : never)\n\ntype PropsWithDefaults<\n  T,\n  Defaults extends InferDefaults<T>,\n  BKeys extends keyof T,\n> = T extends unknown\n  ? Readonly<MappedOmit<T, keyof Defaults>> & {\n      readonly [K in keyof Defaults as K extends keyof T\n        ? K\n        : never]-?: K extends keyof T\n        ? Defaults[K] extends undefined\n          ? IfAny<Defaults[K], NotUndefined<T[K]>, T[K]>\n          : NotUndefined<T[K]>\n        : never\n    } & {\n      readonly [K in BKeys]-?: K extends keyof Defaults\n        ? Defaults[K] extends undefined\n          ? boolean | undefined\n          : boolean\n        : boolean\n    }\n  : never\n\n/**\n * Vue `<script setup>` compiler macro for providing props default values when\n * using type-based `defineProps` declaration.\n *\n * Example usage:\n * ```ts\n * withDefaults(defineProps<{\n *   size?: number\n *   labels?: string[]\n * }>(), {\n *   size: 3,\n *   labels: () => ['default label']\n * })\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the output\n * and should **not** be actually called at runtime.\n *\n * @see {@link https://vuejs.org/guide/typescript/composition-api.html#typing-component-props}\n */\nexport function withDefaults<\n  T,\n  BKeys extends keyof T,\n  Defaults extends InferDefaults<T>,\n>(\n  props: DefineProps<T, BKeys>,\n  defaults: Defaults,\n): PropsWithDefaults<T, Defaults, BKeys> {\n  if (__DEV__) {\n    warnRuntimeUsage(`withDefaults`)\n  }\n  return null as any\n}\n\nexport function useSlots(): SetupContext['slots'] {\n  return getContext().slots\n}\n\nexport function useAttrs(): SetupContext['attrs'] {\n  return getContext().attrs\n}\n\nfunction getContext(): SetupContext {\n  const i = getCurrentInstance()!\n  if (__DEV__ && !i) {\n    warn(`useContext() called without active instance.`)\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i))\n}\n\n/**\n * @internal\n */\nexport function normalizePropsOrEmits(\n  props: ComponentPropsOptions | EmitsOptions,\n): ComponentObjectPropsOptions | ObjectEmitsOptions {\n  return isArray(props)\n    ? props.reduce(\n        (normalized, p) => ((normalized[p] = null), normalized),\n        {} as ComponentObjectPropsOptions | ObjectEmitsOptions,\n      )\n    : props\n}\n\n/**\n * Runtime helper for merging default declarations. Imported by compiled code\n * only.\n * @internal\n */\nexport function mergeDefaults(\n  raw: ComponentPropsOptions,\n  defaults: Record<string, any>,\n): ComponentObjectPropsOptions {\n  const props = normalizePropsOrEmits(raw)\n  for (const key in defaults) {\n    if (key.startsWith('__skip')) continue\n    let opt = props[key]\n    if (opt) {\n      if (isArray(opt) || isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] }\n      } else {\n        opt.default = defaults[key]\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] }\n    } else if (__DEV__) {\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true\n    }\n  }\n  return props\n}\n\n/**\n * Runtime helper for merging model declarations.\n * Imported by compiled code only.\n * @internal\n */\nexport function mergeModels(\n  a: ComponentPropsOptions | EmitsOptions,\n  b: ComponentPropsOptions | EmitsOptions,\n): ComponentPropsOptions | EmitsOptions {\n  if (!a || !b) return a || b\n  if (isArray(a) && isArray(b)) return a.concat(b)\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b))\n}\n\n/**\n * Used to create a proxy for the rest element when destructuring props with\n * defineProps().\n * @internal\n */\nexport function createPropsRestProxy(\n  props: any,\n  excludedKeys: string[],\n): Record<string, any> {\n  const ret: Record<string, any> = {}\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key],\n      })\n    }\n  }\n  return ret\n}\n\n/**\n * `<script setup>` helper for persisting the current instance context over\n * async/await flows.\n *\n * `@vue/compiler-sfc` converts the following:\n *\n * ```ts\n * const x = await foo()\n * ```\n *\n * into:\n *\n * ```ts\n * let __temp, __restore\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\n * ```\n * @internal\n */\nexport function withAsyncContext(getAwaitable: () => any): [any, () => void] {\n  const ctx = getCurrentInstance()!\n  if (__DEV__ && !ctx) {\n    warn(\n      `withAsyncContext called without active current instance. ` +\n        `This is likely a bug.`,\n    )\n  }\n  let awaitable = getAwaitable()\n  unsetCurrentInstance()\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch(e => {\n      setCurrentInstance(ctx)\n      throw e\n    })\n  }\n  return [awaitable, () => setCurrentInstance(ctx)]\n}\n", "import {\n  type Component,\n  type ComponentInternalInstance,\n  type ComponentInternalOptions,\n  type ConcreteComponent,\n  type Data,\n  type InternalRenderFunction,\n  type SetupContext,\n  currentInstance,\n} from './component'\nimport {\n  type LooseRequired,\n  NOOP,\n  type Prettify,\n  extend,\n  isArray,\n  isFunction,\n  isObject,\n  isPromise,\n  isString,\n} from '@vue/shared'\nimport { type Ref, getCurrentScope, isRef, traverse } from '@vue/reactivity'\nimport { computed } from './apiComputed'\nimport {\n  type WatchCallback,\n  type WatchOptions,\n  createPathGetter,\n  watch,\n} from './apiWatch'\nimport { inject, provide } from './apiInject'\nimport {\n  type DebuggerHook,\n  type ErrorCapturedHook,\n  onActivated,\n  onBeforeMount,\n  onBeforeUnmount,\n  onBeforeUpdate,\n  onDeactivated,\n  onErrorCaptured,\n  onMounted,\n  onRenderTracked,\n  onRenderTriggered,\n  onServerPrefetch,\n  onUnmounted,\n  onUpdated,\n} from './apiLifecycle'\nimport {\n  type ComputedGetter,\n  type WritableComputedOptions,\n  reactive,\n} from '@vue/reactivity'\nimport type {\n  ComponentObjectPropsOptions,\n  ComponentPropsOptions,\n  ExtractDefaultPropTypes,\n  ExtractPropTypes,\n} from './componentProps'\nimport type {\n  EmitsOptions,\n  EmitsToProps,\n  TypeEmitsToOptions,\n} from './componentEmits'\nimport type { Directive } from './directives'\nimport {\n  type ComponentPublicInstance,\n  type CreateComponentPublicInstanceWithMixins,\n  type IntersectionMixin,\n  type UnwrapMixinsType,\n  isReservedPrefix,\n} from './componentPublicInstance'\nimport { warn } from './warning'\nimport type { VNodeChild } from './vnode'\nimport { callWithAsyncErrorHandling } from './errorHandling'\nimport { deepMergeData } from './compat/data'\nimport { DeprecationTypes, checkCompatEnabled } from './compat/compatConfig'\nimport {\n  type CompatConfig,\n  isCompatEnabled,\n  softAssertCompatEnabled,\n} from './compat/compatConfig'\nimport type { OptionMergeFunction } from './apiCreateApp'\nimport { LifecycleHooks } from './enums'\nimport type { SlotsType } from './componentSlots'\nimport {\n  type ComponentTypeEmits,\n  normalizePropsOrEmits,\n} from './apiSetupHelpers'\nimport { markAsyncBoundary } from './helpers/useId'\n\n/**\n * Interface for declaring custom options.\n *\n * @example\n * ```ts\n * declare module 'vue' {\n *   interface ComponentCustomOptions {\n *     beforeRouteUpdate?(\n *       to: Route,\n *       from: Route,\n *       next: () => void\n *     ): void\n *   }\n * }\n * ```\n */\nexport interface ComponentCustomOptions {}\n\nexport type RenderFunction = () => VNodeChild\n\nexport interface ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C extends ComputedOptions,\n  M extends MethodOptions,\n  Mixin extends ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin,\n  E extends EmitsOptions,\n  EE extends string = string,\n  Defaults = {},\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends, I, II, Provide>,\n    ComponentInternalOptions,\n    ComponentCustomOptions {\n  setup?: (\n    this: void,\n    props: LooseRequired<\n      Props &\n        Prettify<\n          UnwrapMixinsType<\n            IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\n            'P'\n          >\n        >\n    >,\n    ctx: SetupContext<E, S>,\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\n  name?: string\n  template?: string | object // can be a direct DOM node\n  // Note: we are intentionally using the signature-less `Function` type here\n  // since any type with signature will cause the whole inference to fail when\n  // the return expression contains reference to `this`.\n  // Luckily `render()` doesn't need any arguments nor does it care about return\n  // type.\n  render?: Function\n  // NOTE: extending both LC and Record<string, Component> allows objects to be forced\n  // to be of type Component, while still inferring LC generic\n  components?: LC & Record<string, Component>\n  // NOTE: extending both Directives and Record<string, Directive> allows objects to be forced\n  // to be of type Directive, while still inferring Directives generic\n  directives?: Directives & Record<string, Directive>\n  inheritAttrs?: boolean\n  emits?: (E | EE[]) & ThisType<void>\n  slots?: S\n  expose?: Exposed[]\n  serverPrefetch?(): void | Promise<any>\n\n  // Runtime compiler only -----------------------------------------------------\n  compilerOptions?: RuntimeCompilerOptions\n\n  // Internal ------------------------------------------------------------------\n\n  /**\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\n   * not user facing, so the typing is lax and for test only.\n   * @internal\n   */\n  ssrRender?: (\n    ctx: any,\n    push: (item: any) => void,\n    parentInstance: ComponentInternalInstance,\n    attrs: Data | undefined,\n    // for compiler-optimized bindings\n    $props: ComponentInternalInstance['props'],\n    $setup: ComponentInternalInstance['setupState'],\n    $data: ComponentInternalInstance['data'],\n    $options: ComponentInternalInstance['ctx'],\n  ) => void\n\n  /**\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\n   * returned from setup()\n   * @internal\n   */\n  __ssrInlineRender?: boolean\n\n  /**\n   * marker for AsyncComponentWrapper\n   * @internal\n   */\n  __asyncLoader?: () => Promise<ConcreteComponent>\n  /**\n   * the inner component resolved by the AsyncComponentWrapper\n   * @internal\n   */\n  __asyncResolved?: ConcreteComponent\n  /**\n   * Exposed for lazy hydration\n   * @internal\n   */\n  __asyncHydrate?: (\n    el: Element,\n    instance: ComponentInternalInstance,\n    hydrate: () => void,\n  ) => void\n\n  // Type differentiators ------------------------------------------------------\n\n  // Note these are internal but need to be exposed in d.ts for type inference\n  // to work!\n\n  // type-only differentiator to separate OptionWithoutProps from a constructor\n  // type returned by defineComponent() or FunctionalComponent\n  call?: (this: unknown, ...args: unknown[]) => never\n  // type-only differentiators for built-in Vnode types\n  __isFragment?: never\n  __isTeleport?: never\n  __isSuspense?: never\n\n  __defaults?: Defaults\n}\n\n/**\n * Subset of compiler options that makes sense for the runtime.\n */\nexport interface RuntimeCompilerOptions {\n  isCustomElement?: (tag: string) => boolean\n  whitespace?: 'preserve' | 'condense'\n  comments?: boolean\n  delimiters?: [string, string]\n}\n\nexport type ComponentOptions<\n  Props = {},\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = any,\n  M extends MethodOptions = any,\n  Mixin extends ComponentOptionsMixin = any,\n  Extends extends ComponentOptionsMixin = any,\n  E extends EmitsOptions = any,\n  EE extends string = string,\n  Defaults = {},\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n> = ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  Defaults,\n  I,\n  II,\n  S,\n  LC,\n  Directives,\n  Exposed,\n  Provide\n> &\n  ThisType<\n    CreateComponentPublicInstanceWithMixins<\n      {},\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      Readonly<Props>,\n      Defaults,\n      false,\n      I,\n      S,\n      LC,\n      Directives\n    >\n  >\n\nexport type ComponentOptionsMixin = ComponentOptionsBase<\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any,\n  any\n>\n\nexport type ComputedOptions = Record<\n  string,\n  ComputedGetter<any> | WritableComputedOptions<any>\n>\n\nexport interface MethodOptions {\n  [key: string]: Function\n}\n\nexport type ExtractComputedReturns<T extends any> = {\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\n    ? TReturn\n    : T[key] extends (...args: any[]) => infer TReturn\n      ? TReturn\n      : never\n}\n\nexport type ObjectWatchOptionItem = {\n  handler: WatchCallback | string\n} & WatchOptions\n\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\n\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\n\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\n\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\n\ntype ObjectProvideOptions = Record<string | symbol, unknown>\n\nexport type ComponentInjectOptions = string[] | ObjectInjectOptions\n\ntype ObjectInjectOptions = Record<\n  string | symbol,\n  string | symbol | { from?: string | symbol; default?: unknown }\n>\n\nexport type InjectToObject<T extends ComponentInjectOptions> =\n  T extends string[]\n    ? {\n        [K in T[number]]?: unknown\n      }\n    : T extends ObjectInjectOptions\n      ? {\n          [K in keyof T]?: unknown\n        }\n      : never\n\ninterface LegacyOptions<\n  Props,\n  D,\n  C extends ComputedOptions,\n  M extends MethodOptions,\n  Mixin extends ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin,\n  I extends ComponentInjectOptions,\n  II extends string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n> {\n  compatConfig?: CompatConfig\n\n  // allow any custom options\n  [key: string]: any\n\n  // state\n  // Limitation: we cannot expose RawBindings on the `this` context for data\n  // since that leads to some sort of circular inference and breaks ThisType\n  // for the entire component.\n  data?: (\n    this: CreateComponentPublicInstanceWithMixins<\n      Props,\n      {},\n      {},\n      {},\n      MethodOptions,\n      Mixin,\n      Extends\n    >,\n    vm: CreateComponentPublicInstanceWithMixins<\n      Props,\n      {},\n      {},\n      {},\n      MethodOptions,\n      Mixin,\n      Extends\n    >,\n  ) => D\n  computed?: C\n  methods?: M\n  watch?: ComponentWatchOptions\n  provide?: Provide\n  inject?: I | II[]\n\n  // assets\n  filters?: Record<string, Function>\n\n  // composition\n  mixins?: Mixin[]\n  extends?: Extends\n\n  // lifecycle\n  beforeCreate?(): void\n  created?(): void\n  beforeMount?(): void\n  mounted?(): void\n  beforeUpdate?(): void\n  updated?(): void\n  activated?(): void\n  deactivated?(): void\n  /** @deprecated use `beforeUnmount` instead */\n  beforeDestroy?(): void\n  beforeUnmount?(): void\n  /** @deprecated use `unmounted` instead */\n  destroyed?(): void\n  unmounted?(): void\n  renderTracked?: DebuggerHook\n  renderTriggered?: DebuggerHook\n  errorCaptured?: ErrorCapturedHook\n\n  /**\n   * runtime compile only\n   * @deprecated use `compilerOptions.delimiters` instead.\n   */\n  delimiters?: [string, string]\n\n  /**\n   * #3468\n   *\n   * type-only, used to assist Mixin's type inference,\n   * typescript will try to simplify the inferred `Mixin` type,\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\n   * because the `__differentiator` will be different\n   */\n  __differentiator?: keyof D | keyof C | keyof M\n}\n\ntype MergedHook<T = () => void> = T | T[]\n\nexport type MergedComponentOptions = ComponentOptions &\n  MergedComponentOptionsOverride\n\nexport type MergedComponentOptionsOverride = {\n  beforeCreate?: MergedHook\n  created?: MergedHook\n  beforeMount?: MergedHook\n  mounted?: MergedHook\n  beforeUpdate?: MergedHook\n  updated?: MergedHook\n  activated?: MergedHook\n  deactivated?: MergedHook\n  /** @deprecated use `beforeUnmount` instead */\n  beforeDestroy?: MergedHook\n  beforeUnmount?: MergedHook\n  /** @deprecated use `unmounted` instead */\n  destroyed?: MergedHook\n  unmounted?: MergedHook\n  renderTracked?: MergedHook<DebuggerHook>\n  renderTriggered?: MergedHook<DebuggerHook>\n  errorCaptured?: MergedHook<ErrorCapturedHook>\n}\n\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\n\nexport type OptionTypesType<\n  P = {},\n  B = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Defaults = {},\n> = {\n  P: P\n  B: B\n  D: D\n  C: C\n  M: M\n  Defaults: Defaults\n}\n\nenum OptionTypes {\n  PROPS = 'Props',\n  DATA = 'Data',\n  COMPUTED = 'Computed',\n  METHODS = 'Methods',\n  INJECT = 'Inject',\n}\n\nfunction createDuplicateChecker() {\n  const cache = Object.create(null)\n  return (type: OptionTypes, key: string) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\n    } else {\n      cache[key] = type\n    }\n  }\n}\n\nexport let shouldCacheAccess = true\n\nexport function applyOptions(instance: ComponentInternalInstance): void {\n  const options = resolveMergedOptions(instance)\n  const publicThis = instance.proxy! as any\n  const ctx = instance.ctx\n\n  // do not cache property access on public proxy during state initialization\n  shouldCacheAccess = false\n\n  // call beforeCreate first before accessing other options since\n  // the hook may mutate resolved options (#2791)\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\n  }\n\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters,\n  } = options\n\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\n\n  if (__DEV__) {\n    const [propsOptions] = instance.propsOptions\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\n      }\n    }\n  }\n\n  // options initialization order (to be consistent with Vue 2):\n  // - props (already done outside of this function)\n  // - inject\n  // - methods\n  // - data (deferred since it relies on `this` access)\n  // - computed\n  // - watch (deferred since it relies on `this` access)\n\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties)\n  }\n\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = (methods as MethodOptions)[key]\n      if (isFunction(methodHandler)) {\n        // In dev mode, we use the `createRenderContext` function to define\n        // methods to the proxy target, and those are read-only but\n        // reconfigurable, so it needs to be redefined here\n        if (__DEV__) {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true,\n          })\n        } else {\n          ctx[key] = methodHandler.bind(publicThis)\n        }\n        if (__DEV__) {\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\n        }\n      } else if (__DEV__) {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\n            `Did you reference the function correctly?`,\n        )\n      }\n    }\n  }\n\n  if (dataOptions) {\n    if (__DEV__ && !isFunction(dataOptions)) {\n      warn(\n        `The data option must be a function. ` +\n          `Plain object usage is no longer supported.`,\n      )\n    }\n    const data = dataOptions.call(publicThis, publicThis)\n    if (__DEV__ && isPromise(data)) {\n      warn(\n        `data() returned a Promise - note data() cannot be async; If you ` +\n          `intend to perform data fetching before component renders, use ` +\n          `async setup() + <Suspense>.`,\n      )\n    }\n    if (!isObject(data)) {\n      __DEV__ && warn(`data() should return an object.`)\n    } else {\n      instance.data = reactive(data)\n      if (__DEV__) {\n        for (const key in data) {\n          checkDuplicateProperties!(OptionTypes.DATA, key)\n          // expose data on ctx during dev\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: NOOP,\n            })\n          }\n        }\n      }\n    }\n  }\n\n  // state initialization complete at this point - start caching access\n  shouldCacheAccess = true\n\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = (computedOptions as ComputedOptions)[key]\n      const get = isFunction(opt)\n        ? opt.bind(publicThis, publicThis)\n        : isFunction(opt.get)\n          ? opt.get.bind(publicThis, publicThis)\n          : NOOP\n      if (__DEV__ && get === NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`)\n      }\n      const set =\n        !isFunction(opt) && isFunction(opt.set)\n          ? opt.set.bind(publicThis)\n          : __DEV__\n            ? () => {\n                warn(\n                  `Write operation failed: computed property \"${key}\" is readonly.`,\n                )\n              }\n            : NOOP\n      const c = computed({\n        get,\n        set,\n      })\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: v => (c.value = v),\n      })\n      if (__DEV__) {\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\n      }\n    }\n  }\n\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key)\n    }\n  }\n\n  if (provideOptions) {\n    const provides = isFunction(provideOptions)\n      ? provideOptions.call(publicThis)\n      : provideOptions\n    Reflect.ownKeys(provides).forEach(key => {\n      provide(key, provides[key])\n    })\n  }\n\n  if (created) {\n    callHook(created, instance, LifecycleHooks.CREATED)\n  }\n\n  function registerLifecycleHook(\n    register: Function,\n    hook?: Function | Function[],\n  ) {\n    if (isArray(hook)) {\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\n    } else if (hook) {\n      register(hook.bind(publicThis))\n    }\n  }\n\n  registerLifecycleHook(onBeforeMount, beforeMount)\n  registerLifecycleHook(onMounted, mounted)\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\n  registerLifecycleHook(onUpdated, updated)\n  registerLifecycleHook(onActivated, activated)\n  registerLifecycleHook(onDeactivated, deactivated)\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\n  registerLifecycleHook(onRenderTracked, renderTracked)\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\n  registerLifecycleHook(onUnmounted, unmounted)\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\n\n  if (__COMPAT__) {\n    if (\n      beforeDestroy &&\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\n    ) {\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\n    }\n    if (\n      destroyed &&\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\n    ) {\n      registerLifecycleHook(onUnmounted, destroyed)\n    }\n  }\n\n  if (isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {})\n      expose.forEach(key => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: val => (publicThis[key] = val),\n        })\n      })\n    } else if (!instance.exposed) {\n      instance.exposed = {}\n    }\n  }\n\n  // options that are handled when creating the instance but also need to be\n  // applied from mixins\n  if (render && instance.render === NOOP) {\n    instance.render = render as InternalRenderFunction\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs\n  }\n\n  // asset options.\n  if (components) instance.components = components as any\n  if (directives) instance.directives = directives\n  if (\n    __COMPAT__ &&\n    filters &&\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\n  ) {\n    instance.filters = filters\n  }\n\n  if (__SSR__ && serverPrefetch) {\n    markAsyncBoundary(instance)\n  }\n}\n\nexport function resolveInjections(\n  injectOptions: ComponentInjectOptions,\n  ctx: any,\n  checkDuplicateProperties = NOOP as any,\n): void {\n  if (isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions)!\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key]\n    let injected: unknown\n    if (isObject(opt)) {\n      if ('default' in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true /* treat default function as factory */,\n        )\n      } else {\n        injected = inject(opt.from || key)\n      }\n    } else {\n      injected = inject(opt)\n    }\n    if (isRef(injected)) {\n      // unwrap injected refs (ref #4196)\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => (injected as Ref).value,\n        set: v => ((injected as Ref).value = v),\n      })\n    } else {\n      ctx[key] = injected\n    }\n    if (__DEV__) {\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\n    }\n  }\n}\n\nfunction callHook(\n  hook: Function,\n  instance: ComponentInternalInstance,\n  type: LifecycleHooks,\n) {\n  callWithAsyncErrorHandling(\n    isArray(hook)\n      ? hook.map(h => h.bind(instance.proxy!))\n      : hook.bind(instance.proxy!),\n    instance,\n    type,\n  )\n}\n\nexport function createWatcher(\n  raw: ComponentWatchOptionItem,\n  ctx: Data,\n  publicThis: ComponentPublicInstance,\n  key: string,\n): void {\n  let getter = key.includes('.')\n    ? createPathGetter(publicThis, key)\n    : () => (publicThis as any)[key]\n\n  const options: WatchOptions = {}\n  if (__COMPAT__) {\n    const instance =\n      currentInstance && getCurrentScope() === currentInstance.scope\n        ? currentInstance\n        : null\n\n    const newValue = getter()\n    if (\n      isArray(newValue) &&\n      isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\n    ) {\n      options.deep = true\n    }\n\n    const baseGetter = getter\n    getter = () => {\n      const val = baseGetter()\n      if (\n        isArray(val) &&\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\n      ) {\n        traverse(val)\n      }\n      return val\n    }\n  }\n\n  if (isString(raw)) {\n    const handler = ctx[raw]\n    if (isFunction(handler)) {\n      if (__COMPAT__) {\n        watch(getter, handler as WatchCallback, options)\n      } else {\n        watch(getter, handler as WatchCallback)\n      }\n    } else if (__DEV__) {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\n    }\n  } else if (isFunction(raw)) {\n    if (__COMPAT__) {\n      watch(getter, raw.bind(publicThis), options)\n    } else {\n      watch(getter, raw.bind(publicThis))\n    }\n  } else if (isObject(raw)) {\n    if (isArray(raw)) {\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\n    } else {\n      const handler = isFunction(raw.handler)\n        ? raw.handler.bind(publicThis)\n        : (ctx[raw.handler] as WatchCallback)\n      if (isFunction(handler)) {\n        watch(getter, handler, __COMPAT__ ? extend(raw, options) : raw)\n      } else if (__DEV__) {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\n      }\n    }\n  } else if (__DEV__) {\n    warn(`Invalid watch option: \"${key}\"`, raw)\n  }\n}\n\n/**\n * Resolve merged options and cache it on the component.\n * This is done only once per-component since the merging does not involve\n * instances.\n */\nexport function resolveMergedOptions(\n  instance: ComponentInternalInstance,\n): MergedComponentOptions {\n  const base = instance.type as ComponentOptions\n  const { mixins, extends: extendsOptions } = base\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies },\n  } = instance.appContext\n  const cached = cache.get(base)\n\n  let resolved: MergedComponentOptions\n\n  if (cached) {\n    resolved = cached\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    if (\n      __COMPAT__ &&\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\n    ) {\n      resolved = extend({}, base) as MergedComponentOptions\n      resolved.parent = instance.parent && instance.parent.proxy\n      resolved.propsData = instance.vnode.props\n    } else {\n      resolved = base as MergedComponentOptions\n    }\n  } else {\n    resolved = {}\n    if (globalMixins.length) {\n      globalMixins.forEach(m =>\n        mergeOptions(resolved, m, optionMergeStrategies, true),\n      )\n    }\n    mergeOptions(resolved, base, optionMergeStrategies)\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved)\n  }\n  return resolved\n}\n\nexport function mergeOptions(\n  to: any,\n  from: any,\n  strats: Record<string, OptionMergeFunction>,\n  asMixin = false,\n): any {\n  if (__COMPAT__ && isFunction(from)) {\n    from = from.options\n  }\n\n  const { mixins, extends: extendsOptions } = from\n\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true)\n  }\n  if (mixins) {\n    mixins.forEach((m: ComponentOptionsMixin) =>\n      mergeOptions(to, m, strats, true),\n    )\n  }\n\n  for (const key in from) {\n    if (asMixin && key === 'expose') {\n      __DEV__ &&\n        warn(\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\n            `It should only be declared in the base component itself.`,\n        )\n    } else {\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\n    }\n  }\n  return to\n}\n\nexport const internalOptionMergeStrats: Record<string, Function> = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject,\n}\n\nif (__COMPAT__) {\n  internalOptionMergeStrats.filters = mergeObjectOptions\n}\n\nfunction mergeDataFn(to: any, from: any) {\n  if (!from) {\n    return to\n  }\n  if (!to) {\n    return from\n  }\n  return function mergedDataFn(this: ComponentPublicInstance) {\n    return (\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\n        ? deepMergeData\n        : extend\n    )(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from,\n    )\n  }\n}\n\nfunction mergeInject(\n  to: ComponentInjectOptions | undefined,\n  from: ComponentInjectOptions,\n) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\n}\n\nfunction normalizeInject(\n  raw: ComponentInjectOptions | undefined,\n): ObjectInjectOptions | undefined {\n  if (isArray(raw)) {\n    const res: ObjectInjectOptions = {}\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i]\n    }\n    return res\n  }\n  return raw\n}\n\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\n  return to ? [...new Set([].concat(to as any, from as any))] : from\n}\n\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\n  return to ? extend(Object.create(null), to, from) : from\n}\n\nfunction mergeEmitsOrPropsOptions(\n  to: EmitsOptions | undefined,\n  from: EmitsOptions | undefined,\n): EmitsOptions | undefined\nfunction mergeEmitsOrPropsOptions(\n  to: ComponentPropsOptions | undefined,\n  from: ComponentPropsOptions | undefined,\n): ComponentPropsOptions | undefined\nfunction mergeEmitsOrPropsOptions(\n  to: ComponentPropsOptions | EmitsOptions | undefined,\n  from: ComponentPropsOptions | EmitsOptions | undefined,\n) {\n  if (to) {\n    if (isArray(to) && isArray(from)) {\n      return [...new Set([...to, ...from])]\n    }\n    return extend(\n      Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from ?? {}),\n    )\n  } else {\n    return from\n  }\n}\n\nfunction mergeWatchOptions(\n  to: ComponentWatchOptions | undefined,\n  from: ComponentWatchOptions | undefined,\n) {\n  if (!to) return from\n  if (!from) return to\n  const merged = extend(Object.create(null), to)\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key])\n  }\n  return merged\n}\n\n// Deprecated legacy types, kept because they were previously exported ---------\n\n/**\n * @deprecated\n */\nexport type ComponentOptionsWithoutProps<\n  Props = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  TE extends ComponentTypeEmits = {},\n  ResolvedEmits extends EmitsOptions = {} extends E\n    ? TypeEmitsToOptions<TE>\n    : E,\n  PE = Props & EmitsToProps<ResolvedEmits>,\n> = ComponentOptionsBase<\n  PE,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  {},\n  I,\n  II,\n  S,\n  LC,\n  Directives,\n  Exposed,\n  Provide\n> & {\n  props?: never\n  /**\n   * @private for language-tools use only\n   */\n  __typeProps?: Props\n  /**\n   * @private for language-tools use only\n   */\n  __typeEmits?: TE\n} & ThisType<\n    CreateComponentPublicInstanceWithMixins<\n      PE,\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      ResolvedEmits,\n      EE,\n      {},\n      false,\n      I,\n      S,\n      LC,\n      Directives,\n      Exposed\n    >\n  >\n\n/**\n * @deprecated\n */\nexport type ComponentOptionsWithArrayProps<\n  PropNames extends string = string,\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = EmitsOptions,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  Props = Prettify<Readonly<{ [key in PropNames]?: any } & EmitsToProps<E>>>,\n> = ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  {},\n  I,\n  II,\n  S,\n  LC,\n  Directives,\n  Exposed,\n  Provide\n> & {\n  props: PropNames[]\n} & ThisType<\n    CreateComponentPublicInstanceWithMixins<\n      Props,\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      Props,\n      {},\n      false,\n      I,\n      S,\n      LC,\n      Directives,\n      Exposed\n    >\n  >\n\n/**\n * @deprecated\n */\nexport type ComponentOptionsWithObjectProps<\n  PropsOptions = ComponentObjectPropsOptions,\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = EmitsOptions,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = {},\n  LC extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  Props = Prettify<\n    Readonly<ExtractPropTypes<PropsOptions>> & Readonly<EmitsToProps<E>>\n  >,\n  Defaults = ExtractDefaultPropTypes<PropsOptions>,\n> = ComponentOptionsBase<\n  Props,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  Defaults,\n  I,\n  II,\n  S,\n  LC,\n  Directives,\n  Exposed,\n  Provide\n> & {\n  props: PropsOptions & ThisType<void>\n} & ThisType<\n    CreateComponentPublicInstanceWithMixins<\n      Props,\n      RawBindings,\n      D,\n      C,\n      M,\n      Mixin,\n      Extends,\n      E,\n      Props,\n      Defaults,\n      false,\n      I,\n      S,\n      LC,\n      Directives\n    >\n  >\n", "import {\n  type Component,\n  type ComponentInternalInstance,\n  type ConcreteComponent,\n  type Data,\n  getComponentPublicInstance,\n  validateComponentName,\n} from './component'\nimport type {\n  ComponentOptions,\n  MergedComponentOptions,\n  RuntimeCompilerOptions,\n} from './componentOptions'\nimport type {\n  ComponentCustomProperties,\n  ComponentPublicInstance,\n} from './componentPublicInstance'\nimport { type Directive, validateDirectiveName } from './directives'\nimport type { ElementNamespace, RootRenderFunction } from './renderer'\nimport type { InjectionKey } from './apiInject'\nimport { warn } from './warning'\nimport { type VNode, cloneVNode, createVNode } from './vnode'\nimport type { RootHydrateFunction } from './hydration'\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\nimport { NO, extend, isFunction, isObject } from '@vue/shared'\nimport { version } from '.'\nimport { installAppCompatProperties } from './compat/global'\nimport type { NormalizedPropsOptions } from './componentProps'\nimport type { ObjectEmitsOptions } from './componentEmits'\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\nimport type { DefineComponent } from './apiDefineComponent'\n\nexport interface App<HostElement = any> {\n  version: string\n  config: AppConfig\n\n  use<Options extends unknown[]>(\n    plugin: Plugin<Options>,\n    ...options: Options\n  ): this\n  use<Options>(plugin: Plugin<Options>, options: Options): this\n\n  mixin(mixin: ComponentOptions): this\n  component(name: string): Component | undefined\n  component<T extends Component | DefineComponent>(\n    name: string,\n    component: T,\n  ): this\n  directive<\n    HostElement = any,\n    Value = any,\n    Modifiers extends string = string,\n    Arg extends string = string,\n  >(\n    name: string,\n  ): Directive<HostElement, Value, Modifiers, Arg> | undefined\n  directive<\n    HostElement = any,\n    Value = any,\n    Modifiers extends string = string,\n    Arg extends string = string,\n  >(\n    name: string,\n    directive: Directive<HostElement, Value, Modifiers, Arg>,\n  ): this\n  mount(\n    rootContainer: HostElement | string,\n    /**\n     * @internal\n     */\n    isHydrate?: boolean,\n    /**\n     * @internal\n     */\n    namespace?: boolean | ElementNamespace,\n    /**\n     * @internal\n     */\n    vnode?: VNode,\n  ): ComponentPublicInstance\n  unmount(): void\n  onUnmount(cb: () => void): void\n  provide<T, K = InjectionKey<T> | string | number>(\n    key: K,\n    value: K extends InjectionKey<infer V> ? V : T,\n  ): this\n\n  /**\n   * Runs a function with the app as active instance. This allows using of `inject()` within the function to get access\n   * to variables provided via `app.provide()`.\n   *\n   * @param fn - function to run with the app as active instance\n   */\n  runWithContext<T>(fn: () => T): T\n\n  // internal, but we need to expose these for the server-renderer and devtools\n  _uid: number\n  _component: ConcreteComponent\n  _props: Data | null\n  _container: HostElement | null\n  _context: AppContext\n  _instance: ComponentInternalInstance | null\n\n  /**\n   * @internal custom element vnode\n   */\n  _ceVNode?: VNode\n\n  /**\n   * v2 compat only\n   */\n  filter?(name: string): Function | undefined\n  filter?(name: string, filter: Function): this\n\n  /**\n   * @internal v3 compat only\n   */\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\n}\n\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\n\nexport interface AppConfig {\n  // @private\n  readonly isNativeTag: (tag: string) => boolean\n\n  performance: boolean\n  optionMergeStrategies: Record<string, OptionMergeFunction>\n  globalProperties: ComponentCustomProperties & Record<string, any>\n  errorHandler?: (\n    err: unknown,\n    instance: ComponentPublicInstance | null,\n    info: string,\n  ) => void\n  warnHandler?: (\n    msg: string,\n    instance: ComponentPublicInstance | null,\n    trace: string,\n  ) => void\n\n  /**\n   * Options to pass to `@vue/compiler-dom`.\n   * Only supported in runtime compiler build.\n   */\n  compilerOptions: RuntimeCompilerOptions\n\n  /**\n   * @deprecated use config.compilerOptions.isCustomElement\n   */\n  isCustomElement?: (tag: string) => boolean\n\n  /**\n   * TODO document for 3.5\n   * Enable warnings for computed getters that recursively trigger itself.\n   */\n  warnRecursiveComputed?: boolean\n\n  /**\n   * Whether to throw unhandled errors in production.\n   * Default is `false` to avoid crashing on any error (and only logs it)\n   * But in some cases, e.g. SSR, throwing might be more desirable.\n   */\n  throwUnhandledErrorInProduction?: boolean\n\n  /**\n   * Prefix for all useId() calls within this app\n   */\n  idPrefix?: string\n}\n\nexport interface AppContext {\n  app: App // for devtools\n  config: AppConfig\n  mixins: ComponentOptions[]\n  components: Record<string, Component>\n  directives: Record<string, Directive>\n  provides: Record<string | symbol, any>\n\n  /**\n   * Cache for merged/normalized component options\n   * Each app instance has its own cache because app-level global mixins and\n   * optionMergeStrategies can affect merge behavior.\n   * @internal\n   */\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\n  /**\n   * Cache for normalized props options\n   * @internal\n   */\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\n  /**\n   * Cache for normalized emits options\n   * @internal\n   */\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\n  /**\n   * HMR only\n   * @internal\n   */\n  reload?: () => void\n  /**\n   * v2 compat only\n   * @internal\n   */\n  filters?: Record<string, Function>\n}\n\ntype PluginInstallFunction<Options = any[]> = Options extends unknown[]\n  ? (app: App, ...options: Options) => any\n  : (app: App, options: Options) => any\n\nexport type ObjectPlugin<Options = any[]> = {\n  install: PluginInstallFunction<Options>\n}\nexport type FunctionPlugin<Options = any[]> = PluginInstallFunction<Options> &\n  Partial<ObjectPlugin<Options>>\n\nexport type Plugin<Options = any[]> =\n  | FunctionPlugin<Options>\n  | ObjectPlugin<Options>\n\nexport function createAppContext(): AppContext {\n  return {\n    app: null as any,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: undefined,\n      warnHandler: undefined,\n      compilerOptions: {},\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: Object.create(null),\n    optionsCache: new WeakMap(),\n    propsCache: new WeakMap(),\n    emitsCache: new WeakMap(),\n  }\n}\n\nexport type CreateAppFunction<HostElement> = (\n  rootComponent: Component,\n  rootProps?: Data | null,\n) => App<HostElement>\n\nlet uid = 0\n\nexport function createAppAPI<HostElement>(\n  render: RootRenderFunction<HostElement>,\n  hydrate?: RootHydrateFunction,\n): CreateAppFunction<HostElement> {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent)\n    }\n\n    if (rootProps != null && !isObject(rootProps)) {\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\n      rootProps = null\n    }\n\n    const context = createAppContext()\n    const installedPlugins = new WeakSet()\n    const pluginCleanupFns: Array<() => any> = []\n\n    let isMounted = false\n\n    const app: App = (context.app = {\n      _uid: uid++,\n      _component: rootComponent as ConcreteComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n\n      version,\n\n      get config() {\n        return context.config\n      },\n\n      set config(v) {\n        if (__DEV__) {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`,\n          )\n        }\n      },\n\n      use(plugin: Plugin, ...options: any[]) {\n        if (installedPlugins.has(plugin)) {\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin)\n          plugin.install(app, ...options)\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin)\n          plugin(app, ...options)\n        } else if (__DEV__) {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" ` +\n              `function.`,\n          )\n        }\n        return app\n      },\n\n      mixin(mixin: ComponentOptions) {\n        if (__FEATURE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin)\n          } else if (__DEV__) {\n            warn(\n              'Mixin has already been applied to target app' +\n                (mixin.name ? `: ${mixin.name}` : ''),\n            )\n          }\n        } else if (__DEV__) {\n          warn('Mixins are only available in builds supporting Options API')\n        }\n        return app\n      },\n\n      component(name: string, component?: Component): any {\n        if (__DEV__) {\n          validateComponentName(name, context.config)\n        }\n        if (!component) {\n          return context.components[name]\n        }\n        if (__DEV__ && context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`)\n        }\n        context.components[name] = component\n        return app\n      },\n\n      directive(name: string, directive?: Directive) {\n        if (__DEV__) {\n          validateDirectiveName(name)\n        }\n\n        if (!directive) {\n          return context.directives[name] as any\n        }\n        if (__DEV__ && context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`)\n        }\n        context.directives[name] = directive\n        return app\n      },\n\n      mount(\n        rootContainer: HostElement,\n        isHydrate?: boolean,\n        namespace?: boolean | ElementNamespace,\n      ): any {\n        if (!isMounted) {\n          // #5571\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\n            warn(\n              `There is already an app instance mounted on the host container.\\n` +\n                ` If you want to mount another app on the same host container,` +\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`,\n            )\n          }\n          const vnode = app._ceVNode || createVNode(rootComponent, rootProps)\n          // store app context on the root VNode.\n          // this will be set on the root instance on initial mount.\n          vnode.appContext = context\n\n          if (namespace === true) {\n            namespace = 'svg'\n          } else if (namespace === false) {\n            namespace = undefined\n          }\n\n          // HMR root reload\n          if (__DEV__) {\n            context.reload = () => {\n              // casting to ElementNamespace because TS doesn't guarantee type narrowing\n              // over function boundaries\n              render(\n                cloneVNode(vnode),\n                rootContainer,\n                namespace as ElementNamespace,\n              )\n            }\n          }\n\n          if (isHydrate && hydrate) {\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\n          } else {\n            render(vnode, rootContainer, namespace)\n          }\n          isMounted = true\n          app._container = rootContainer\n          // for devtools and telemetry\n          ;(rootContainer as any).__vue_app__ = app\n\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component\n            devtoolsInitApp(app, version)\n          }\n\n          return getComponentPublicInstance(vnode.component!)\n        } else if (__DEV__) {\n          warn(\n            `App has already been mounted.\\n` +\n              `If you want to remount the same app, move your app creation logic ` +\n              `into a factory function and create fresh app instances for each ` +\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``,\n          )\n        }\n      },\n\n      onUnmount(cleanupFn: () => void) {\n        if (__DEV__ && typeof cleanupFn !== 'function') {\n          warn(\n            `Expected function as first argument to app.onUnmount(), ` +\n              `but got ${typeof cleanupFn}`,\n          )\n        }\n        pluginCleanupFns.push(cleanupFn)\n      },\n\n      unmount() {\n        if (isMounted) {\n          callWithAsyncErrorHandling(\n            pluginCleanupFns,\n            app._instance,\n            ErrorCodes.APP_UNMOUNT_CLEANUP,\n          )\n          render(null, app._container)\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n            app._instance = null\n            devtoolsUnmountApp(app)\n          }\n          delete app._container.__vue_app__\n        } else if (__DEV__) {\n          warn(`Cannot unmount an app that is not mounted.`)\n        }\n      },\n\n      provide(key, value) {\n        if (__DEV__ && (key as string | symbol) in context.provides) {\n          warn(\n            `App already provides property with key \"${String(key)}\". ` +\n              `It will be overwritten with the new value.`,\n          )\n        }\n\n        context.provides[key as string | symbol] = value\n\n        return app\n      },\n\n      runWithContext(fn) {\n        const lastApp = currentApp\n        currentApp = app\n        try {\n          return fn()\n        } finally {\n          currentApp = lastApp\n        }\n      },\n    })\n\n    if (__COMPAT__) {\n      installAppCompatProperties(app, context, render)\n    }\n\n    return app\n  }\n}\n\n/**\n * @internal Used to identify the current app when using `inject()` within\n * `app.runWithContext()`.\n */\nexport let currentApp: App<unknown> | null = null\n", "import { isFunction } from '@vue/shared'\nimport { currentInstance } from './component'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { currentApp } from './apiCreateApp'\nimport { warn } from './warning'\n\ninterface InjectionConstraint<T> {}\n\nexport type InjectionKey<T> = symbol & InjectionConstraint<T>\n\nexport function provide<T, K = InjectionKey<T> | string | number>(\n  key: K,\n  value: K extends InjectionKey<infer V> ? V : T,\n): void {\n  if (!currentInstance) {\n    if (__DEV__) {\n      warn(`provide() can only be used inside setup().`)\n    }\n  } else {\n    let provides = currentInstance.provides\n    // by default an instance inherits its parent's provides object\n    // but when it needs to provide values of its own, it creates its\n    // own provides object using parent provides object as prototype.\n    // this way in `inject` we can simply look up injections from direct\n    // parent and let the prototype chain do the work.\n    const parentProvides =\n      currentInstance.parent && currentInstance.parent.provides\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides)\n    }\n    // TS doesn't allow symbol as index type\n    provides[key as string] = value\n  }\n}\n\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\nexport function inject<T>(\n  key: InjectionKey<T> | string,\n  defaultValue: T,\n  treatDefaultAsFactory?: false,\n): T\nexport function inject<T>(\n  key: InjectionKey<T> | string,\n  defaultValue: T | (() => T),\n  treatDefaultAsFactory: true,\n): T\nexport function inject(\n  key: InjectionKey<any> | string,\n  defaultValue?: unknown,\n  treatDefaultAsFactory = false,\n) {\n  // fallback to `currentRenderingInstance` so that this can be called in\n  // a functional component\n  const instance = currentInstance || currentRenderingInstance\n\n  // also support looking up from app-level provides w/ `app.runWithContext()`\n  if (instance || currentApp) {\n    // #2400\n    // to support `app.use` plugins,\n    // fallback to appContext's `provides` if the instance is at root\n    // #11488, in a nested createApp, prioritize using the provides from currentApp\n    const provides = currentApp\n      ? currentApp._context.provides\n      : instance\n        ? instance.parent == null\n          ? instance.vnode.appContext && instance.vnode.appContext.provides\n          : instance.parent.provides\n        : undefined\n\n    if (provides && (key as string | symbol) in provides) {\n      // TS doesn't allow symbol as index type\n      return provides[key as string]\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue)\n        ? defaultValue.call(instance && instance.proxy)\n        : defaultValue\n    } else if (__DEV__) {\n      warn(`injection \"${String(key)}\" not found.`)\n    }\n  } else if (__DEV__) {\n    warn(`inject() can only be used inside setup() or functional components.`)\n  }\n}\n\n/**\n * Returns true if `inject()` can be used without warning about being called in the wrong place (e.g. outside of\n * setup()). This is used by libraries that want to use `inject()` internally without triggering a warning to the end\n * user. One example is `useRoute()` in `vue-router`.\n */\nexport function hasInjectionContext(): boolean {\n  return !!(currentInstance || currentRenderingInstance || currentApp)\n}\n", "import { inject } from '../apiInject'\nimport { warn } from '../warning'\n\nexport const ssrContextKey: unique symbol = Symbol.for('v-scx')\n\nexport const useSSRContext = <T = Record<string, any>>(): T | undefined => {\n  if (!__GLOBAL__) {\n    const ctx = inject<T>(ssrContextKey)\n    if (!ctx) {\n      __DEV__ &&\n        warn(\n          `Server rendering context not provided. Make sure to only call ` +\n            `useSSRContext() conditionally in the server build.`,\n        )\n    }\n    return ctx\n  } else if (__DEV__) {\n    warn(`useSSRContext() is not supported in the global build.`)\n  }\n}\n", "import {\n  type WatchOptions as BaseWatchOptions,\n  type DebuggerOptions,\n  type ReactiveMarker,\n  type WatchCallback,\n  type WatchEffect,\n  type WatchHandle,\n  type WatchSource,\n  watch as baseWatch,\n} from '@vue/reactivity'\nimport { type SchedulerJob, SchedulerJobFlags, queueJob } from './scheduler'\nimport { EMPTY_OBJ, NOOP, extend, isFunction, isString } from '@vue/shared'\nimport {\n  type ComponentInternalInstance,\n  currentInstance,\n  isInSSRComponentSetup,\n  setCurrentInstance,\n} from './component'\nimport { callWithAsyncErrorHandling } from './errorHandling'\nimport { queuePostRenderEffect } from './renderer'\nimport { warn } from './warning'\nimport type { ObjectWatchOptionItem } from './componentOptions'\nimport { useSSRContext } from './helpers/useSsrContext'\n\nexport type {\n  WatchHandle,\n  WatchStopHandle,\n  WatchEffect,\n  WatchSource,\n  WatchCallback,\n  OnCleanup,\n} from '@vue/reactivity'\n\ntype MaybeUndefined<T, I> = I extends true ? T | undefined : T\n\ntype MapSources<T, Immediate> = {\n  [K in keyof T]: T[K] extends WatchSource<infer V>\n    ? MaybeUndefined<V, Immediate>\n    : T[K] extends object\n      ? MaybeUndefined<T[K], Immediate>\n      : never\n}\n\nexport interface WatchEffectOptions extends DebuggerOptions {\n  flush?: 'pre' | 'post' | 'sync'\n}\n\nexport interface WatchOptions<Immediate = boolean> extends WatchEffectOptions {\n  immediate?: Immediate\n  deep?: boolean | number\n  once?: boolean\n}\n\n// Simple effect.\nexport function watchEffect(\n  effect: WatchEffect,\n  options?: WatchEffectOptions,\n): WatchHandle {\n  return doWatch(effect, null, options)\n}\n\nexport function watchPostEffect(\n  effect: WatchEffect,\n  options?: DebuggerOptions,\n): WatchHandle {\n  return doWatch(\n    effect,\n    null,\n    __DEV__ ? extend({}, options as any, { flush: 'post' }) : { flush: 'post' },\n  )\n}\n\nexport function watchSyncEffect(\n  effect: WatchEffect,\n  options?: DebuggerOptions,\n): WatchHandle {\n  return doWatch(\n    effect,\n    null,\n    __DEV__ ? extend({}, options as any, { flush: 'sync' }) : { flush: 'sync' },\n  )\n}\n\nexport type MultiWatchSources = (WatchSource<unknown> | object)[]\n\n// overload: single source + cb\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\n  source: WatchSource<T>,\n  cb: WatchCallback<T, MaybeUndefined<T, Immediate>>,\n  options?: WatchOptions<Immediate>,\n): WatchHandle\n\n// overload: reactive array or tuple of multiple sources + cb\nexport function watch<\n  T extends Readonly<MultiWatchSources>,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: readonly [...T] | T,\n  cb: [T] extends [ReactiveMarker]\n    ? WatchCallback<T, MaybeUndefined<T, Immediate>>\n    : WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\n  options?: WatchOptions<Immediate>,\n): WatchHandle\n\n// overload: array of multiple sources + cb\nexport function watch<\n  T extends MultiWatchSources,\n  Immediate extends Readonly<boolean> = false,\n>(\n  sources: [...T],\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\n  options?: WatchOptions<Immediate>,\n): WatchHandle\n\n// overload: watching reactive object w/ cb\nexport function watch<\n  T extends object,\n  Immediate extends Readonly<boolean> = false,\n>(\n  source: T,\n  cb: WatchCallback<T, MaybeUndefined<T, Immediate>>,\n  options?: WatchOptions<Immediate>,\n): WatchHandle\n\n// implementation\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\n  source: T | WatchSource<T>,\n  cb: any,\n  options?: WatchOptions<Immediate>,\n): WatchHandle {\n  if (__DEV__ && !isFunction(cb)) {\n    warn(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\n        `supports \\`watch(source, cb, options?) signature.`,\n    )\n  }\n  return doWatch(source as any, cb, options)\n}\n\nfunction doWatch(\n  source: WatchSource | WatchSource[] | WatchEffect | object,\n  cb: WatchCallback | null,\n  options: WatchOptions = EMPTY_OBJ,\n): WatchHandle {\n  const { immediate, deep, flush, once } = options\n\n  if (__DEV__ && !cb) {\n    if (immediate !== undefined) {\n      warn(\n        `watch() \"immediate\" option is only respected when using the ` +\n          `watch(source, callback, options?) signature.`,\n      )\n    }\n    if (deep !== undefined) {\n      warn(\n        `watch() \"deep\" option is only respected when using the ` +\n          `watch(source, callback, options?) signature.`,\n      )\n    }\n    if (once !== undefined) {\n      warn(\n        `watch() \"once\" option is only respected when using the ` +\n          `watch(source, callback, options?) signature.`,\n      )\n    }\n  }\n\n  const baseWatchOptions: BaseWatchOptions = extend({}, options)\n\n  if (__DEV__) baseWatchOptions.onWarn = warn\n\n  // immediate watcher or watchEffect\n  const runsImmediately = (cb && immediate) || (!cb && flush !== 'post')\n  let ssrCleanup: (() => void)[] | undefined\n  if (__SSR__ && isInSSRComponentSetup) {\n    if (flush === 'sync') {\n      const ctx = useSSRContext()!\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = [])\n    } else if (!runsImmediately) {\n      const watchStopHandle = () => {}\n      watchStopHandle.stop = NOOP\n      watchStopHandle.resume = NOOP\n      watchStopHandle.pause = NOOP\n      return watchStopHandle\n    }\n  }\n\n  const instance = currentInstance\n  baseWatchOptions.call = (fn, type, args) =>\n    callWithAsyncErrorHandling(fn, instance, type, args)\n\n  // scheduler\n  let isPre = false\n  if (flush === 'post') {\n    baseWatchOptions.scheduler = job => {\n      queuePostRenderEffect(job, instance && instance.suspense)\n    }\n  } else if (flush !== 'sync') {\n    // default: 'pre'\n    isPre = true\n    baseWatchOptions.scheduler = (job, isFirstRun) => {\n      if (isFirstRun) {\n        job()\n      } else {\n        queueJob(job)\n      }\n    }\n  }\n\n  baseWatchOptions.augmentJob = (job: SchedulerJob) => {\n    // important: mark the job as a watcher callback so that scheduler knows\n    // it is allowed to self-trigger (#1727)\n    if (cb) {\n      job.flags! |= SchedulerJobFlags.ALLOW_RECURSE\n    }\n    if (isPre) {\n      job.flags! |= SchedulerJobFlags.PRE\n      if (instance) {\n        job.id = instance.uid\n        ;(job as SchedulerJob).i = instance\n      }\n    }\n  }\n\n  const watchHandle = baseWatch(source, cb, baseWatchOptions)\n\n  if (__SSR__ && isInSSRComponentSetup) {\n    if (ssrCleanup) {\n      ssrCleanup.push(watchHandle)\n    } else if (runsImmediately) {\n      watchHandle()\n    }\n  }\n\n  return watchHandle\n}\n\n// this.$watch\nexport function instanceWatch(\n  this: ComponentInternalInstance,\n  source: string | Function,\n  value: WatchCallback | ObjectWatchOptionItem,\n  options?: WatchOptions,\n): WatchHandle {\n  const publicThis = this.proxy as any\n  const getter = isString(source)\n    ? source.includes('.')\n      ? createPathGetter(publicThis, source)\n      : () => publicThis[source]\n    : source.bind(publicThis, publicThis)\n  let cb\n  if (isFunction(value)) {\n    cb = value\n  } else {\n    cb = value.handler as Function\n    options = value\n  }\n  const reset = setCurrentInstance(this)\n  const res = doWatch(getter, cb.bind(publicThis), options)\n  reset()\n  return res\n}\n\nexport function createPathGetter(ctx: any, path: string) {\n  const segments = path.split('.')\n  return (): any => {\n    let cur = ctx\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]]\n    }\n    return cur\n  }\n}\n", "import { type Ref, customRef, ref } from '@vue/reactivity'\nimport { EMPTY_OBJ, camelize, hasChanged, hyphenate } from '@vue/shared'\nimport type { DefineModelOptions, ModelRef } from '../apiSetupHelpers'\nimport { getCurrentInstance } from '../component'\nimport { warn } from '../warning'\nimport type { NormalizedProps } from '../componentProps'\nimport { watchSyncEffect } from '../apiWatch'\n\nexport function useModel<\n  M extends PropertyKey,\n  T extends Record<string, any>,\n  K extends keyof T,\n  G = T[K],\n  S = T[K],\n>(\n  props: T,\n  name: K,\n  options?: DefineModelOptions<T[K], G, S>,\n): ModelRef<T[K], M, G, S>\nexport function useModel(\n  props: Record<string, any>,\n  name: string,\n  options: DefineModelOptions = EMPTY_OBJ,\n): Ref {\n  const i = getCurrentInstance()!\n  if (__DEV__ && !i) {\n    warn(`useModel() called without active instance.`)\n    return ref() as any\n  }\n\n  const camelizedName = camelize(name)\n  if (__DEV__ && !(i.propsOptions[0] as NormalizedProps)[camelizedName]) {\n    warn(`useModel() called with prop \"${name}\" which is not declared.`)\n    return ref() as any\n  }\n\n  const hyphenatedName = hyphenate(name)\n  const modifiers = getModelModifiers(props, camelizedName)\n\n  const res = customRef((track, trigger) => {\n    let localValue: any\n    let prevSetValue: any = EMPTY_OBJ\n    let prevEmittedValue: any\n\n    watchSyncEffect(() => {\n      const propValue = props[camelizedName]\n      if (hasChanged(localValue, propValue)) {\n        localValue = propValue\n        trigger()\n      }\n    })\n\n    return {\n      get() {\n        track()\n        return options.get ? options.get(localValue) : localValue\n      },\n\n      set(value) {\n        const emittedValue = options.set ? options.set(value) : value\n        if (\n          !hasChanged(emittedValue, localValue) &&\n          !(prevSetValue !== EMPTY_OBJ && hasChanged(value, prevSetValue))\n        ) {\n          return\n        }\n        const rawProps = i.vnode!.props\n        if (\n          !(\n            rawProps &&\n            // check if parent has passed v-model\n            (name in rawProps ||\n              camelizedName in rawProps ||\n              hyphenatedName in rawProps) &&\n            (`onUpdate:${name}` in rawProps ||\n              `onUpdate:${camelizedName}` in rawProps ||\n              `onUpdate:${hyphenatedName}` in rawProps)\n          )\n        ) {\n          // no v-model, local update\n          localValue = value\n          trigger()\n        }\n\n        i.emit(`update:${name}`, emittedValue)\n        // #10279: if the local value is converted via a setter but the value\n        // emitted to parent was the same, the parent will not trigger any\n        // updates and there will be no prop sync. However the local input state\n        // may be out of sync, so we need to force an update here.\n        if (\n          hasChanged(value, emittedValue) &&\n          hasChanged(value, prevSetValue) &&\n          !hasChanged(emittedValue, prevEmittedValue)\n        ) {\n          trigger()\n        }\n        prevSetValue = value\n        prevEmittedValue = emittedValue\n      },\n    }\n  })\n\n  // @ts-expect-error\n  res[Symbol.iterator] = () => {\n    let i = 0\n    return {\n      next() {\n        if (i < 2) {\n          return { value: i++ ? modifiers || EMPTY_OBJ : res, done: false }\n        } else {\n          return { done: true }\n        }\n      },\n    }\n  }\n\n  return res\n}\n\nexport const getModelModifiers = (\n  props: Record<string, any>,\n  modelName: string,\n): Record<string, boolean> | undefined => {\n  return modelName === 'modelValue' || modelName === 'model-value'\n    ? props.modelModifiers\n    : props[`${modelName}Modifiers`] ||\n        props[`${camelize(modelName)}Modifiers`] ||\n        props[`${hyphenate(modelName)}Modifiers`]\n}\n", "import {\n  EMPTY_OBJ,\n  type OverloadParameters,\n  type UnionToIntersection,\n  camelize,\n  extend,\n  hasOwn,\n  hyphenate,\n  isArray,\n  isFunction,\n  isObject,\n  isOn,\n  isString,\n  looseToNumber,\n  toHandlerKey,\n} from '@vue/shared'\nimport {\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type ConcreteComponent,\n  formatComponentName,\n} from './component'\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\nimport { warn } from './warning'\nimport { devtoolsComponentEmit } from './devtools'\nimport type { AppContext } from './apiCreateApp'\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\nimport {\n  compatModelEmit,\n  compatModelEventPrefix,\n} from './compat/componentVModel'\nimport type { ComponentTypeEmits } from './apiSetupHelpers'\nimport { getModelModifiers } from './helpers/useModel'\nimport type { ComponentPublicInstance } from './componentPublicInstance'\n\nexport type ObjectEmitsOptions = Record<\n  string,\n  ((...args: any[]) => any) | null\n>\n\nexport type EmitsOptions = ObjectEmitsOptions | string[]\n\nexport type EmitsToProps<T extends EmitsOptions | ComponentTypeEmits> =\n  T extends string[]\n    ? {\n        [K in `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\n      }\n    : T extends ObjectEmitsOptions\n      ? {\n          [K in string & keyof T as `on${Capitalize<K>}`]?: (\n            ...args: T[K] extends (...args: infer P) => any\n              ? P\n              : T[K] extends null\n                ? any[]\n                : never\n          ) => any\n        }\n      : {}\n\nexport type TypeEmitsToOptions<T extends ComponentTypeEmits> = {\n  [K in keyof T & string]: T[K] extends [...args: infer Args]\n    ? (...args: Args) => any\n    : () => any\n} & (T extends (...args: any[]) => any\n  ? ParametersToFns<OverloadParameters<T>>\n  : {})\n\ntype ParametersToFns<T extends any[]> = {\n  [K in T[0]]: IsStringLiteral<K> extends true\n    ? (\n        ...args: T extends [e: infer E, ...args: infer P]\n          ? K extends E\n            ? P\n            : never\n          : never\n      ) => any\n    : never\n}\n\ntype IsStringLiteral<T> = T extends string\n  ? string extends T\n    ? false\n    : true\n  : false\n\nexport type ShortEmitsToObject<E> =\n  E extends Record<string, any[]>\n    ? {\n        [K in keyof E]: (...args: E[K]) => any\n      }\n    : E\n\nexport type EmitFn<\n  Options = ObjectEmitsOptions,\n  Event extends keyof Options = keyof Options,\n> =\n  Options extends Array<infer V>\n    ? (event: V, ...args: any[]) => void\n    : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\n      ? (event: string, ...args: any[]) => void\n      : UnionToIntersection<\n          {\n            [key in Event]: Options[key] extends (...args: infer Args) => any\n              ? (event: key, ...args: Args) => void\n              : Options[key] extends any[]\n                ? (event: key, ...args: Options[key]) => void\n                : (event: key, ...args: any[]) => void\n          }[Event]\n        >\n\nexport function emit(\n  instance: ComponentInternalInstance,\n  event: string,\n  ...rawArgs: any[]\n): ComponentPublicInstance | null | undefined {\n  if (instance.isUnmounted) return\n  const props = instance.vnode.props || EMPTY_OBJ\n\n  if (__DEV__) {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions],\n    } = instance\n    if (emitsOptions) {\n      if (\n        !(event in emitsOptions) &&\n        !(\n          __COMPAT__ &&\n          (event.startsWith('hook:') ||\n            event.startsWith(compatModelEventPrefix))\n        )\n      ) {\n        if (!propsOptions || !(toHandlerKey(camelize(event)) in propsOptions)) {\n          warn(\n            `Component emitted event \"${event}\" but it is neither declared in ` +\n              `the emits option nor as an \"${toHandlerKey(camelize(event))}\" prop.`,\n          )\n        }\n      } else {\n        const validator = emitsOptions[event]\n        if (isFunction(validator)) {\n          const isValid = validator(...rawArgs)\n          if (!isValid) {\n            warn(\n              `Invalid event arguments: event validation failed for event \"${event}\".`,\n            )\n          }\n        }\n      }\n    }\n  }\n\n  let args = rawArgs\n  const isModelListener = event.startsWith('update:')\n\n  // for v-model update:xxx events, apply modifiers on args\n  const modifiers = isModelListener && getModelModifiers(props, event.slice(7))\n  if (modifiers) {\n    if (modifiers.trim) {\n      args = rawArgs.map(a => (isString(a) ? a.trim() : a))\n    }\n    if (modifiers.number) {\n      args = rawArgs.map(looseToNumber)\n    }\n  }\n\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args)\n  }\n\n  if (__DEV__) {\n    const lowerCaseEvent = event.toLowerCase()\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n      warn(\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\n          `${formatComponentName(\n            instance,\n            instance.type,\n          )} but the handler is registered for \"${event}\". ` +\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\n          `You should probably use \"${hyphenate(\n            event,\n          )}\" instead of \"${event}\".`,\n      )\n    }\n  }\n\n  let handlerName\n  let handler =\n    props[(handlerName = toHandlerKey(event))] ||\n    // also try camelCase event handler (#2249)\n    props[(handlerName = toHandlerKey(camelize(event)))]\n  // for v-model update:xxx events, also trigger kebab-case equivalent\n  // for props passed via kebab-case\n  if (!handler && isModelListener) {\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\n  }\n\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\n      args,\n    )\n  }\n\n  const onceHandler = props[handlerName + `Once`]\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {}\n    } else if (instance.emitted[handlerName]) {\n      return\n    }\n    instance.emitted[handlerName] = true\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\n      args,\n    )\n  }\n\n  if (__COMPAT__) {\n    compatModelEmit(instance, event, args)\n    return compatInstanceEmit(instance, event, args)\n  }\n}\n\nexport function normalizeEmitsOptions(\n  comp: ConcreteComponent,\n  appContext: AppContext,\n  asMixin = false,\n): ObjectEmitsOptions | null {\n  const cache = appContext.emitsCache\n  const cached = cache.get(comp)\n  if (cached !== undefined) {\n    return cached\n  }\n\n  const raw = comp.emits\n  let normalized: ObjectEmitsOptions = {}\n\n  // apply mixin/extends props\n  let hasExtends = false\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = (raw: ComponentOptions) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\n      if (normalizedFromExtend) {\n        hasExtends = true\n        extend(normalized, normalizedFromExtend)\n      }\n    }\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits)\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends)\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits)\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null)\n    }\n    return null\n  }\n\n  if (isArray(raw)) {\n    raw.forEach(key => (normalized[key] = null))\n  } else {\n    extend(normalized, raw)\n  }\n\n  if (isObject(comp)) {\n    cache.set(comp, normalized)\n  }\n  return normalized\n}\n\n// Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\nexport function isEmitListener(\n  options: ObjectEmitsOptions | null,\n  key: string,\n): boolean {\n  if (!options || !isOn(key)) {\n    return false\n  }\n\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\n    return true\n  }\n\n  key = key.slice(2).replace(/Once$/, '')\n  return (\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\n    hasOwn(options, hyphenate(key)) ||\n    hasOwn(options, key)\n  )\n}\n", "import {\n  type ComponentInternalInstance,\n  type Data,\n  type FunctionalComponent,\n  getComponentName,\n} from './component'\nimport {\n  Comment,\n  type VNode,\n  type VNodeArrayChildren,\n  blockStack,\n  cloneVNode,\n  createVNode,\n  isVNode,\n  normalizeVNode,\n} from './vnode'\nimport { ErrorCodes, handleError } from './errorHandling'\nimport { PatchFlags, ShapeFlags, isModelListener, isOn } from '@vue/shared'\nimport { warn } from './warning'\nimport { isHmrUpdating } from './hmr'\nimport type { NormalizedProps } from './componentProps'\nimport { isEmitListener } from './componentEmits'\nimport { setCurrentRenderingInstance } from './componentRenderContext'\nimport {\n  DeprecationTypes,\n  isCompatEnabled,\n  warnDeprecation,\n} from './compat/compatConfig'\nimport { shallowReadonly } from '@vue/reactivity'\nimport { setTransitionHooks } from './components/BaseTransition'\n\n/**\n * dev only flag to track whether $attrs was used during render.\n * If $attrs was used during render then the warning for failed attrs\n * fallthrough can be suppressed.\n */\nlet accessedAttrs: boolean = false\n\nexport function markAttrsAccessed(): void {\n  accessedAttrs = true\n}\n\ntype SetRootFn = ((root: VNode) => void) | undefined\n\nexport function renderComponentRoot(\n  instance: ComponentInternalInstance,\n): VNode {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    props,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs,\n  } = instance\n  const prev = setCurrentRenderingInstance(instance)\n\n  let result\n  let fallthroughAttrs\n  if (__DEV__) {\n    accessedAttrs = false\n  }\n\n  try {\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n      // withProxy is a proxy with a different `has` trap only for\n      // runtime-compiled render functions using `with` block.\n      const proxyToUse = withProxy || proxy\n      // 'this' isn't available in production builds with `<script setup>`,\n      // so warn if it's used in dev.\n      const thisProxy =\n        __DEV__ && setupState.__isScriptSetup\n          ? new Proxy(proxyToUse!, {\n              get(target, key, receiver) {\n                warn(\n                  `Property '${String(\n                    key,\n                  )}' was accessed via 'this'. Avoid using 'this' in templates.`,\n                )\n                return Reflect.get(target, key, receiver)\n              },\n            })\n          : proxyToUse\n      result = normalizeVNode(\n        render!.call(\n          thisProxy,\n          proxyToUse!,\n          renderCache,\n          __DEV__ ? shallowReadonly(props) : props,\n          setupState,\n          data,\n          ctx,\n        ),\n      )\n      fallthroughAttrs = attrs\n    } else {\n      // functional\n      const render = Component as FunctionalComponent\n      // in dev, mark attrs accessed if optional props (attrs === props)\n      if (__DEV__ && attrs === props) {\n        markAttrsAccessed()\n      }\n      result = normalizeVNode(\n        render.length > 1\n          ? render(\n              __DEV__ ? shallowReadonly(props) : props,\n              __DEV__\n                ? {\n                    get attrs() {\n                      markAttrsAccessed()\n                      return shallowReadonly(attrs)\n                    },\n                    slots,\n                    emit,\n                  }\n                : { attrs, slots, emit },\n            )\n          : render(\n              __DEV__ ? shallowReadonly(props) : props,\n              null as any /* we know it doesn't need it */,\n            ),\n      )\n      fallthroughAttrs = Component.props\n        ? attrs\n        : getFunctionalFallthrough(attrs)\n    }\n  } catch (err) {\n    blockStack.length = 0\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\n    result = createVNode(Comment)\n  }\n\n  // attr merging\n  // in dev mode, comments are preserved, and it's possible for a template\n  // to have comments along side the root element which makes it a fragment\n  let root = result\n  let setRoot: SetRootFn = undefined\n  if (\n    __DEV__ &&\n    result.patchFlag > 0 &&\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\n  ) {\n    ;[root, setRoot] = getChildRoot(result)\n  }\n\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs)\n    const { shapeFlag } = root\n    if (keys.length) {\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\n          // prop, it indicates this component expects to handle v-model and\n          // it should not fallthrough.\n          // related: #1543, #1643, #1989\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions,\n          )\n        }\n        root = cloneVNode(root, fallthroughAttrs, false, true)\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs)\n        const eventAttrs: string[] = []\n        const extraAttrs: string[] = []\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i]\n          if (isOn(key)) {\n            // ignore v-model handlers when they fail to fallthrough\n            if (!isModelListener(key)) {\n              // remove `on`, lowercase first letter to reflect event casing\n              // accurately\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\n            }\n          } else {\n            extraAttrs.push(key)\n          }\n        }\n        if (extraAttrs.length) {\n          warn(\n            `Extraneous non-props attributes (` +\n              `${extraAttrs.join(', ')}) ` +\n              `were passed to component but could not be automatically inherited ` +\n              `because component renders fragment or text or teleport root nodes.`,\n          )\n        }\n        if (eventAttrs.length) {\n          warn(\n            `Extraneous non-emits event listeners (` +\n              `${eventAttrs.join(', ')}) ` +\n              `were passed to component but could not be automatically inherited ` +\n              `because component renders fragment or text root nodes. ` +\n              `If the listener is intended to be a component custom event listener only, ` +\n              `declare it using the \"emits\" option.`,\n          )\n        }\n      }\n    }\n  }\n\n  if (\n    __COMPAT__ &&\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\n  ) {\n    const { class: cls, style } = vnode.props || {}\n    if (cls || style) {\n      if (__DEV__ && inheritAttrs === false) {\n        warnDeprecation(\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\n          instance,\n          getComponentName(instance.type),\n        )\n      }\n      root = cloneVNode(\n        root,\n        {\n          class: cls,\n          style: style,\n        },\n        false,\n        true,\n      )\n    }\n  }\n\n  // inherit directives\n  if (vnode.dirs) {\n    if (__DEV__ && !isElementRoot(root)) {\n      warn(\n        `Runtime directive used on component with non-element root node. ` +\n          `The directives will not function as intended.`,\n      )\n    }\n    // clone before mutating since the root may be a hoisted vnode\n    root = cloneVNode(root, null, false, true)\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\n  }\n  // inherit transition data\n  if (vnode.transition) {\n    if (__DEV__ && !isElementRoot(root)) {\n      warn(\n        `Component inside <Transition> renders non-element root node ` +\n          `that cannot be animated.`,\n      )\n    }\n    setTransitionHooks(root, vnode.transition)\n  }\n\n  if (__DEV__ && setRoot) {\n    setRoot(root)\n  } else {\n    result = root\n  }\n\n  setCurrentRenderingInstance(prev)\n  return result\n}\n\n/**\n * dev only\n * In dev mode, template root level comments are rendered, which turns the\n * template into a fragment root, but we need to locate the single element\n * root for attrs and scope id processing.\n */\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\n  const rawChildren = vnode.children as VNodeArrayChildren\n  const dynamicChildren = vnode.dynamicChildren\n  const childRoot = filterSingleRoot(rawChildren, false)\n  if (!childRoot) {\n    return [vnode, undefined]\n  } else if (\n    __DEV__ &&\n    childRoot.patchFlag > 0 &&\n    childRoot.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\n  ) {\n    return getChildRoot(childRoot)\n  }\n\n  const index = rawChildren.indexOf(childRoot)\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\n    rawChildren[index] = updatedRoot\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\n      }\n    }\n  }\n  return [normalizeVNode(childRoot), setRoot]\n}\n\nexport function filterSingleRoot(\n  children: VNodeArrayChildren,\n  recurse = true,\n): VNode | undefined {\n  let singleRoot\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    if (isVNode(child)) {\n      // ignore user comment\n      if (child.type !== Comment || child.children === 'v-if') {\n        if (singleRoot) {\n          // has more than 1 non-comment child, return now\n          return\n        } else {\n          singleRoot = child\n          if (\n            __DEV__ &&\n            recurse &&\n            singleRoot.patchFlag > 0 &&\n            singleRoot.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\n          ) {\n            return filterSingleRoot(singleRoot.children as VNodeArrayChildren)\n          }\n        }\n      }\n    } else {\n      return\n    }\n  }\n  return singleRoot\n}\n\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\n  let res: Data | undefined\n  for (const key in attrs) {\n    if (key === 'class' || key === 'style' || isOn(key)) {\n      ;(res || (res = {}))[key] = attrs[key]\n    }\n  }\n  return res\n}\n\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\n  const res: Data = {}\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key]\n    }\n  }\n  return res\n}\n\nconst isElementRoot = (vnode: VNode) => {\n  return (\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\n    vnode.type === Comment // potential v-if branch switch\n  )\n}\n\nexport function shouldUpdateComponent(\n  prevVNode: VNode,\n  nextVNode: VNode,\n  optimized?: boolean,\n): boolean {\n  const { props: prevProps, children: prevChildren, component } = prevVNode\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\n  const emits = component!.emitsOptions\n\n  // Parent component's render function was hot-updated. Since this may have\n  // caused the child component's slots content to have changed, we need to\n  // force the child to update as well.\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\n    return true\n  }\n\n  // force child update for runtime directive or transition on component vnode.\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true\n  }\n\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\n      // slot content that references values that might have changed,\n      // e.g. in a v-for\n      return true\n    }\n    if (patchFlag & PatchFlags.FULL_PROPS) {\n      if (!prevProps) {\n        return !!nextProps\n      }\n      // presence of this flag indicates props are always non-null\n      return hasPropsChanged(prevProps, nextProps!, emits)\n    } else if (patchFlag & PatchFlags.PROPS) {\n      const dynamicProps = nextVNode.dynamicProps!\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i]\n        if (\n          nextProps![key] !== prevProps![key] &&\n          !isEmitListener(emits, key)\n        ) {\n          return true\n        }\n      }\n    }\n  } else {\n    // this path is only taken by manually written render functions\n    // so presence of any children leads to a forced update\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !(nextChildren as any).$stable) {\n        return true\n      }\n    }\n    if (prevProps === nextProps) {\n      return false\n    }\n    if (!prevProps) {\n      return !!nextProps\n    }\n    if (!nextProps) {\n      return true\n    }\n    return hasPropsChanged(prevProps, nextProps, emits)\n  }\n\n  return false\n}\n\nfunction hasPropsChanged(\n  prevProps: Data,\n  nextProps: Data,\n  emitsOptions: ComponentInternalInstance['emitsOptions'],\n): boolean {\n  const nextKeys = Object.keys(nextProps)\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i]\n    if (\n      nextProps[key] !== prevProps[key] &&\n      !isEmitListener(emitsOptions, key)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function updateHOCHostEl(\n  { vnode, parent }: ComponentInternalInstance,\n  el: typeof vnode.el, // HostNode\n): void {\n  while (parent) {\n    const root = parent.subTree\n    if (root.suspense && root.suspense.activeBranch === vnode) {\n      root.el = vnode.el\n    }\n    if (root === vnode) {\n      ;(vnode = parent.vnode).el = el\n      parent = parent.parent\n    } else {\n      break\n    }\n  }\n}\n", "/**\n * Used during vnode props/slots normalization to check if the vnode props/slots\n * are the internal attrs / slots object of a component via\n * `Object.getPrototypeOf`. This is more performant than defining a\n * non-enumerable property. (one of the optimizations done for ssr-benchmark)\n */\nconst internalObjectProto = {}\n\nexport const createInternalObject = (): any =>\n  Object.create(internalObjectProto)\n\nexport const isInternalObject = (obj: object): boolean =>\n  Object.getPrototypeOf(obj) === internalObjectProto\n", "import {\n  TriggerOpTypes,\n  shallowReactive,\n  shallowReadonly,\n  toRaw,\n  trigger,\n} from '@vue/reactivity'\nimport {\n  EMPTY_ARR,\n  EMPTY_OBJ,\n  type IfAny,\n  PatchFlags,\n  camelize,\n  capitalize,\n  extend,\n  hasOwn,\n  hyphenate,\n  isArray,\n  isFunction,\n  isObject,\n  isOn,\n  isReservedProp,\n  isString,\n  makeMap,\n  toRawType,\n} from '@vue/shared'\nimport { warn } from './warning'\nimport {\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type ConcreteComponent,\n  type Data,\n  setCurrentInstance,\n} from './component'\nimport { isEmitListener } from './componentEmits'\nimport type { AppContext } from './apiCreateApp'\nimport { createPropsDefaultThis } from './compat/props'\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\nimport { DeprecationTypes } from './compat/compatConfig'\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\nimport { createInternalObject } from './internalObject'\n\nexport type ComponentPropsOptions<P = Data> =\n  | ComponentObjectPropsOptions<P>\n  | string[]\n\nexport type ComponentObjectPropsOptions<P = Data> = {\n  [K in keyof P]: Prop<P[K]> | null\n}\n\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\n\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\n\nexport interface PropOptions<T = any, D = T> {\n  type?: PropType<T> | true | null\n  required?: boolean\n  default?: D | DefaultFactory<D> | null | undefined | object\n  validator?(value: unknown, props: Data): boolean\n  /**\n   * @internal\n   */\n  skipCheck?: boolean\n  /**\n   * @internal\n   */\n  skipFactory?: boolean\n}\n\nexport type PropType<T> = PropConstructor<T> | (PropConstructor<T> | null)[]\n\ntype PropConstructor<T = any> =\n  | { new (...args: any[]): T & {} }\n  | { (): T }\n  | PropMethod<T>\n\ntype PropMethod<T, TConstructor = any> = [T] extends [\n  ((...args: any) => any) | undefined,\n] // if is function with args, allowing non-required functions\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\n  : never\n\ntype RequiredKeys<T> = {\n  [K in keyof T]: T[K] extends\n    | { required: true }\n    | { default: any }\n    // don't mark Boolean props as undefined\n    | BooleanConstructor\n    | { type: BooleanConstructor }\n    ? T[K] extends { default: undefined | (() => undefined) }\n      ? never\n      : K\n    : never\n}[keyof T]\n\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\n\ntype DefaultKeys<T> = {\n  [K in keyof T]: T[K] extends\n    | { default: any }\n    // Boolean implicitly defaults to false\n    | BooleanConstructor\n    | { type: BooleanConstructor }\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\n      ? never\n      : K\n    : never\n}[keyof T]\n\ntype InferPropType<T, NullAsAny = true> = [T] extends [null]\n  ? NullAsAny extends true\n    ? any\n    : null\n  : [T] extends [{ type: null | true }]\n    ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\n    : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\n      ? Record<string, any>\n      : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\n        ? boolean\n        : [T] extends [DateConstructor | { type: DateConstructor }]\n          ? Date\n          : [T] extends [(infer U)[] | { type: (infer U)[] }]\n            ? U extends DateConstructor\n              ? Date | InferPropType<U, false>\n              : InferPropType<U, false>\n            : [T] extends [Prop<infer V, infer D>]\n              ? unknown extends V\n                ? keyof V extends never\n                  ? IfAny<V, V, D>\n                  : V\n                : V\n              : T\n\n/**\n * Extract prop types from a runtime props options object.\n * The extracted types are **internal** - i.e. the resolved props received by\n * the component.\n * - Boolean props are always present\n * - Props with default values are always present\n *\n * To extract accepted props from the parent, use {@link ExtractPublicPropTypes}.\n */\nexport type ExtractPropTypes<O> = {\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to\n  // support IDE features\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\n} & {\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to\n  // support IDE features\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\n}\n\ntype PublicRequiredKeys<T> = {\n  [K in keyof T]: T[K] extends { required: true } ? K : never\n}[keyof T]\n\ntype PublicOptionalKeys<T> = Exclude<keyof T, PublicRequiredKeys<T>>\n\n/**\n * Extract prop types from a runtime props options object.\n * The extracted types are **public** - i.e. the expected props that can be\n * passed to component.\n */\nexport type ExtractPublicPropTypes<O> = {\n  [K in keyof Pick<O, PublicRequiredKeys<O>>]: InferPropType<O[K]>\n} & {\n  [K in keyof Pick<O, PublicOptionalKeys<O>>]?: InferPropType<O[K]>\n}\n\nenum BooleanFlags {\n  shouldCast,\n  shouldCastTrue,\n}\n\n// extract props which defined with default from prop options\nexport type ExtractDefaultPropTypes<O> = O extends object\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\n  : {}\n\ntype NormalizedProp = PropOptions & {\n  [BooleanFlags.shouldCast]?: boolean\n  [BooleanFlags.shouldCastTrue]?: boolean\n}\n\n// normalized value is a tuple of the actual normalized options\n// and an array of prop keys that need value casting (booleans and defaults)\nexport type NormalizedProps = Record<string, NormalizedProp>\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\n\nexport function initProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  isStateful: number, // result of bitwise flag comparison\n  isSSR = false,\n): void {\n  const props: Data = {}\n  const attrs: Data = createInternalObject()\n\n  instance.propsDefaults = Object.create(null)\n\n  setFullProps(instance, rawProps, props, attrs)\n\n  // ensure all declared prop keys are present\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = undefined\n    }\n  }\n\n  // validation\n  if (__DEV__) {\n    validateProps(rawProps || {}, props, instance)\n  }\n\n  if (isStateful) {\n    // stateful\n    instance.props = isSSR ? props : shallowReactive(props)\n  } else {\n    if (!instance.type.props) {\n      // functional w/ optional props, props === attrs\n      instance.props = attrs\n    } else {\n      // functional w/ declared props\n      instance.props = props\n    }\n  }\n  instance.attrs = attrs\n}\n\nfunction isInHmrContext(instance: ComponentInternalInstance | null) {\n  while (instance) {\n    if (instance.type.__hmrId) return true\n    instance = instance.parent\n  }\n}\n\nexport function updateProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  rawPrevProps: Data | null,\n  optimized: boolean,\n): void {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag },\n  } = instance\n  const rawCurrentProps = toRaw(props)\n  const [options] = instance.propsOptions\n  let hasAttrsChanged = false\n\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !(__DEV__ && isInHmrContext(instance)) &&\n    (optimized || patchFlag > 0) &&\n    !(patchFlag & PatchFlags.FULL_PROPS)\n  ) {\n    if (patchFlag & PatchFlags.PROPS) {\n      // Compiler-generated props & no keys change, just set the updated\n      // the props.\n      const propsToUpdate = instance.vnode.dynamicProps!\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i]\n        // skip if the prop key is a declared emit event listener\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue\n        }\n        // PROPS flag guarantees rawProps to be non-null\n        const value = rawProps![key]\n        if (options) {\n          // attr / props separation was done on init and will be consistent\n          // in this code path, so just check if attrs have it.\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value\n              hasAttrsChanged = true\n            }\n          } else {\n            const camelizedKey = camelize(key)\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false /* isAbsent */,\n            )\n          }\n        } else {\n          if (__COMPAT__) {\n            if (isOn(key) && key.endsWith('Native')) {\n              key = key.slice(0, -6) // remove Native postfix\n            } else if (shouldSkipAttr(key, instance)) {\n              continue\n            }\n          }\n          if (value !== attrs[key]) {\n            attrs[key] = value\n            hasAttrsChanged = true\n          }\n        }\n      }\n    }\n  } else {\n    // full props update.\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true\n    }\n    // in case of dynamic props, check if we need to delete keys from\n    // the props object\n    let kebabKey: string\n    for (const key in rawCurrentProps) {\n      if (\n        !rawProps ||\n        // for camelCase\n        (!hasOwn(rawProps, key) &&\n          // it's possible the original props was passed in as kebab-case\n          // and converted to camelCase (#955)\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\n      ) {\n        if (options) {\n          if (\n            rawPrevProps &&\n            // for camelCase\n            (rawPrevProps[key] !== undefined ||\n              // for kebab-case\n              rawPrevProps[kebabKey!] !== undefined)\n          ) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              undefined,\n              instance,\n              true /* isAbsent */,\n            )\n          }\n        } else {\n          delete props[key]\n        }\n      }\n    }\n    // in the case of functional component w/o props declaration, props and\n    // attrs point to the same object so it should already have been updated.\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (\n          !rawProps ||\n          (!hasOwn(rawProps, key) &&\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\n        ) {\n          delete attrs[key]\n          hasAttrsChanged = true\n        }\n      }\n    }\n  }\n\n  // trigger updates for $attrs in case it's used in component slots\n  if (hasAttrsChanged) {\n    trigger(instance.attrs, TriggerOpTypes.SET, '')\n  }\n\n  if (__DEV__) {\n    validateProps(rawProps || {}, props, instance)\n  }\n}\n\nfunction setFullProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  props: Data,\n  attrs: Data,\n) {\n  const [options, needCastKeys] = instance.propsOptions\n  let hasAttrsChanged = false\n  let rawCastValues: Data | undefined\n  if (rawProps) {\n    for (let key in rawProps) {\n      // key, ref are reserved and never passed down\n      if (isReservedProp(key)) {\n        continue\n      }\n\n      if (__COMPAT__) {\n        if (key.startsWith('onHook:')) {\n          softAssertCompatEnabled(\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\n            instance,\n            key.slice(2).toLowerCase(),\n          )\n        }\n        if (key === 'inline-template') {\n          continue\n        }\n      }\n\n      const value = rawProps[key]\n      // prop option names are camelized during normalization, so to support\n      // kebab -> camel conversion here we need to camelize the key.\n      let camelKey\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value\n        } else {\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        // Any non-declared (either as a prop or an emitted event) props are put\n        // into a separate `attrs` object for spreading. Make sure to preserve\n        // original key casing\n        if (__COMPAT__) {\n          if (isOn(key) && key.endsWith('Native')) {\n            key = key.slice(0, -6) // remove Native postfix\n          } else if (shouldSkipAttr(key, instance)) {\n            continue\n          }\n        }\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value\n          hasAttrsChanged = true\n        }\n      }\n    }\n  }\n\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props)\n    const castValues = rawCastValues || EMPTY_OBJ\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i]\n      props[key] = resolvePropValue(\n        options!,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key),\n      )\n    }\n  }\n\n  return hasAttrsChanged\n}\n\nfunction resolvePropValue(\n  options: NormalizedProps,\n  props: Data,\n  key: string,\n  value: unknown,\n  instance: ComponentInternalInstance,\n  isAbsent: boolean,\n) {\n  const opt = options[key]\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, 'default')\n    // default values\n    if (hasDefault && value === undefined) {\n      const defaultValue = opt.default\n      if (\n        opt.type !== Function &&\n        !opt.skipFactory &&\n        isFunction(defaultValue)\n      ) {\n        const { propsDefaults } = instance\n        if (key in propsDefaults) {\n          value = propsDefaults[key]\n        } else {\n          const reset = setCurrentInstance(instance)\n          value = propsDefaults[key] = defaultValue.call(\n            __COMPAT__ &&\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\n              ? createPropsDefaultThis(instance, props, key)\n              : null,\n            props,\n          )\n          reset()\n        }\n      } else {\n        value = defaultValue\n      }\n      // #9006 reflect default value on custom element\n      if (instance.ce) {\n        instance.ce._setProp(key, value)\n      }\n    }\n    // boolean casting\n    if (opt[BooleanFlags.shouldCast]) {\n      if (isAbsent && !hasDefault) {\n        value = false\n      } else if (\n        opt[BooleanFlags.shouldCastTrue] &&\n        (value === '' || value === hyphenate(key))\n      ) {\n        value = true\n      }\n    }\n  }\n  return value\n}\n\nconst mixinPropsCache = new WeakMap<ConcreteComponent, NormalizedPropsOptions>()\n\nexport function normalizePropsOptions(\n  comp: ConcreteComponent,\n  appContext: AppContext,\n  asMixin = false,\n): NormalizedPropsOptions {\n  const cache =\n    __FEATURE_OPTIONS_API__ && asMixin ? mixinPropsCache : appContext.propsCache\n  const cached = cache.get(comp)\n  if (cached) {\n    return cached\n  }\n\n  const raw = comp.props\n  const normalized: NormalizedPropsOptions[0] = {}\n  const needCastKeys: NormalizedPropsOptions[1] = []\n\n  // apply mixin/extends props\n  let hasExtends = false\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = (raw: ComponentOptions) => {\n      if (__COMPAT__ && isFunction(raw)) {\n        raw = raw.options\n      }\n      hasExtends = true\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\n      extend(normalized, props)\n      if (keys) needCastKeys.push(...keys)\n    }\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps)\n    }\n    if (comp.extends) {\n      extendProps(comp.extends)\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps)\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR as any)\n    }\n    return EMPTY_ARR as any\n  }\n\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (__DEV__ && !isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i])\n      }\n      const normalizedKey = camelize(raw[i])\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ\n      }\n    }\n  } else if (raw) {\n    if (__DEV__ && !isObject(raw)) {\n      warn(`invalid props options`, raw)\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key)\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key]\n        const prop: NormalizedProp = (normalized[normalizedKey] =\n          isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt))\n        const propType = prop.type\n        let shouldCast = false\n        let shouldCastTrue = true\n\n        if (isArray(propType)) {\n          for (let index = 0; index < propType.length; ++index) {\n            const type = propType[index]\n            const typeName = isFunction(type) && type.name\n\n            if (typeName === 'Boolean') {\n              shouldCast = true\n              break\n            } else if (typeName === 'String') {\n              // If we find `String` before `Boolean`, e.g. `[String, Boolean]`,\n              // we need to handle the casting slightly differently. Props\n              // passed as `<Comp checked=\"\">` or `<Comp checked=\"checked\">`\n              // will either be treated as strings or converted to a boolean\n              // `true`, depending on the order of the types.\n              shouldCastTrue = false\n            }\n          }\n        } else {\n          shouldCast = isFunction(propType) && propType.name === 'Boolean'\n        }\n\n        prop[BooleanFlags.shouldCast] = shouldCast\n        prop[BooleanFlags.shouldCastTrue] = shouldCastTrue\n        // if the prop needs boolean casting or default value\n        if (shouldCast || hasOwn(prop, 'default')) {\n          needCastKeys.push(normalizedKey)\n        }\n      }\n    }\n  }\n\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\n  if (isObject(comp)) {\n    cache.set(comp, res)\n  }\n  return res\n}\n\nfunction validatePropName(key: string) {\n  if (key[0] !== '$' && !isReservedProp(key)) {\n    return true\n  } else if (__DEV__) {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\n  }\n  return false\n}\n\n// dev only\n// use function string name to check type constructors\n// so that it works across vms / iframes.\nfunction getType(ctor: Prop<any> | null): string {\n  // Early return for null to avoid unnecessary computations\n  if (ctor === null) {\n    return 'null'\n  }\n\n  // Avoid using regex for common cases by checking the type directly\n  if (typeof ctor === 'function') {\n    // Using name property to avoid converting function to string\n    return ctor.name || ''\n  } else if (typeof ctor === 'object') {\n    // Attempting to directly access constructor name if possible\n    const name = ctor.constructor && ctor.constructor.name\n    return name || ''\n  }\n\n  // Fallback for other types (though they're less likely to have meaningful names here)\n  return ''\n}\n\n/**\n * dev only\n */\nfunction validateProps(\n  rawProps: Data,\n  props: Data,\n  instance: ComponentInternalInstance,\n) {\n  const resolvedValues = toRaw(props)\n  const options = instance.propsOptions[0]\n  const camelizePropsKey = Object.keys(rawProps).map(key => camelize(key))\n  for (const key in options) {\n    let opt = options[key]\n    if (opt == null) continue\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      __DEV__ ? shallowReadonly(resolvedValues) : resolvedValues,\n      !camelizePropsKey.includes(key),\n    )\n  }\n}\n\n/**\n * dev only\n */\nfunction validateProp(\n  name: string,\n  value: unknown,\n  prop: PropOptions,\n  props: Data,\n  isAbsent: boolean,\n) {\n  const { type, required, validator, skipCheck } = prop\n  // required!\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"')\n    return\n  }\n  // missing but optional\n  if (value == null && !required) {\n    return\n  }\n  // type check\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false\n    const types = isArray(type) ? type : [type]\n    const expectedTypes = []\n    // value is valid as long as one of the specified types match\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i])\n      expectedTypes.push(expectedType || '')\n      isValid = valid\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\n      return\n    }\n  }\n  // custom validator\n  if (validator && !validator(value, props)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\n  }\n}\n\nconst isSimpleType = /*@__PURE__*/ makeMap(\n  'String,Number,Boolean,Function,Symbol,BigInt',\n)\n\ntype AssertionResult = {\n  valid: boolean\n  expectedType: string\n}\n\n/**\n * dev only\n */\nfunction assertType(\n  value: unknown,\n  type: PropConstructor | null,\n): AssertionResult {\n  let valid\n  const expectedType = getType(type)\n  if (expectedType === 'null') {\n    valid = value === null\n  } else if (isSimpleType(expectedType)) {\n    const t = typeof value\n    valid = t === expectedType.toLowerCase()\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof (type as PropConstructor)\n    }\n  } else if (expectedType === 'Object') {\n    valid = isObject(value)\n  } else if (expectedType === 'Array') {\n    valid = isArray(value)\n  } else {\n    valid = value instanceof (type as PropConstructor)\n  }\n  return {\n    valid,\n    expectedType,\n  }\n}\n\n/**\n * dev only\n */\nfunction getInvalidTypeMessage(\n  name: string,\n  value: unknown,\n  expectedTypes: string[],\n): string {\n  if (expectedTypes.length === 0) {\n    return (\n      `Prop type [] for prop \"${name}\" won't match anything.` +\n      ` Did you mean to use type Array instead?`\n    )\n  }\n  let message =\n    `Invalid prop: type check failed for prop \"${name}\".` +\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\n  const expectedType = expectedTypes[0]\n  const receivedType = toRawType(value)\n  const expectedValue = styleValue(value, expectedType)\n  const receivedValue = styleValue(value, receivedType)\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += ` with value ${expectedValue}`\n  }\n  message += `, got ${receivedType} `\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`\n  }\n  return message\n}\n\n/**\n * dev only\n */\nfunction styleValue(value: unknown, type: string): string {\n  if (type === 'String') {\n    return `\"${value}\"`\n  } else if (type === 'Number') {\n    return `${Number(value)}`\n  } else {\n    return `${value}`\n  }\n}\n\n/**\n * dev only\n */\nfunction isExplicable(type: string): boolean {\n  const explicitTypes = ['string', 'number', 'boolean']\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\n}\n\n/**\n * dev only\n */\nfunction isBoolean(...args: string[]): boolean {\n  return args.some(elem => elem.toLowerCase() === 'boolean')\n}\n", "import { type ComponentInternalInstance, currentInstance } from './component'\nimport {\n  type VNode,\n  type VNodeChild,\n  type VNodeNormalizedChildren,\n  normalizeVNode,\n} from './vnode'\nimport {\n  EMPTY_OBJ,\n  type IfAny,\n  type Prettify,\n  ShapeFlags,\n  SlotFlags,\n  def,\n  isArray,\n  isFunction,\n} from '@vue/shared'\nimport { warn } from './warning'\nimport { isKeepAlive } from './components/KeepAlive'\nimport { type ContextualRenderFn, withCtx } from './componentRenderContext'\nimport { isHmrUpdating } from './hmr'\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\nimport { TriggerOpTypes, trigger } from '@vue/reactivity'\nimport { createInternalObject } from './internalObject'\n\nexport type Slot<T extends any = any> = (\n  ...args: IfAny<T, any[], [T] | (T extends undefined ? [] : never)>\n) => VNode[]\n\nexport type InternalSlots = {\n  [name: string]: Slot | undefined\n}\n\nexport type Slots = Readonly<InternalSlots>\n\ndeclare const SlotSymbol: unique symbol\nexport type SlotsType<T extends Record<string, any> = Record<string, any>> = {\n  [SlotSymbol]?: T\n}\n\nexport type StrictUnwrapSlotsType<\n  S extends SlotsType,\n  T = NonNullable<S[typeof SlotSymbol]>,\n> = [keyof S] extends [never] ? Slots : Readonly<T> & T\n\nexport type UnwrapSlotsType<\n  S extends SlotsType,\n  T = NonNullable<S[typeof SlotSymbol]>,\n> = [keyof S] extends [never]\n  ? Slots\n  : Readonly<\n      Prettify<{\n        [K in keyof T]: NonNullable<T[K]> extends (...args: any[]) => any\n          ? T[K]\n          : Slot<T[K]>\n      }>\n    >\n\nexport type RawSlots = {\n  [name: string]: unknown\n  // manual render fn hint to skip forced children updates\n  $stable?: boolean\n  /**\n   * for tracking slot owner instance. This is attached during\n   * normalizeChildren when the component vnode is created.\n   * @internal\n   */\n  _ctx?: ComponentInternalInstance | null\n  /**\n   * indicates compiler generated slots\n   * we use a reserved property instead of a vnode patchFlag because the slots\n   * object may be directly passed down to a child component in a manual\n   * render function, and the optimization hint need to be on the slot object\n   * itself to be preserved.\n   * @internal\n   */\n  _?: SlotFlags\n}\n\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\n\nconst normalizeSlotValue = (value: unknown): VNode[] =>\n  isArray(value)\n    ? value.map(normalizeVNode)\n    : [normalizeVNode(value as VNodeChild)]\n\nconst normalizeSlot = (\n  key: string,\n  rawSlot: Function,\n  ctx: ComponentInternalInstance | null | undefined,\n): Slot => {\n  if ((rawSlot as any)._n) {\n    // already normalized - #5353\n    return rawSlot as Slot\n  }\n  const normalized = withCtx((...args: any[]) => {\n    if (\n      __DEV__ &&\n      currentInstance &&\n      (!ctx || ctx.root === currentInstance.root)\n    ) {\n      warn(\n        `Slot \"${key}\" invoked outside of the render function: ` +\n          `this will not track dependencies used in the slot. ` +\n          `Invoke the slot function inside the render function instead.`,\n      )\n    }\n    return normalizeSlotValue(rawSlot(...args))\n  }, ctx) as Slot\n  // NOT a compiled slot\n  ;(normalized as ContextualRenderFn)._c = false\n  return normalized\n}\n\nconst normalizeObjectSlots = (\n  rawSlots: RawSlots,\n  slots: InternalSlots,\n  instance: ComponentInternalInstance,\n) => {\n  const ctx = rawSlots._ctx\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue\n    const value = rawSlots[key]\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx)\n    } else if (value != null) {\n      if (\n        __DEV__ &&\n        !(\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\n        )\n      ) {\n        warn(\n          `Non-function value encountered for slot \"${key}\". ` +\n            `Prefer function slots for better performance.`,\n        )\n      }\n      const normalized = normalizeSlotValue(value)\n      slots[key] = () => normalized\n    }\n  }\n}\n\nconst normalizeVNodeSlots = (\n  instance: ComponentInternalInstance,\n  children: VNodeNormalizedChildren,\n) => {\n  if (\n    __DEV__ &&\n    !isKeepAlive(instance.vnode) &&\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\n  ) {\n    warn(\n      `Non-function value encountered for default slot. ` +\n        `Prefer function slots for better performance.`,\n    )\n  }\n  const normalized = normalizeSlotValue(children)\n  instance.slots.default = () => normalized\n}\n\nconst assignSlots = (\n  slots: InternalSlots,\n  children: Slots,\n  optimized: boolean,\n) => {\n  for (const key in children) {\n    // #2893\n    // when rendering the optimized slots by manually written render function,\n    // do not copy the `slots._` compiler flag so that `renderSlot` creates\n    // slot Fragment with BAIL patchFlag to force full updates\n    if (optimized || key !== '_') {\n      slots[key] = children[key]\n    }\n  }\n}\n\nexport const initSlots = (\n  instance: ComponentInternalInstance,\n  children: VNodeNormalizedChildren,\n  optimized: boolean,\n): void => {\n  const slots = (instance.slots = createInternalObject())\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n    const type = (children as RawSlots)._\n    if (type) {\n      assignSlots(slots, children as Slots, optimized)\n      // make compiler marker non-enumerable\n      if (optimized) {\n        def(slots, '_', type, true)\n      }\n    } else {\n      normalizeObjectSlots(children as RawSlots, slots, instance)\n    }\n  } else if (children) {\n    normalizeVNodeSlots(instance, children)\n  }\n}\n\nexport const updateSlots = (\n  instance: ComponentInternalInstance,\n  children: VNodeNormalizedChildren,\n  optimized: boolean,\n): void => {\n  const { vnode, slots } = instance\n  let needDeletionCheck = true\n  let deletionComparisonTarget = EMPTY_OBJ\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n    const type = (children as RawSlots)._\n    if (type) {\n      // compiled slots.\n      if (__DEV__ && isHmrUpdating) {\n        // Parent was HMR updated so slot content may have changed.\n        // force update slots and mark instance for hmr as well\n        assignSlots(slots, children as Slots, optimized)\n        trigger(instance, TriggerOpTypes.SET, '$slots')\n      } else if (optimized && type === SlotFlags.STABLE) {\n        // compiled AND stable.\n        // no need to update, and skip stale slots removal.\n        needDeletionCheck = false\n      } else {\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n        // normalization.\n        assignSlots(slots, children as Slots, optimized)\n      }\n    } else {\n      needDeletionCheck = !(children as RawSlots).$stable\n      normalizeObjectSlots(children as RawSlots, slots, instance)\n    }\n    deletionComparisonTarget = children as RawSlots\n  } else if (children) {\n    // non slot object children (direct value) passed to a component\n    normalizeVNodeSlots(instance, children)\n    deletionComparisonTarget = { default: 1 }\n  }\n\n  // delete stale slots\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key]\n      }\n    }\n  }\n}\n", "/* eslint-disable no-restricted-globals */\nimport {\n  type ComponentInternalInstance,\n  formatComponentName,\n} from './component'\nimport { devtoolsPerfEnd, devtoolsPerfStart } from './devtools'\n\nlet supported: boolean\nlet perf: Performance\n\nexport function startMeasure(\n  instance: ComponentInternalInstance,\n  type: string,\n): void {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`)\n  }\n\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now())\n  }\n}\n\nexport function endMeasure(\n  instance: ComponentInternalInstance,\n  type: string,\n): void {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`\n    const endTag = startTag + `:end`\n    perf.mark(endTag)\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag,\n    )\n    perf.clearMarks(startTag)\n    perf.clearMarks(endTag)\n  }\n\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now())\n  }\n}\n\nfunction isSupported() {\n  if (supported !== undefined) {\n    return supported\n  }\n  if (typeof window !== 'undefined' && window.performance) {\n    supported = true\n    perf = window.performance\n  } else {\n    supported = false\n  }\n  return supported\n}\n", "import { getGlobalThis } from '@vue/shared'\n\n/**\n * This is only called in esm-bundler builds.\n * It is called when a renderer is created, in `baseCreateRenderer` so that\n * importing runtime-core is side-effects free.\n */\nexport function initFeatureFlags(): void {\n  const needWarn = []\n\n  if (typeof __FEATURE_OPTIONS_API__ !== 'boolean') {\n    __DEV__ && needWarn.push(`__VUE_OPTIONS_API__`)\n    getGlobalThis().__VUE_OPTIONS_API__ = true\n  }\n\n  if (typeof __FEATURE_PROD_DEVTOOLS__ !== 'boolean') {\n    __DEV__ && needWarn.push(`__VUE_PROD_DEVTOOLS__`)\n    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false\n  }\n\n  if (typeof __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__ !== 'boolean') {\n    __DEV__ && needWarn.push(`__VUE_PROD_HYDRATION_MISMATCH_DETAILS__`)\n    getGlobalThis().__VUE_PROD_HYDRATION_MISMATCH_DETAILS__ = false\n  }\n\n  if (__DEV__ && needWarn.length) {\n    const multi = needWarn.length > 1\n    console.warn(\n      `Feature flag${multi ? `s` : ``} ${needWarn.join(', ')} ${\n        multi ? `are` : `is`\n      } not explicitly defined. You are running the esm-bundler build of Vue, ` +\n        `which expects these compile-time feature flags to be globally injected ` +\n        `via the bundler config in order to get better tree-shaking in the ` +\n        `production bundle.\\n\\n` +\n        `For more details, see https://link.vuejs.org/feature-flags.`,\n    )\n  }\n}\n", "import {\n  Comment,\n  Fragment,\n  Static,\n  Text,\n  type VNode,\n  type VNodeArrayChildren,\n  type VNodeHook,\n  type VNodeProps,\n  cloneIfMounted,\n  createVNode,\n  invokeVNodeHook,\n  isSameVNodeType,\n  normalizeVNode,\n} from './vnode'\nimport {\n  type ComponentInternalInstance,\n  type ComponentOptions,\n  type Data,\n  type LifecycleHook,\n  createComponentInstance,\n  setupComponent,\n} from './component'\nimport {\n  filterSingleRoot,\n  renderComponentRoot,\n  shouldUpdateComponent,\n  updateHOCHostEl,\n} from './componentRenderUtils'\nimport {\n  EMPTY_ARR,\n  EMPTY_OBJ,\n  NOOP,\n  PatchFlags,\n  ShapeFlags,\n  def,\n  getGlobalThis,\n  invokeArrayFns,\n  isArray,\n  isReservedProp,\n} from '@vue/shared'\nimport {\n  type SchedulerJob,\n  SchedulerJobFlags,\n  type SchedulerJobs,\n  flushPostFlushCbs,\n  flushPreFlushCbs,\n  queueJob,\n  queuePostFlushCb,\n} from './scheduler'\nimport {\n  EffectFlags,\n  ReactiveEffect,\n  pauseTracking,\n  resetTracking,\n} from '@vue/reactivity'\nimport { updateProps } from './componentProps'\nimport { updateSlots } from './componentSlots'\nimport { popWarningContext, pushWarningContext, warn } from './warning'\nimport { type CreateAppFunction, createAppAPI } from './apiCreateApp'\nimport { setRef } from './rendererTemplateRef'\nimport {\n  type SuspenseBoundary,\n  type SuspenseImpl,\n  isSuspense,\n  queueEffectWithSuspense,\n} from './components/Suspense'\nimport {\n  TeleportEndKey,\n  type TeleportImpl,\n  type TeleportVNode,\n} from './components/Teleport'\nimport { type KeepAliveContext, isKeepAlive } from './components/KeepAlive'\nimport { isHmrUpdating, registerHMR, unregisterHMR } from './hmr'\nimport { type RootHydrateFunction, createHydrationFunctions } from './hydration'\nimport { invokeDirectiveHook } from './directives'\nimport { endMeasure, startMeasure } from './profiling'\nimport {\n  devtoolsComponentAdded,\n  devtoolsComponentRemoved,\n  devtoolsComponentUpdated,\n  setDevtoolsHook,\n} from './devtools'\nimport { initFeatureFlags } from './featureFlags'\nimport { isAsyncWrapper } from './apiAsyncComponent'\nimport { isCompatEnabled } from './compat/compatConfig'\nimport { DeprecationTypes } from './compat/compatConfig'\nimport type { TransitionHooks } from './components/BaseTransition'\n\nexport interface Renderer<HostElement = RendererElement> {\n  render: RootRenderFunction<HostElement>\n  createApp: CreateAppFunction<HostElement>\n}\n\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\n  hydrate: RootHydrateFunction\n}\n\nexport type ElementNamespace = 'svg' | 'mathml' | undefined\n\nexport type RootRenderFunction<HostElement = RendererElement> = (\n  vnode: VNode | null,\n  container: HostElement,\n  namespace?: ElementNamespace,\n) => void\n\nexport interface RendererOptions<\n  HostNode = RendererNode,\n  HostElement = RendererElement,\n> {\n  patchProp(\n    el: HostElement,\n    key: string,\n    prevValue: any,\n    nextValue: any,\n    namespace?: ElementNamespace,\n    parentComponent?: ComponentInternalInstance | null,\n  ): void\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\n  remove(el: HostNode): void\n  createElement(\n    type: string,\n    namespace?: ElementNamespace,\n    isCustomizedBuiltIn?: string,\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null,\n  ): HostElement\n  createText(text: string): HostNode\n  createComment(text: string): HostNode\n  setText(node: HostNode, text: string): void\n  setElementText(node: HostElement, text: string): void\n  parentNode(node: HostNode): HostElement | null\n  nextSibling(node: HostNode): HostNode | null\n  querySelector?(selector: string): HostElement | null\n  setScopeId?(el: HostElement, id: string): void\n  cloneNode?(node: HostNode): HostNode\n  insertStaticContent?(\n    content: string,\n    parent: HostElement,\n    anchor: HostNode | null,\n    namespace: ElementNamespace,\n    start?: HostNode | null,\n    end?: HostNode | null,\n  ): [HostNode, HostNode]\n}\n\n// Renderer Node can technically be any object in the context of core renderer\n// logic - they are never directly operated on and always passed to the node op\n// functions provided via options, so the internal constraint is really just\n// a generic object.\nexport interface RendererNode {\n  [key: string | symbol]: any\n}\n\nexport interface RendererElement extends RendererNode {}\n\n// An object exposing the internals of a renderer, passed to tree-shakeable\n// features so that they can be decoupled from this file. Keys are shortened\n// to optimize bundle size.\nexport interface RendererInternals<\n  HostNode = RendererNode,\n  HostElement = RendererElement,\n> {\n  p: PatchFn\n  um: UnmountFn\n  r: RemoveFn\n  m: MoveFn\n  mt: MountComponentFn\n  mc: MountChildrenFn\n  pc: PatchChildrenFn\n  pbc: PatchBlockChildrenFn\n  n: NextFn\n  o: RendererOptions<HostNode, HostElement>\n}\n\n// These functions are created inside a closure and therefore their types cannot\n// be directly exported. In order to avoid maintaining function signatures in\n// two places, we declare them once here and use them inside the closure.\ntype PatchFn = (\n  n1: VNode | null, // null means this is a mount\n  n2: VNode,\n  container: RendererElement,\n  anchor?: RendererNode | null,\n  parentComponent?: ComponentInternalInstance | null,\n  parentSuspense?: SuspenseBoundary | null,\n  namespace?: ElementNamespace,\n  slotScopeIds?: string[] | null,\n  optimized?: boolean,\n) => void\n\ntype MountChildrenFn = (\n  children: VNodeArrayChildren,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  start?: number,\n) => void\n\ntype PatchChildrenFn = (\n  n1: VNode | null,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n) => void\n\ntype PatchBlockChildrenFn = (\n  oldChildren: VNode[],\n  newChildren: VNode[],\n  fallbackContainer: RendererElement,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n) => void\n\ntype MoveFn = (\n  vnode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  type: MoveType,\n  parentSuspense?: SuspenseBoundary | null,\n) => void\n\ntype NextFn = (vnode: VNode) => RendererNode | null\n\ntype UnmountFn = (\n  vnode: VNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  doRemove?: boolean,\n  optimized?: boolean,\n) => void\n\ntype RemoveFn = (vnode: VNode) => void\n\ntype UnmountChildrenFn = (\n  children: VNode[],\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  doRemove?: boolean,\n  optimized?: boolean,\n  start?: number,\n) => void\n\nexport type MountComponentFn = (\n  initialVNode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  optimized: boolean,\n) => void\n\ntype ProcessTextOrCommentFn = (\n  n1: VNode | null,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n) => void\n\nexport type SetupRenderEffectFn = (\n  instance: ComponentInternalInstance,\n  initialVNode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  optimized: boolean,\n) => void\n\nexport enum MoveType {\n  ENTER,\n  LEAVE,\n  REORDER,\n}\n\nexport const queuePostRenderEffect: (\n  fn: SchedulerJobs,\n  suspense: SuspenseBoundary | null,\n) => void = __FEATURE_SUSPENSE__\n  ? __TEST__\n    ? // vitest can't seem to handle eager circular dependency\n      (fn: Function | Function[], suspense: SuspenseBoundary | null) =>\n        queueEffectWithSuspense(fn, suspense)\n    : queueEffectWithSuspense\n  : queuePostFlushCb\n\n/**\n * The createRenderer function accepts two generic arguments:\n * HostNode and HostElement, corresponding to Node and Element types in the\n * host environment. For example, for runtime-dom, HostNode would be the DOM\n * `Node` interface and HostElement would be the DOM `Element` interface.\n *\n * Custom renderers can pass in the platform specific types like this:\n *\n * ``` js\n * const { render, createApp } = createRenderer<Node, Element>({\n *   patchProp,\n *   ...nodeOps\n * })\n * ```\n */\nexport function createRenderer<\n  HostNode = RendererNode,\n  HostElement = RendererElement,\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement> {\n  return baseCreateRenderer<HostNode, HostElement>(options)\n}\n\n// Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\nexport function createHydrationRenderer(\n  options: RendererOptions<Node, Element>,\n): HydrationRenderer {\n  return baseCreateRenderer(options, createHydrationFunctions)\n}\n\n// overload 1: no hydration\nfunction baseCreateRenderer<\n  HostNode = RendererNode,\n  HostElement = RendererElement,\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\n\n// overload 2: with hydration\nfunction baseCreateRenderer(\n  options: RendererOptions<Node, Element>,\n  createHydrationFns: typeof createHydrationFunctions,\n): HydrationRenderer\n\n// implementation\nfunction baseCreateRenderer(\n  options: RendererOptions,\n  createHydrationFns?: typeof createHydrationFunctions,\n): any {\n  // compile-time feature flags check\n  if (__ESM_BUNDLER__ && !__TEST__) {\n    initFeatureFlags()\n  }\n\n  const target = getGlobalThis()\n  target.__VUE__ = true\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\n  }\n\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent,\n  } = options\n\n  // Note: functions inside this closure should use `const xxx = () => {}`\n  // style in order to prevent being inlined by minifiers.\n  const patch: PatchFn = (\n    n1,\n    n2,\n    container,\n    anchor = null,\n    parentComponent = null,\n    parentSuspense = null,\n    namespace = undefined,\n    slotScopeIds = null,\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren,\n  ) => {\n    if (n1 === n2) {\n      return\n    }\n\n    // patching & not same type, unmount old tree\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1)\n      unmount(n1, parentComponent, parentSuspense, true)\n      n1 = null\n    }\n\n    if (n2.patchFlag === PatchFlags.BAIL) {\n      optimized = false\n      n2.dynamicChildren = null\n    }\n\n    const { type, ref, shapeFlag } = n2\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor)\n        break\n      case Comment:\n        processCommentNode(n1, n2, container, anchor)\n        break\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, namespace)\n        } else if (__DEV__) {\n          patchStaticNode(n1, n2, container, namespace)\n        }\n        break\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        break\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\n          ;(type as typeof TeleportImpl).process(\n            n1 as TeleportVNode,\n            n2 as TeleportVNode,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals,\n          )\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n          ;(type as typeof SuspenseImpl).process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals,\n          )\n        } else if (__DEV__) {\n          warn('Invalid VNode type:', type, `(${typeof type})`)\n        }\n    }\n\n    // set ref\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\n    }\n  }\n\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        (n2.el = hostCreateText(n2.children as string)),\n        container,\n        anchor,\n      )\n    } else {\n      const el = (n2.el = n1.el!)\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children as string)\n      }\n    }\n  }\n\n  const processCommentNode: ProcessTextOrCommentFn = (\n    n1,\n    n2,\n    container,\n    anchor,\n  ) => {\n    if (n1 == null) {\n      hostInsert(\n        (n2.el = hostCreateComment((n2.children as string) || '')),\n        container,\n        anchor,\n      )\n    } else {\n      // there's no support for dynamic comments\n      n2.el = n1.el\n    }\n  }\n\n  const mountStaticNode = (\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    namespace: ElementNamespace,\n  ) => {\n    // static nodes are only present when used with compiler-dom/runtime-dom\n    // which guarantees presence of hostInsertStaticContent.\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\n      n2.children as string,\n      container,\n      anchor,\n      namespace,\n      n2.el,\n      n2.anchor,\n    )\n  }\n\n  /**\n   * Dev / HMR only\n   */\n  const patchStaticNode = (\n    n1: VNode,\n    n2: VNode,\n    container: RendererElement,\n    namespace: ElementNamespace,\n  ) => {\n    // static nodes are only patched during dev for HMR\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor!)\n      // remove existing\n      removeStaticNode(n1)\n      // insert new\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\n        n2.children as string,\n        container,\n        anchor,\n        namespace,\n      )\n    } else {\n      n2.el = n1.el\n      n2.anchor = n1.anchor\n    }\n  }\n\n  const moveStaticNode = (\n    { el, anchor }: VNode,\n    container: RendererElement,\n    nextSibling: RendererNode | null,\n  ) => {\n    let next\n    while (el && el !== anchor) {\n      next = hostNextSibling(el)\n      hostInsert(el, container, nextSibling)\n      el = next\n    }\n    hostInsert(anchor!, container, nextSibling)\n  }\n\n  const removeStaticNode = ({ el, anchor }: VNode) => {\n    let next\n    while (el && el !== anchor) {\n      next = hostNextSibling(el)\n      hostRemove(el)\n      el = next\n    }\n    hostRemove(anchor!)\n  }\n\n  const processElement = (\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    if (n2.type === 'svg') {\n      namespace = 'svg'\n    } else if (n2.type === 'math') {\n      namespace = 'mathml'\n    }\n\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n    }\n  }\n\n  const mountElement = (\n    vnode: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    let el: RendererElement\n    let vnodeHook: VNodeHook | undefined | null\n    const { props, shapeFlag, transition, dirs } = vnode\n\n    el = vnode.el = hostCreateElement(\n      vnode.type as string,\n      namespace,\n      props && props.is,\n      props,\n    )\n\n    // mount children first, since some props may rely on child content\n    // being already rendered, e.g. `<select value>`\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      hostSetElementText(el, vnode.children as string)\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      mountChildren(\n        vnode.children as VNodeArrayChildren,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(vnode, namespace),\n        slotScopeIds,\n        optimized,\n      )\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, 'created')\n    }\n    // scopeId\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\n    // props\n    if (props) {\n      for (const key in props) {\n        if (key !== 'value' && !isReservedProp(key)) {\n          hostPatchProp(el, key, null, props[key], namespace, parentComponent)\n        }\n      }\n      /**\n       * Special case for setting value on DOM elements:\n       * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\n       * - it needs to be forced (#1471)\n       * #2353 proposes adding another renderer option to configure this, but\n       * the properties affects are so finite it is worth special casing it\n       * here to reduce the complexity. (Special casing it also should not\n       * affect non-DOM renderers)\n       */\n      if ('value' in props) {\n        hostPatchProp(el, 'value', null, props.value, namespace)\n      }\n      if ((vnodeHook = props.onVnodeBeforeMount)) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode)\n      }\n    }\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      def(el, '__vnode', vnode, true)\n      def(el, '__vueParentComponent', parentComponent, true)\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\n    }\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n    // #1689 For inside suspense + suspense resolved case, just call it\n    const needCallTransitionHooks = needTransition(parentSuspense, transition)\n    if (needCallTransitionHooks) {\n      transition!.beforeEnter(el)\n    }\n    hostInsert(el, container, anchor)\n    if (\n      (vnodeHook = props && props.onVnodeMounted) ||\n      needCallTransitionHooks ||\n      dirs\n    ) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\n        needCallTransitionHooks && transition!.enter(el)\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\n      }, parentSuspense)\n    }\n  }\n\n  const setScopeId = (\n    el: RendererElement,\n    vnode: VNode,\n    scopeId: string | null,\n    slotScopeIds: string[] | null,\n    parentComponent: ComponentInternalInstance | null,\n  ) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId)\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i])\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree\n      if (\n        __DEV__ &&\n        subTree.patchFlag > 0 &&\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\n      ) {\n        subTree =\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\n      }\n      if (\n        vnode === subTree ||\n        (isSuspense(subTree.type) &&\n          (subTree.ssContent === vnode || subTree.ssFallback === vnode))\n      ) {\n        const parentVNode = parentComponent.vnode\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent,\n        )\n      }\n    }\n  }\n\n  const mountChildren: MountChildrenFn = (\n    children,\n    container,\n    anchor,\n    parentComponent,\n    parentSuspense,\n    namespace: ElementNamespace,\n    slotScopeIds,\n    optimized,\n    start = 0,\n  ) => {\n    for (let i = start; i < children.length; i++) {\n      const child = (children[i] = optimized\n        ? cloneIfMounted(children[i] as VNode)\n        : normalizeVNode(children[i]))\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n    }\n  }\n\n  const patchElement = (\n    n1: VNode,\n    n2: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    const el = (n2.el = n1.el!)\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      el.__vnode = n2\n    }\n    let { patchFlag, dynamicChildren, dirs } = n2\n    // #1426 take the old vnode's patch flag into account since user may clone a\n    // compiler-generated vnode, which de-opts to FULL_PROPS\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\n    const oldProps = n1.props || EMPTY_OBJ\n    const newProps = n2.props || EMPTY_OBJ\n    let vnodeHook: VNodeHook | undefined | null\n\n    // disable recurse in beforeUpdate hooks\n    parentComponent && toggleRecurse(parentComponent, false)\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\n    }\n    parentComponent && toggleRecurse(parentComponent, true)\n\n    if (__DEV__ && isHmrUpdating) {\n      // HMR updated, force full diff\n      patchFlag = 0\n      optimized = false\n      dynamicChildren = null\n    }\n\n    // #9135 innerHTML / textContent unset needs to happen before possible\n    // new children mount\n    if (\n      (oldProps.innerHTML && newProps.innerHTML == null) ||\n      (oldProps.textContent && newProps.textContent == null)\n    ) {\n      hostSetElementText(el, '')\n    }\n\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren!,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds,\n      )\n      if (__DEV__) {\n        // necessary for HMR\n        traverseStaticChildren(n1, n2)\n      }\n    } else if (!optimized) {\n      // full diff\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds,\n        false,\n      )\n    }\n\n    if (patchFlag > 0) {\n      // the presence of a patchFlag means this element's render code was\n      // generated by the compiler and can take the fast path.\n      // in this path old node and new node are guaranteed to have the same shape\n      // (i.e. at the exact same position in the source template)\n      if (patchFlag & PatchFlags.FULL_PROPS) {\n        // element props contain dynamic keys, full diff needed\n        patchProps(el, oldProps, newProps, parentComponent, namespace)\n      } else {\n        // class\n        // this flag is matched when the element has dynamic class bindings.\n        if (patchFlag & PatchFlags.CLASS) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, 'class', null, newProps.class, namespace)\n          }\n        }\n\n        // style\n        // this flag is matched when the element has dynamic style bindings\n        if (patchFlag & PatchFlags.STYLE) {\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, namespace)\n        }\n\n        // props\n        // This flag is matched when the element has dynamic prop/attr bindings\n        // other than class and style. The keys of dynamic prop/attrs are saved for\n        // faster iteration.\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n        // bail out and go through a full diff because we need to unset the old key\n        if (patchFlag & PatchFlags.PROPS) {\n          // if the flag is present then dynamicProps must be non-null\n          const propsToUpdate = n2.dynamicProps!\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i]\n            const prev = oldProps[key]\n            const next = newProps[key]\n            // #1471 force patch value\n            if (next !== prev || key === 'value') {\n              hostPatchProp(el, key, prev, next, namespace, parentComponent)\n            }\n          }\n        }\n      }\n\n      // text\n      // This flag is matched when the element has only dynamic text children.\n      if (patchFlag & PatchFlags.TEXT) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children as string)\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      // unoptimized, full diff\n      patchProps(el, oldProps, newProps, parentComponent, namespace)\n    }\n\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\n      }, parentSuspense)\n    }\n  }\n\n  // The fast path for blocks.\n  const patchBlockChildren: PatchBlockChildrenFn = (\n    oldChildren,\n    newChildren,\n    fallbackContainer,\n    parentComponent,\n    parentSuspense,\n    namespace: ElementNamespace,\n    slotScopeIds,\n  ) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i]\n      const newVNode = newChildren[i]\n      // Determine the container (parent element) for the patch.\n      const container =\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el &&\n        // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment ||\n          // - In the case of different nodes, there is going to be a replacement\n          // which also requires the correct parent container\n          !isSameVNodeType(oldVNode, newVNode) ||\n          // - In the case of a component, it could contain anything.\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\n          ? hostParentNode(oldVNode.el)!\n          : // In other cases, the parent container is not actually used so we\n            // just pass the block element here to avoid a DOM parentNode call.\n            fallbackContainer\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        true,\n      )\n    }\n  }\n\n  const patchProps = (\n    el: RendererElement,\n    oldProps: Data,\n    newProps: Data,\n    parentComponent: ComponentInternalInstance | null,\n    namespace: ElementNamespace,\n  ) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              namespace,\n              parentComponent,\n            )\n          }\n        }\n      }\n      for (const key in newProps) {\n        // empty string is not valid prop\n        if (isReservedProp(key)) continue\n        const next = newProps[key]\n        const prev = oldProps[key]\n        // defer patching value\n        if (next !== prev && key !== 'value') {\n          hostPatchProp(el, key, prev, next, namespace, parentComponent)\n        }\n      }\n      if ('value' in newProps) {\n        hostPatchProp(el, 'value', oldProps.value, newProps.value, namespace)\n      }\n    }\n  }\n\n  const processFragment = (\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\n\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\n\n    if (\n      __DEV__ &&\n      // #5523 dev root fragment may inherit directives\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\n    ) {\n      // HMR updated / Dev root fragment (w/ comments), force full diff\n      patchFlag = 0\n      optimized = false\n      dynamicChildren = null\n    }\n\n    // check if this is a slot fragment with :slotted scope ids\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\n        : fragmentSlotScopeIds\n    }\n\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor)\n      hostInsert(fragmentEndAnchor, container, anchor)\n      // a fragment can only have array children\n      // since they are either generated by the compiler, or implicitly created\n      // from arrays.\n      mountChildren(\n        // #10007\n        // such fragment like `<></>` will be compiled into\n        // a fragment which doesn't have a children.\n        // In this case fallback to an empty array\n        (n2.children || []) as VNodeArrayChildren,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n    } else {\n      if (\n        patchFlag > 0 &&\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\n        dynamicChildren &&\n        // #2715 the previous fragment could've been a BAILed one as a result\n        // of renderSlot() with no valid children\n        n1.dynamicChildren\n      ) {\n        // a stable fragment (template root or <template v-for>) doesn't need to\n        // patch children order, but it may contain dynamicChildren.\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n        )\n        if (__DEV__) {\n          // necessary for HMR\n          traverseStaticChildren(n1, n2)\n        } else if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null ||\n          (parentComponent && n2 === parentComponent.subTree)\n        ) {\n          traverseStaticChildren(n1, n2, true /* shallow */)\n        }\n      } else {\n        // keyed / unkeyed, or manual fragments.\n        // for keyed & unkeyed, since they are compiler generated from v-for,\n        // each child is guaranteed to be a block so the fragment will never\n        // have dynamicChildren.\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n      }\n    }\n  }\n\n  const processComponent = (\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    n2.slotScopeIds = slotScopeIds\n    if (n1 == null) {\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\n          n2,\n          container,\n          anchor,\n          namespace,\n          optimized,\n        )\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          optimized,\n        )\n      }\n    } else {\n      updateComponent(n1, n2, optimized)\n    }\n  }\n\n  const mountComponent: MountComponentFn = (\n    initialVNode,\n    container,\n    anchor,\n    parentComponent,\n    parentSuspense,\n    namespace: ElementNamespace,\n    optimized,\n  ) => {\n    // 2.x compat may pre-create the component instance before actually\n    // mounting\n    const compatMountInstance =\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\n    const instance: ComponentInternalInstance =\n      compatMountInstance ||\n      (initialVNode.component = createComponentInstance(\n        initialVNode,\n        parentComponent,\n        parentSuspense,\n      ))\n\n    if (__DEV__ && instance.type.__hmrId) {\n      registerHMR(instance)\n    }\n\n    if (__DEV__) {\n      pushWarningContext(initialVNode)\n      startMeasure(instance, `mount`)\n    }\n\n    // inject renderer internals for keepAlive\n    if (isKeepAlive(initialVNode)) {\n      ;(instance.ctx as KeepAliveContext).renderer = internals\n    }\n\n    // resolve props and slots for setup context\n    if (!(__COMPAT__ && compatMountInstance)) {\n      if (__DEV__) {\n        startMeasure(instance, `init`)\n      }\n      setupComponent(instance, false, optimized)\n      if (__DEV__) {\n        endMeasure(instance, `init`)\n      }\n    }\n\n    // setup() is async. This component relies on async logic to be resolved\n    // before proceeding\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\n      // avoid hydration for hmr updating\n      if (__DEV__ && isHmrUpdating) initialVNode.el = null\n\n      parentSuspense &&\n        parentSuspense.registerDep(instance, setupRenderEffect, optimized)\n\n      // Give it a placeholder if this is not hydration\n      // TODO handle self-defined fallback\n      if (!initialVNode.el) {\n        const placeholder = (instance.subTree = createVNode(Comment))\n        processCommentNode(null, placeholder, container!, anchor)\n      }\n    } else {\n      setupRenderEffect(\n        instance,\n        initialVNode,\n        container,\n        anchor,\n        parentSuspense,\n        namespace,\n        optimized,\n      )\n    }\n\n    if (__DEV__) {\n      popWarningContext()\n      endMeasure(instance, `mount`)\n    }\n  }\n\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\n    const instance = (n2.component = n1.component)!\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (\n        __FEATURE_SUSPENSE__ &&\n        instance.asyncDep &&\n        !instance.asyncResolved\n      ) {\n        // async & still pending - just update props and slots\n        // since the component's reactive effect for render isn't set-up yet\n        if (__DEV__) {\n          pushWarningContext(n2)\n        }\n        updateComponentPreRender(instance, n2, optimized)\n        if (__DEV__) {\n          popWarningContext()\n        }\n        return\n      } else {\n        // normal update\n        instance.next = n2\n        // instance.update is the reactive effect.\n        instance.update()\n      }\n    } else {\n      // no update needed. just copy over properties\n      n2.el = n1.el\n      instance.vnode = n2\n    }\n  }\n\n  const setupRenderEffect: SetupRenderEffectFn = (\n    instance,\n    initialVNode,\n    container,\n    anchor,\n    parentSuspense,\n    namespace: ElementNamespace,\n    optimized,\n  ) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook: VNodeHook | null | undefined\n        const { el, props } = initialVNode\n        const { bm, m, parent, root, type } = instance\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\n\n        toggleRecurse(instance, false)\n        // beforeMount hook\n        if (bm) {\n          invokeArrayFns(bm)\n        }\n        // onVnodeBeforeMount\n        if (\n          !isAsyncWrapperVNode &&\n          (vnodeHook = props && props.onVnodeBeforeMount)\n        ) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          instance.emit('hook:beforeMount')\n        }\n        toggleRecurse(instance, true)\n\n        if (el && hydrateNode) {\n          // vnode has adopted host node - perform hydration instead of mount.\n          const hydrateSubTree = () => {\n            if (__DEV__) {\n              startMeasure(instance, `render`)\n            }\n            instance.subTree = renderComponentRoot(instance)\n            if (__DEV__) {\n              endMeasure(instance, `render`)\n            }\n            if (__DEV__) {\n              startMeasure(instance, `hydrate`)\n            }\n            hydrateNode!(\n              el as Node,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null,\n            )\n            if (__DEV__) {\n              endMeasure(instance, `hydrate`)\n            }\n          }\n\n          if (\n            isAsyncWrapperVNode &&\n            (type as ComponentOptions).__asyncHydrate\n          ) {\n            ;(type as ComponentOptions).__asyncHydrate!(\n              el as Element,\n              instance,\n              hydrateSubTree,\n            )\n          } else {\n            hydrateSubTree()\n          }\n        } else {\n          // custom element style injection\n          if (root.ce) {\n            root.ce._injectChildStyle(type)\n          }\n\n          if (__DEV__) {\n            startMeasure(instance, `render`)\n          }\n          const subTree = (instance.subTree = renderComponentRoot(instance))\n          if (__DEV__) {\n            endMeasure(instance, `render`)\n          }\n          if (__DEV__) {\n            startMeasure(instance, `patch`)\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            namespace,\n          )\n          if (__DEV__) {\n            endMeasure(instance, `patch`)\n          }\n          initialVNode.el = subTree.el\n        }\n        // mounted hook\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense)\n        }\n        // onVnodeMounted\n        if (\n          !isAsyncWrapperVNode &&\n          (vnodeHook = props && props.onVnodeMounted)\n        ) {\n          const scopedInitialVNode = initialVNode\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\n            parentSuspense,\n          )\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          queuePostRenderEffect(\n            () => instance.emit('hook:mounted'),\n            parentSuspense,\n          )\n        }\n\n        // activated hook for keep-alive roots.\n        // #1742 activated hook must be accessed after first render\n        // since the hook may be injected by a child keep-alive\n        if (\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\n          (parent &&\n            isAsyncWrapper(parent.vnode) &&\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\n        ) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\n          if (\n            __COMPAT__ &&\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n          ) {\n            queuePostRenderEffect(\n              () => instance.emit('hook:activated'),\n              parentSuspense,\n            )\n          }\n        }\n        instance.isMounted = true\n\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance)\n        }\n\n        // #2458: deference mount-only object parameters to prevent memleaks\n        initialVNode = container = anchor = null as any\n      } else {\n        let { next, bu, u, parent, vnode } = instance\n\n        if (__FEATURE_SUSPENSE__) {\n          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance)\n          // we are trying to update some async comp before hydration\n          // this will cause crash because we don't know the root node yet\n          if (nonHydratedAsyncRoot) {\n            // only sync the properties and abort the rest of operations\n            if (next) {\n              next.el = vnode.el\n              updateComponentPreRender(instance, next, optimized)\n            }\n            // and continue the rest of operations once the deps are resolved\n            nonHydratedAsyncRoot.asyncDep!.then(() => {\n              // the instance may be destroyed during the time period\n              if (!instance.isUnmounted) {\n                componentUpdateFn()\n              }\n            })\n            return\n          }\n        }\n\n        // updateComponent\n        // This is triggered by mutation of component's own state (next: null)\n        // OR parent calling processComponent (next: VNode)\n        let originNext = next\n        let vnodeHook: VNodeHook | null | undefined\n        if (__DEV__) {\n          pushWarningContext(next || instance.vnode)\n        }\n\n        // Disallow component effect recursion during pre-lifecycle hooks.\n        toggleRecurse(instance, false)\n        if (next) {\n          next.el = vnode.el\n          updateComponentPreRender(instance, next, optimized)\n        } else {\n          next = vnode\n        }\n\n        // beforeUpdate hook\n        if (bu) {\n          invokeArrayFns(bu)\n        }\n        // onVnodeBeforeUpdate\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          instance.emit('hook:beforeUpdate')\n        }\n        toggleRecurse(instance, true)\n\n        // render\n        if (__DEV__) {\n          startMeasure(instance, `render`)\n        }\n        const nextTree = renderComponentRoot(instance)\n        if (__DEV__) {\n          endMeasure(instance, `render`)\n        }\n        const prevTree = instance.subTree\n        instance.subTree = nextTree\n\n        if (__DEV__) {\n          startMeasure(instance, `patch`)\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el!)!,\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          namespace,\n        )\n        if (__DEV__) {\n          endMeasure(instance, `patch`)\n        }\n        next.el = nextTree.el\n        if (originNext === null) {\n          // self-triggered update. In case of HOC, update parent component\n          // vnode el. HOC is indicated by parent instance's subTree pointing\n          // to child component's vnode\n          updateHOCHostEl(instance, nextTree.el)\n        }\n        // updated hook\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense)\n        }\n        // onVnodeUpdated\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\n            parentSuspense,\n          )\n        }\n        if (\n          __COMPAT__ &&\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n        ) {\n          queuePostRenderEffect(\n            () => instance.emit('hook:updated'),\n            parentSuspense,\n          )\n        }\n\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance)\n        }\n\n        if (__DEV__) {\n          popWarningContext()\n        }\n      }\n    }\n\n    // create reactive effect for rendering\n    instance.scope.on()\n    const effect = (instance.effect = new ReactiveEffect(componentUpdateFn))\n    instance.scope.off()\n\n    const update = (instance.update = effect.run.bind(effect))\n    const job: SchedulerJob = (instance.job = effect.runIfDirty.bind(effect))\n    job.i = instance\n    job.id = instance.uid\n    effect.scheduler = () => queueJob(job)\n\n    // allowRecurse\n    // #1801, #2043 component render effects should allow recursive updates\n    toggleRecurse(instance, true)\n\n    if (__DEV__) {\n      effect.onTrack = instance.rtc\n        ? e => invokeArrayFns(instance.rtc!, e)\n        : void 0\n      effect.onTrigger = instance.rtg\n        ? e => invokeArrayFns(instance.rtg!, e)\n        : void 0\n    }\n\n    update()\n  }\n\n  const updateComponentPreRender = (\n    instance: ComponentInternalInstance,\n    nextVNode: VNode,\n    optimized: boolean,\n  ) => {\n    nextVNode.component = instance\n    const prevProps = instance.vnode.props\n    instance.vnode = nextVNode\n    instance.next = null\n    updateProps(instance, nextVNode.props, prevProps, optimized)\n    updateSlots(instance, nextVNode.children, optimized)\n\n    pauseTracking()\n    // props update may have triggered pre-flush watchers.\n    // flush them before the render update.\n    flushPreFlushCbs(instance)\n    resetTracking()\n  }\n\n  const patchChildren: PatchChildrenFn = (\n    n1,\n    n2,\n    container,\n    anchor,\n    parentComponent,\n    parentSuspense,\n    namespace: ElementNamespace,\n    slotScopeIds,\n    optimized = false,\n  ) => {\n    const c1 = n1 && n1.children\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\n    const c2 = n2.children\n\n    const { patchFlag, shapeFlag } = n2\n    // fast path\n    if (patchFlag > 0) {\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\n        // this could be either fully-keyed or mixed (some keyed some not)\n        // presence of patchFlag means children are guaranteed to be arrays\n        patchKeyedChildren(\n          c1 as VNode[],\n          c2 as VNodeArrayChildren,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        return\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\n        // unkeyed\n        patchUnkeyedChildren(\n          c1 as VNode[],\n          c2 as VNodeArrayChildren,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        return\n      }\n    }\n\n    // children has 3 possibilities: text, array or no children.\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      // text children fast path\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2 as string)\n      }\n    } else {\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        // prev children was array\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          // two arrays, cannot assume anything, do full diff\n          patchKeyedChildren(\n            c1 as VNode[],\n            c2 as VNodeArrayChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n        } else {\n          // no new children, just unmount old\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\n        }\n      } else {\n        // prev children was text OR null\n        // new children is array OR null\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\n          hostSetElementText(container, '')\n        }\n        // mount new if array\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n          mountChildren(\n            c2 as VNodeArrayChildren,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n        }\n      }\n    }\n  }\n\n  const patchUnkeyedChildren = (\n    c1: VNode[],\n    c2: VNodeArrayChildren,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    c1 = c1 || EMPTY_ARR\n    c2 = c2 || EMPTY_ARR\n    const oldLength = c1.length\n    const newLength = c2.length\n    const commonLength = Math.min(oldLength, newLength)\n    let i\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = (c2[i] = optimized\n        ? cloneIfMounted(c2[i] as VNode)\n        : normalizeVNode(c2[i]))\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n    }\n    if (oldLength > newLength) {\n      // remove old\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength,\n      )\n    } else {\n      // mount new\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        commonLength,\n      )\n    }\n  }\n\n  // can be all-keyed or mixed\n  const patchKeyedChildren = (\n    c1: VNode[],\n    c2: VNodeArrayChildren,\n    container: RendererElement,\n    parentAnchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n    let i = 0\n    const l2 = c2.length\n    let e1 = c1.length - 1 // prev ending index\n    let e2 = l2 - 1 // next ending index\n\n    // 1. sync from start\n    // (a b) c\n    // (a b) d e\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i]\n      const n2 = (c2[i] = optimized\n        ? cloneIfMounted(c2[i] as VNode)\n        : normalizeVNode(c2[i]))\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n      } else {\n        break\n      }\n      i++\n    }\n\n    // 2. sync from end\n    // a (b c)\n    // d e (b c)\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1]\n      const n2 = (c2[e2] = optimized\n        ? cloneIfMounted(c2[e2] as VNode)\n        : normalizeVNode(c2[e2]))\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n      } else {\n        break\n      }\n      e1--\n      e2--\n    }\n\n    // 3. common sequence + mount\n    // (a b)\n    // (a b) c\n    // i = 2, e1 = 1, e2 = 2\n    // (a b)\n    // c (a b)\n    // i = 0, e1 = -1, e2 = 0\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\n        while (i <= e2) {\n          patch(\n            null,\n            (c2[i] = optimized\n              ? cloneIfMounted(c2[i] as VNode)\n              : normalizeVNode(c2[i])),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n          i++\n        }\n      }\n    }\n\n    // 4. common sequence + unmount\n    // (a b) c\n    // (a b)\n    // i = 2, e1 = 2, e2 = 1\n    // a (b c)\n    // (b c)\n    // i = 0, e1 = 0, e2 = -1\n    else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true)\n        i++\n      }\n    }\n\n    // 5. unknown sequence\n    // [i ... e1 + 1]: a b [c d e] f g\n    // [i ... e2 + 1]: a b [e d c h] f g\n    // i = 2, e1 = 4, e2 = 5\n    else {\n      const s1 = i // prev starting index\n      const s2 = i // next starting index\n\n      // 5.1 build key:index map for newChildren\n      const keyToNewIndexMap: Map<PropertyKey, number> = new Map()\n      for (i = s2; i <= e2; i++) {\n        const nextChild = (c2[i] = optimized\n          ? cloneIfMounted(c2[i] as VNode)\n          : normalizeVNode(c2[i]))\n        if (nextChild.key != null) {\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`,\n            )\n          }\n          keyToNewIndexMap.set(nextChild.key, i)\n        }\n      }\n\n      // 5.2 loop through old children left to be patched and try to patch\n      // matching nodes & remove nodes that are no longer present\n      let j\n      let patched = 0\n      const toBePatched = e2 - s2 + 1\n      let moved = false\n      // used to track whether any node has moved\n      let maxNewIndexSoFar = 0\n      // works as Map<newIndex, oldIndex>\n      // Note that oldIndex is offset by +1\n      // and oldIndex = 0 is a special value indicating the new node has\n      // no corresponding old node.\n      // used for determining longest stable subsequence\n      const newIndexToOldIndexMap = new Array(toBePatched)\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\n\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i]\n        if (patched >= toBePatched) {\n          // all new children have been patched so this can only be a removal\n          unmount(prevChild, parentComponent, parentSuspense, true)\n          continue\n        }\n        let newIndex\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key)\n        } else {\n          // key-less node, try to locate a key-less node of the same type\n          for (j = s2; j <= e2; j++) {\n            if (\n              newIndexToOldIndexMap[j - s2] === 0 &&\n              isSameVNodeType(prevChild, c2[j] as VNode)\n            ) {\n              newIndex = j\n              break\n            }\n          }\n        }\n        if (newIndex === undefined) {\n          unmount(prevChild, parentComponent, parentSuspense, true)\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex\n          } else {\n            moved = true\n          }\n          patch(\n            prevChild,\n            c2[newIndex] as VNode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n          patched++\n        }\n      }\n\n      // 5.3 move and mount\n      // generate longest stable subsequence only when nodes have moved\n      const increasingNewIndexSequence = moved\n        ? getSequence(newIndexToOldIndexMap)\n        : EMPTY_ARR\n      j = increasingNewIndexSequence.length - 1\n      // looping backwards so that we can use last patched node as anchor\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i\n        const nextChild = c2[nextIndex] as VNode\n        const anchor =\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\n        if (newIndexToOldIndexMap[i] === 0) {\n          // mount new\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n        } else if (moved) {\n          // move if:\n          // There is no stable subsequence (e.g. a reverse)\n          // OR current node is not among the stable sequence\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, MoveType.REORDER)\n          } else {\n            j--\n          }\n        }\n      }\n    }\n  }\n\n  const move: MoveFn = (\n    vnode,\n    container,\n    anchor,\n    moveType,\n    parentSuspense = null,\n  ) => {\n    const { el, type, transition, children, shapeFlag } = vnode\n    if (shapeFlag & ShapeFlags.COMPONENT) {\n      move(vnode.component!.subTree, container, anchor, moveType)\n      return\n    }\n\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n      vnode.suspense!.move(container, anchor, moveType)\n      return\n    }\n\n    if (shapeFlag & ShapeFlags.TELEPORT) {\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\n      return\n    }\n\n    if (type === Fragment) {\n      hostInsert(el!, container, anchor)\n      for (let i = 0; i < (children as VNode[]).length; i++) {\n        move((children as VNode[])[i], container, anchor, moveType)\n      }\n      hostInsert(vnode.anchor!, container, anchor)\n      return\n    }\n\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor)\n      return\n    }\n\n    // single nodes\n    const needTransition =\n      moveType !== MoveType.REORDER &&\n      shapeFlag & ShapeFlags.ELEMENT &&\n      transition\n    if (needTransition) {\n      if (moveType === MoveType.ENTER) {\n        transition!.beforeEnter(el!)\n        hostInsert(el!, container, anchor)\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\n      } else {\n        const { leave, delayLeave, afterLeave } = transition!\n        const remove = () => hostInsert(el!, container, anchor)\n        const performLeave = () => {\n          leave(el!, () => {\n            remove()\n            afterLeave && afterLeave()\n          })\n        }\n        if (delayLeave) {\n          delayLeave(el!, remove, performLeave)\n        } else {\n          performLeave()\n        }\n      }\n    } else {\n      hostInsert(el!, container, anchor)\n    }\n  }\n\n  const unmount: UnmountFn = (\n    vnode,\n    parentComponent,\n    parentSuspense,\n    doRemove = false,\n    optimized = false,\n  ) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs,\n      cacheIndex,\n    } = vnode\n\n    if (patchFlag === PatchFlags.BAIL) {\n      optimized = false\n    }\n\n    // unset ref\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true)\n    }\n\n    // #6593 should clean memo cache when unmount\n    if (cacheIndex != null) {\n      parentComponent!.renderCache[cacheIndex] = undefined\n    }\n\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\n      return\n    }\n\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\n\n    let vnodeHook: VNodeHook | undefined | null\n    if (\n      shouldInvokeVnodeHook &&\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\n    ) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\n    }\n\n    if (shapeFlag & ShapeFlags.COMPONENT) {\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\n    } else {\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n        vnode.suspense!.unmount(parentSuspense, doRemove)\n        return\n      }\n\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\n      }\n\n      if (shapeFlag & ShapeFlags.TELEPORT) {\n        ;(vnode.type as typeof TeleportImpl).remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          internals,\n          doRemove,\n        )\n      } else if (\n        dynamicChildren &&\n        // #5154\n        // when v-once is used inside a block, setBlockTracking(-1) marks the\n        // parent block with hasOnce: true\n        // so that it doesn't take the fast path during unmount - otherwise\n        // components nested in v-once are never unmounted.\n        !dynamicChildren.hasOnce &&\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\n        (type !== Fragment ||\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\n      ) {\n        // fast path for block nodes: only need to unmount dynamic children.\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true,\n        )\n      } else if (\n        (type === Fragment &&\n          patchFlag &\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\n      ) {\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\n      }\n\n      if (doRemove) {\n        remove(vnode)\n      }\n    }\n\n    if (\n      (shouldInvokeVnodeHook &&\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\n      shouldInvokeDirs\n    ) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\n        shouldInvokeDirs &&\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\n      }, parentSuspense)\n    }\n  }\n\n  const remove: RemoveFn = vnode => {\n    const { type, el, anchor, transition } = vnode\n    if (type === Fragment) {\n      if (\n        __DEV__ &&\n        vnode.patchFlag > 0 &&\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\n        transition &&\n        !transition.persisted\n      ) {\n        ;(vnode.children as VNode[]).forEach(child => {\n          if (child.type === Comment) {\n            hostRemove(child.el!)\n          } else {\n            remove(child)\n          }\n        })\n      } else {\n        removeFragment(el!, anchor!)\n      }\n      return\n    }\n\n    if (type === Static) {\n      removeStaticNode(vnode)\n      return\n    }\n\n    const performRemove = () => {\n      hostRemove(el!)\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave()\n      }\n    }\n\n    if (\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\n      transition &&\n      !transition.persisted\n    ) {\n      const { leave, delayLeave } = transition\n      const performLeave = () => leave(el!, performRemove)\n      if (delayLeave) {\n        delayLeave(vnode.el!, performRemove, performLeave)\n      } else {\n        performLeave()\n      }\n    } else {\n      performRemove()\n    }\n  }\n\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\n    // For fragments, directly remove all contained DOM nodes.\n    // (fragment child nodes cannot have transition)\n    let next\n    while (cur !== end) {\n      next = hostNextSibling(cur)!\n      hostRemove(cur)\n      cur = next\n    }\n    hostRemove(end)\n  }\n\n  const unmountComponent = (\n    instance: ComponentInternalInstance,\n    parentSuspense: SuspenseBoundary | null,\n    doRemove?: boolean,\n  ) => {\n    if (__DEV__ && instance.type.__hmrId) {\n      unregisterHMR(instance)\n    }\n\n    const { bum, scope, job, subTree, um, m, a } = instance\n    invalidateMount(m)\n    invalidateMount(a)\n\n    // beforeUnmount hook\n    if (bum) {\n      invokeArrayFns(bum)\n    }\n\n    if (\n      __COMPAT__ &&\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n    ) {\n      instance.emit('hook:beforeDestroy')\n    }\n\n    // stop effects in component scope\n    scope.stop()\n\n    // job may be null if a component is unmounted before its async\n    // setup has resolved.\n    if (job) {\n      // so that scheduler will no longer invoke it\n      job.flags! |= SchedulerJobFlags.DISPOSED\n      unmount(subTree, instance, parentSuspense, doRemove)\n    }\n    // unmounted hook\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense)\n    }\n    if (\n      __COMPAT__ &&\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\n    ) {\n      queuePostRenderEffect(\n        () => instance.emit('hook:destroyed'),\n        parentSuspense,\n      )\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true\n    }, parentSuspense)\n\n    // A component with async dep inside a pending suspense is unmounted before\n    // its async dep resolves. This should remove the dep from the suspense, and\n    // cause the suspense to resolve immediately if that was the last dep.\n    if (\n      __FEATURE_SUSPENSE__ &&\n      parentSuspense &&\n      parentSuspense.pendingBranch &&\n      !parentSuspense.isUnmounted &&\n      instance.asyncDep &&\n      !instance.asyncResolved &&\n      instance.suspenseId === parentSuspense.pendingId\n    ) {\n      parentSuspense.deps--\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve()\n      }\n    }\n\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance)\n    }\n  }\n\n  const unmountChildren: UnmountChildrenFn = (\n    children,\n    parentComponent,\n    parentSuspense,\n    doRemove = false,\n    optimized = false,\n    start = 0,\n  ) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\n    }\n  }\n\n  const getNextHostNode: NextFn = vnode => {\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\n      return getNextHostNode(vnode.component!.subTree)\n    }\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\n      return vnode.suspense!.next()\n    }\n    const el = hostNextSibling((vnode.anchor || vnode.el)!)\n    // #9071, #9313\n    // teleported content can mess up nextSibling searches during patch so\n    // we need to skip them during nextSibling search\n    const teleportEnd = el && el[TeleportEndKey]\n    return teleportEnd ? hostNextSibling(teleportEnd) : el\n  }\n\n  let isFlushing = false\n  const render: RootRenderFunction = (vnode, container, namespace) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true)\n      }\n    } else {\n      patch(\n        container._vnode || null,\n        vnode,\n        container,\n        null,\n        null,\n        null,\n        namespace,\n      )\n    }\n    container._vnode = vnode\n    if (!isFlushing) {\n      isFlushing = true\n      flushPreFlushCbs()\n      flushPostFlushCbs()\n      isFlushing = false\n    }\n  }\n\n  const internals: RendererInternals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options,\n  }\n\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\n  if (createHydrationFns) {\n    ;[hydrate, hydrateNode] = createHydrationFns(\n      internals as RendererInternals<Node, Element>,\n    )\n  }\n\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate),\n  }\n}\n\nfunction resolveChildrenNamespace(\n  { type, props }: VNode,\n  currentNamespace: ElementNamespace,\n): ElementNamespace {\n  return (currentNamespace === 'svg' && type === 'foreignObject') ||\n    (currentNamespace === 'mathml' &&\n      type === 'annotation-xml' &&\n      props &&\n      props.encoding &&\n      props.encoding.includes('html'))\n    ? undefined\n    : currentNamespace\n}\n\nfunction toggleRecurse(\n  { effect, job }: ComponentInternalInstance,\n  allowed: boolean,\n) {\n  if (allowed) {\n    effect.flags |= EffectFlags.ALLOW_RECURSE\n    job.flags! |= SchedulerJobFlags.ALLOW_RECURSE\n  } else {\n    effect.flags &= ~EffectFlags.ALLOW_RECURSE\n    job.flags! &= ~SchedulerJobFlags.ALLOW_RECURSE\n  }\n}\n\nexport function needTransition(\n  parentSuspense: SuspenseBoundary | null,\n  transition: TransitionHooks | null,\n): boolean | null {\n  return (\n    (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\n    transition &&\n    !transition.persisted\n  )\n}\n\n/**\n * #1156\n * When a component is HMR-enabled, we need to make sure that all static nodes\n * inside a block also inherit the DOM element from the previous tree so that\n * HMR updates (which are full updates) can retrieve the element for patching.\n *\n * #2080\n * Inside keyed `template` fragment static children, if a fragment is moved,\n * the children will always be moved. Therefore, in order to ensure correct move\n * position, el should be inherited from previous nodes.\n */\nexport function traverseStaticChildren(\n  n1: VNode,\n  n2: VNode,\n  shallow = false,\n): void {\n  const ch1 = n1.children\n  const ch2 = n2.children\n  if (isArray(ch1) && isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      // this is only called in the optimized path so array children are\n      // guaranteed to be vnodes\n      const c1 = ch1[i] as VNode\n      let c2 = ch2[i] as VNode\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.NEED_HYDRATION) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\n          c2.el = c1.el\n        }\n        if (!shallow && c2.patchFlag !== PatchFlags.BAIL)\n          traverseStaticChildren(c1, c2)\n      }\n      // #6852 also inherit for text nodes\n      if (c2.type === Text) {\n        c2.el = c1.el\n      }\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\n      // would have received .el during block patch)\n      if (__DEV__ && c2.type === Comment && !c2.el) {\n        c2.el = c1.el\n      }\n    }\n  }\n}\n\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\nfunction getSequence(arr: number[]): number[] {\n  const p = arr.slice()\n  const result = [0]\n  let i, j, u, v, c\n  const len = arr.length\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i]\n    if (arrI !== 0) {\n      j = result[result.length - 1]\n      if (arr[j] < arrI) {\n        p[i] = j\n        result.push(i)\n        continue\n      }\n      u = 0\n      v = result.length - 1\n      while (u < v) {\n        c = (u + v) >> 1\n        if (arr[result[c]] < arrI) {\n          u = c + 1\n        } else {\n          v = c\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1]\n        }\n        result[u] = i\n      }\n    }\n  }\n  u = result.length\n  v = result[u - 1]\n  while (u-- > 0) {\n    result[u] = v\n    v = p[v]\n  }\n  return result\n}\n\nfunction locateNonHydratedAsyncRoot(\n  instance: ComponentInternalInstance,\n): ComponentInternalInstance | undefined {\n  const subComponent = instance.subTree.component\n  if (subComponent) {\n    if (subComponent.asyncDep && !subComponent.asyncResolved) {\n      return subComponent\n    } else {\n      return locateNonHydratedAsyncRoot(subComponent)\n    }\n  }\n}\n\nexport function invalidateMount(hooks: LifecycleHook): void {\n  if (hooks) {\n    for (let i = 0; i < hooks.length; i++)\n      hooks[i].flags! |= SchedulerJobFlags.DISPOSED\n  }\n}\n", "import {\n  Comment,\n  type VNode,\n  type VNodeProps,\n  closeBlock,\n  createVNode,\n  currentBlock,\n  isBlockTreeEnabled,\n  isSameVNodeType,\n  normalizeVNode,\n  openBlock,\n} from '../vnode'\nimport { ShapeFlags, isArray, isFunction, toNumber } from '@vue/shared'\nimport { type ComponentInternalInstance, handleSetupResult } from '../component'\nimport type { Slots } from '../componentSlots'\nimport {\n  type ElementNamespace,\n  MoveType,\n  type RendererElement,\n  type RendererInternals,\n  type RendererNode,\n  type SetupRenderEffectFn,\n} from '../renderer'\nimport { queuePostFlushCb } from '../scheduler'\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\nimport {\n  assertNumber,\n  popWarningContext,\n  pushWarningContext,\n  warn,\n} from '../warning'\nimport { ErrorCodes, handleError } from '../errorHandling'\nimport { NULL_DYNAMIC_COMPONENT } from '../helpers/resolveAssets'\n\nexport interface SuspenseProps {\n  onResolve?: () => void\n  onPending?: () => void\n  onFallback?: () => void\n  timeout?: string | number\n  /**\n   * Allow suspense to be captured by parent suspense\n   *\n   * @default false\n   */\n  suspensible?: boolean\n}\n\nexport const isSuspense = (type: any): boolean => type.__isSuspense\n\n// incrementing unique id for every pending branch\nlet suspenseId = 0\n\n/**\n * For testing only\n */\nexport const resetSuspenseId = (): number => (suspenseId = 0)\n\n// Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\nexport const SuspenseImpl = {\n  name: 'Suspense',\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n    // platform-specific impl passed from renderer\n    rendererInternals: RendererInternals,\n  ): void {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals,\n      )\n    } else {\n      // #8678 if the current suspense needs to be patched and parentSuspense has\n      // not been resolved. this means that both the current suspense and parentSuspense\n      // need to be patched. because parentSuspense's pendingBranch includes the\n      // current suspense, it will be processed twice:\n      //  1. current patch\n      //  2. mounting along with the pendingBranch of parentSuspense\n      // it is necessary to skip the current patch to avoid multiple mounts\n      // of inner components.\n      if (\n        parentSuspense &&\n        parentSuspense.deps > 0 &&\n        !n1.suspense!.isInFallback\n      ) {\n        n2.suspense = n1.suspense!\n        n2.suspense.vnode = n2\n        n2.el = n1.el\n        return\n      }\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        namespace,\n        slotScopeIds,\n        optimized,\n        rendererInternals,\n      )\n    }\n  },\n  hydrate: hydrateSuspense as typeof hydrateSuspense,\n  normalize: normalizeSuspenseChildren as typeof normalizeSuspenseChildren,\n}\n\n// Force-casted public typing for h and TSX props inference\nexport const Suspense = (__FEATURE_SUSPENSE__\n  ? SuspenseImpl\n  : null) as unknown as {\n  __isSuspense: true\n  new (): {\n    $props: VNodeProps & SuspenseProps\n    $slots: {\n      default(): VNode[]\n      fallback(): VNode[]\n    }\n  }\n}\n\nfunction triggerEvent(\n  vnode: VNode,\n  name: 'onResolve' | 'onPending' | 'onFallback',\n) {\n  const eventListener = vnode.props && vnode.props[name]\n  if (isFunction(eventListener)) {\n    eventListener()\n  }\n}\n\nfunction mountSuspense(\n  vnode: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  rendererInternals: RendererInternals,\n) {\n  const {\n    p: patch,\n    o: { createElement },\n  } = rendererInternals\n  const hiddenContainer = createElement('div')\n  const suspense = (vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n  ))\n\n  // start mounting the content subtree in an off-dom container\n  patch(\n    null,\n    (suspense.pendingBranch = vnode.ssContent!),\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    namespace,\n    slotScopeIds,\n  )\n  // now check if we have encountered any async deps\n  if (suspense.deps > 0) {\n    // has async\n    // invoke @fallback event\n    triggerEvent(vnode, 'onPending')\n    triggerEvent(vnode, 'onFallback')\n\n    // mount the fallback tree\n    patch(\n      null,\n      vnode.ssFallback!,\n      container,\n      anchor,\n      parentComponent,\n      null, // fallback tree will not have suspense context\n      namespace,\n      slotScopeIds,\n    )\n    setActiveBranch(suspense, vnode.ssFallback!)\n  } else {\n    // Suspense has no async deps. Just resolve.\n    suspense.resolve(false, true)\n  }\n}\n\nfunction patchSuspense(\n  n1: VNode,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals,\n) {\n  const suspense = (n2.suspense = n1.suspense)!\n  suspense.vnode = n2\n  n2.el = n1.el\n  const newBranch = n2.ssContent!\n  const newFallback = n2.ssFallback!\n\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      // same root type but content may have changed.\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n      if (suspense.deps <= 0) {\n        suspense.resolve()\n      } else if (isInFallback) {\n        // It's possible that the app is in hydrating state when patching the\n        // suspense instance. If someone updates the dependency during component\n        // setup in children of suspense boundary, that would be problemtic\n        // because we aren't actually showing a fallback content when\n        // patchSuspense is called. In such case, patch of fallback content\n        // should be no op\n        if (!isHydrating) {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null, // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n          setActiveBranch(suspense, newFallback)\n        }\n      }\n    } else {\n      // toggled before pending tree is resolved\n      // increment pending ID. this is used to invalidate async callbacks\n      suspense.pendingId = suspenseId++\n      if (isHydrating) {\n        // if toggled before hydration is finished, the current DOM tree is\n        // no longer valid. set it as the active branch so it will be unmounted\n        // when resolved\n        suspense.isHydrating = false\n        suspense.activeBranch = pendingBranch\n      } else {\n        unmount(pendingBranch, parentComponent, suspense)\n      }\n      // reset suspense state\n      suspense.deps = 0\n      // discard effects from pending branch\n      suspense.effects.length = 0\n      // discard previous container\n      suspense.hiddenContainer = createElement('div')\n\n      if (isInFallback) {\n        // already in fallback state\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        if (suspense.deps <= 0) {\n          suspense.resolve()\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null, // fallback tree will not have suspense context\n            namespace,\n            slotScopeIds,\n            optimized,\n          )\n          setActiveBranch(suspense, newFallback)\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        // toggled \"back\" to current active branch\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        // force resolve\n        suspense.resolve(true)\n      } else {\n        // switched to a 3rd branch\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        if (suspense.deps <= 0) {\n          suspense.resolve()\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      // root did not change, just normal patch\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n      setActiveBranch(suspense, newBranch)\n    } else {\n      // root node toggled\n      // invoke @pending event\n      triggerEvent(n2, 'onPending')\n      // mount pending branch in off-dom container\n      suspense.pendingBranch = newBranch\n      if (newBranch.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\n        suspense.pendingId = newBranch.component!.suspenseId!\n      } else {\n        suspense.pendingId = suspenseId++\n      }\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n      )\n      if (suspense.deps <= 0) {\n        // incoming branch has no async deps, resolve now.\n        suspense.resolve()\n      } else {\n        const { timeout, pendingId } = suspense\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback)\n            }\n          }, timeout)\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback)\n        }\n      }\n    }\n  }\n}\n\nexport interface SuspenseBoundary {\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\n  parent: SuspenseBoundary | null\n  parentComponent: ComponentInternalInstance | null\n  namespace: ElementNamespace\n  container: RendererElement\n  hiddenContainer: RendererElement\n  activeBranch: VNode | null\n  pendingBranch: VNode | null\n  deps: number\n  pendingId: number\n  timeout: number\n  isInFallback: boolean\n  isHydrating: boolean\n  isUnmounted: boolean\n  effects: Function[]\n  resolve(force?: boolean, sync?: boolean): void\n  fallback(fallbackVNode: VNode): void\n  move(\n    container: RendererElement,\n    anchor: RendererNode | null,\n    type: MoveType,\n  ): void\n  next(): RendererNode | null\n  registerDep(\n    instance: ComponentInternalInstance,\n    setupRenderEffect: SetupRenderEffectFn,\n    optimized: boolean,\n  ): void\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\n}\n\nlet hasWarned = false\n\nfunction createSuspenseBoundary(\n  vnode: VNode,\n  parentSuspense: SuspenseBoundary | null,\n  parentComponent: ComponentInternalInstance | null,\n  container: RendererElement,\n  hiddenContainer: RendererElement,\n  anchor: RendererNode | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  rendererInternals: RendererInternals,\n  isHydrating = false,\n): SuspenseBoundary {\n  /* v8 ignore start */\n  if (__DEV__ && !__TEST__ && !hasWarned) {\n    hasWarned = true\n    // @ts-expect-error `console.info` cannot be null error\n    // eslint-disable-next-line no-console\n    console[console.info ? 'info' : 'log'](\n      `<Suspense> is an experimental feature and its API will likely change.`,\n    )\n  }\n  /* v8 ignore stop */\n\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove },\n  } = rendererInternals\n\n  // if set `suspensible: true`, set the current suspense as a dep of parent suspense\n  let parentSuspenseId: number | undefined\n  const isSuspensible = isVNodeSuspensible(vnode)\n  if (isSuspensible) {\n    if (parentSuspense && parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId\n      parentSuspense.deps++\n    }\n  }\n\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : undefined\n  if (__DEV__) {\n    assertNumber(timeout, `Suspense timeout`)\n  }\n\n  const initialAnchor = anchor\n  const suspense: SuspenseBoundary = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    namespace,\n    container,\n    hiddenContainer,\n    deps: 0,\n    pendingId: suspenseId++,\n    timeout: typeof timeout === 'number' ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: !isHydrating,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n\n    resolve(resume = false, sync = false) {\n      if (__DEV__) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`,\n          )\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`,\n          )\n        }\n      }\n      const {\n        vnode,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent,\n        container,\n      } = suspense\n\n      // if there's a transition happening we need to wait it to finish.\n      let delayEnter: boolean | null = false\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false\n      } else if (!resume) {\n        delayEnter =\n          activeBranch &&\n          pendingBranch!.transition &&\n          pendingBranch!.transition.mode === 'out-in'\n        if (delayEnter) {\n          activeBranch!.transition!.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(\n                pendingBranch!,\n                container,\n                anchor === initialAnchor ? next(activeBranch!) : anchor,\n                MoveType.ENTER,\n              )\n              queuePostFlushCb(effects)\n            }\n          }\n        }\n        // unmount current active tree\n        if (activeBranch) {\n          // if the fallback tree was mounted, it may have been moved\n          // as part of a parent suspense. get the latest anchor for insertion\n          // #8105 if `delayEnter` is true, it means that the mounting of\n          // `activeBranch` will be delayed. if the branch switches before\n          // transition completes, both `activeBranch` and `pendingBranch` may\n          // coexist in the `hiddenContainer`. This could result in\n          // `next(activeBranch!)` obtaining an incorrect anchor\n          // (got `pendingBranch.el`).\n          // Therefore, after the mounting of activeBranch is completed,\n          // it is necessary to get the latest anchor.\n          if (parentNode(activeBranch.el!) === container) {\n            anchor = next(activeBranch)\n          }\n          unmount(activeBranch, parentComponent, suspense, true)\n        }\n        if (!delayEnter) {\n          // move content from off-dom container to actual container\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\n        }\n      }\n\n      setActiveBranch(suspense, pendingBranch!)\n      suspense.pendingBranch = null\n      suspense.isInFallback = false\n\n      // flush buffered effects\n      // check if there is a pending parent suspense\n      let parent = suspense.parent\n      let hasUnresolvedAncestor = false\n      while (parent) {\n        if (parent.pendingBranch) {\n          // found a pending parent suspense, merge buffered post jobs\n          // into that parent\n          parent.effects.push(...effects)\n          hasUnresolvedAncestor = true\n          break\n        }\n        parent = parent.parent\n      }\n      // no pending parent suspense nor transition, flush all jobs\n      if (!hasUnresolvedAncestor && !delayEnter) {\n        queuePostFlushCb(effects)\n      }\n      suspense.effects = []\n\n      // resolve parent suspense if all async deps are resolved\n      if (isSuspensible) {\n        if (\n          parentSuspense &&\n          parentSuspense.pendingBranch &&\n          parentSuspenseId === parentSuspense.pendingId\n        ) {\n          parentSuspense.deps--\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve()\n          }\n        }\n      }\n\n      // invoke @resolve event\n      triggerEvent(vnode, 'onResolve')\n    },\n\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return\n      }\n\n      const { vnode, activeBranch, parentComponent, container, namespace } =\n        suspense\n\n      // invoke @fallback event\n      triggerEvent(vnode, 'onFallback')\n\n      const anchor = next(activeBranch!)\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return\n        }\n        // mount the fallback tree\n        patch(\n          null,\n          fallbackVNode,\n          container,\n          anchor,\n          parentComponent,\n          null, // fallback tree will not have suspense context\n          namespace,\n          slotScopeIds,\n          optimized,\n        )\n        setActiveBranch(suspense, fallbackVNode)\n      }\n\n      const delayEnter =\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\n      if (delayEnter) {\n        activeBranch!.transition!.afterLeave = mountFallback\n      }\n      suspense.isInFallback = true\n\n      // unmount current active branch\n      unmount(\n        activeBranch!,\n        parentComponent,\n        null, // no suspense so unmount hooks fire now\n        true, // shouldRemove\n      )\n\n      if (!delayEnter) {\n        mountFallback()\n      }\n    },\n\n    move(container, anchor, type) {\n      suspense.activeBranch &&\n        move(suspense.activeBranch, container, anchor, type)\n      suspense.container = container\n    },\n\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch)\n    },\n\n    registerDep(instance, setupRenderEffect, optimized) {\n      const isInPendingSuspense = !!suspense.pendingBranch\n      if (isInPendingSuspense) {\n        suspense.deps++\n      }\n      const hydratedEl = instance.vnode.el\n      instance\n        .asyncDep!.catch(err => {\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\n        })\n        .then(asyncSetupResult => {\n          // retry when the setup() promise resolves.\n          // component may have been unmounted before resolve.\n          if (\n            instance.isUnmounted ||\n            suspense.isUnmounted ||\n            suspense.pendingId !== instance.suspenseId\n          ) {\n            return\n          }\n          // retry from this component\n          instance.asyncResolved = true\n          const { vnode } = instance\n          if (__DEV__) {\n            pushWarningContext(vnode)\n          }\n          handleSetupResult(instance, asyncSetupResult, false)\n          if (hydratedEl) {\n            // vnode may have been replaced if an update happened before the\n            // async dep is resolved.\n            vnode.el = hydratedEl\n          }\n          const placeholder = !hydratedEl && instance.subTree.el\n          setupRenderEffect(\n            instance,\n            vnode,\n            // component may have been moved before resolve.\n            // if this is not a hydration, instance.subTree will be the comment\n            // placeholder.\n            parentNode(hydratedEl || instance.subTree.el!)!,\n            // anchor will not be used if this is hydration, so only need to\n            // consider the comment placeholder case.\n            hydratedEl ? null : next(instance.subTree),\n            suspense,\n            namespace,\n            optimized,\n          )\n          if (placeholder) {\n            remove(placeholder)\n          }\n          updateHOCHostEl(instance, vnode.el)\n          if (__DEV__) {\n            popWarningContext()\n          }\n          // only decrease deps count if suspense is not already resolved\n          if (isInPendingSuspense && --suspense.deps === 0) {\n            suspense.resolve()\n          }\n        })\n    },\n\n    unmount(parentSuspense, doRemove) {\n      suspense.isUnmounted = true\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense,\n          doRemove,\n        )\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense,\n          doRemove,\n        )\n      }\n    },\n  }\n\n  return suspense\n}\n\nfunction hydrateSuspense(\n  node: Node,\n  vnode: VNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  rendererInternals: RendererInternals,\n  hydrateNode: (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => Node | null,\n): Node | null {\n  const suspense = (vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode!,\n    // eslint-disable-next-line no-restricted-globals\n    document.createElement('div'),\n    null,\n    namespace,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true /* hydrating */,\n  ))\n  // there are two possible scenarios for server-rendered suspense:\n  // - success: ssr content should be fully resolved\n  // - failure: ssr content should be the fallback branch.\n  // however, on the client we don't really know if it has failed or not\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\n  // need to construct a suspense boundary first\n  const result = hydrateNode(\n    node,\n    (suspense.pendingBranch = vnode.ssContent!),\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized,\n  )\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true)\n  }\n  return result\n}\n\nfunction normalizeSuspenseChildren(vnode: VNode): void {\n  const { shapeFlag, children } = vnode\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? (children as Slots).default : children,\n  )\n  vnode.ssFallback = isSlotChildren\n    ? normalizeSuspenseSlot((children as Slots).fallback)\n    : createVNode(Comment)\n}\n\nfunction normalizeSuspenseSlot(s: any) {\n  let block: VNode[] | null | undefined\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c\n    if (trackBlock) {\n      // disableTracking: false\n      // allow block tracking for compiled slots\n      // (see ./componentRenderContext.ts)\n      s._d = false\n      openBlock()\n    }\n    s = s()\n    if (trackBlock) {\n      s._d = true\n      block = currentBlock\n      closeBlock()\n    }\n  }\n  if (isArray(s)) {\n    const singleChild = filterSingleRoot(s)\n    if (\n      __DEV__ &&\n      !singleChild &&\n      s.filter(child => child !== NULL_DYNAMIC_COMPONENT).length > 0\n    ) {\n      warn(`<Suspense> slots expect a single root node.`)\n    }\n    s = singleChild\n  }\n  s = normalizeVNode(s)\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter(c => c !== s)\n  }\n  return s\n}\n\nexport function queueEffectWithSuspense(\n  fn: Function | Function[],\n  suspense: SuspenseBoundary | null,\n): void {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn)\n    } else {\n      suspense.effects.push(fn)\n    }\n  } else {\n    queuePostFlushCb(fn)\n  }\n}\n\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\n  suspense.activeBranch = branch\n  const { vnode, parentComponent } = suspense\n  let el = branch.el\n  // if branch has no el after patch, it's a HOC wrapping async components\n  // drill and locate the placeholder comment node\n  while (!el && branch.component) {\n    branch = branch.component.subTree\n    el = branch.el\n  }\n  vnode.el = el\n  // in case suspense is the root node of a component,\n  // recursively update the HOC el\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el\n    updateHOCHostEl(parentComponent, el)\n  }\n}\n\nfunction isVNodeSuspensible(vnode: VNode) {\n  const suspensible = vnode.props && vnode.props.suspensible\n  return suspensible != null && suspensible !== false\n}\n", "import {\n  EMPTY_ARR,\n  PatchFlags,\n  ShapeFlags,\n  SlotFlags,\n  extend,\n  isArray,\n  isFunction,\n  isObject,\n  isOn,\n  isString,\n  normalizeClass,\n  normalizeStyle,\n} from '@vue/shared'\nimport {\n  type ClassComponent,\n  type Component,\n  type ComponentInternalInstance,\n  type ConcreteComponent,\n  type Data,\n  isClassComponent,\n} from './component'\nimport type { RawSlots } from './componentSlots'\nimport {\n  type ReactiveFlags,\n  type Ref,\n  isProxy,\n  isRef,\n  toRaw,\n} from '@vue/reactivity'\nimport type { AppContext } from './apiCreateApp'\nimport {\n  type Suspense,\n  type SuspenseBoundary,\n  type SuspenseImpl,\n  isSuspense,\n} from './components/Suspense'\nimport type { DirectiveBinding } from './directives'\nimport {\n  type TransitionHooks,\n  setTransitionHooks,\n} from './components/BaseTransition'\nimport { warn } from './warning'\nimport {\n  type Teleport,\n  type TeleportImpl,\n  isTeleport,\n} from './components/Teleport'\nimport {\n  currentRenderingInstance,\n  currentScopeId,\n} from './componentRenderContext'\nimport type { RendererElement, RendererNode } from './renderer'\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\nimport { hmrDirtyComponents } from './hmr'\nimport { convertLegacyComponent } from './compat/component'\nimport { convertLegacyVModelProps } from './compat/componentVModel'\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\nimport type { ComponentPublicInstance } from './componentPublicInstance'\nimport { isInternalObject } from './internalObject'\n\nexport const Fragment = Symbol.for('v-fgt') as any as {\n  __isFragment: true\n  new (): {\n    $props: VNodeProps\n  }\n}\nexport const Text: unique symbol = Symbol.for('v-txt')\nexport const Comment: unique symbol = Symbol.for('v-cmt')\nexport const Static: unique symbol = Symbol.for('v-stc')\n\nexport type VNodeTypes =\n  | string\n  | VNode\n  | Component\n  | typeof Text\n  | typeof Static\n  | typeof Comment\n  | typeof Fragment\n  | typeof Teleport\n  | typeof TeleportImpl\n  | typeof Suspense\n  | typeof SuspenseImpl\n\nexport type VNodeRef =\n  | string\n  | Ref\n  | ((\n      ref: Element | ComponentPublicInstance | null,\n      refs: Record<string, any>,\n    ) => void)\n\nexport type VNodeNormalizedRefAtom = {\n  /**\n   * component instance\n   */\n  i: ComponentInternalInstance\n  /**\n   * Actual ref\n   */\n  r: VNodeRef\n  /**\n   * setup ref key\n   */\n  k?: string\n  /**\n   * refInFor marker\n   */\n  f?: boolean\n}\n\nexport type VNodeNormalizedRef =\n  | VNodeNormalizedRefAtom\n  | VNodeNormalizedRefAtom[]\n\ntype VNodeMountHook = (vnode: VNode) => void\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\nexport type VNodeHook =\n  | VNodeMountHook\n  | VNodeUpdateHook\n  | VNodeMountHook[]\n  | VNodeUpdateHook[]\n\n// https://github.com/microsoft/TypeScript/issues/33099\nexport type VNodeProps = {\n  key?: PropertyKey\n  ref?: VNodeRef\n  ref_for?: boolean\n  ref_key?: string\n\n  // vnode hooks\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\n}\n\ntype VNodeChildAtom =\n  | VNode\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n  | void\n\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\n\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\n\nexport type VNodeNormalizedChildren =\n  | string\n  | VNodeArrayChildren\n  | RawSlots\n  | null\n\nexport interface VNode<\n  HostNode = RendererNode,\n  HostElement = RendererElement,\n  ExtraProps = { [key: string]: any },\n> {\n  /**\n   * @internal\n   */\n  __v_isVNode: true\n\n  /**\n   * @internal\n   */\n  [ReactiveFlags.SKIP]: true\n\n  type: VNodeTypes\n  props: (VNodeProps & ExtraProps) | null\n  key: PropertyKey | null\n  ref: VNodeNormalizedRef | null\n  /**\n   * SFC only. This is assigned on vnode creation using currentScopeId\n   * which is set alongside currentRenderingInstance.\n   */\n  scopeId: string | null\n  /**\n   * SFC only. This is assigned to:\n   * - Slot fragment vnodes with :slotted SFC styles.\n   * - Component vnodes (during patch/hydration) so that its root node can\n   *   inherit the component's slotScopeIds\n   * @internal\n   */\n  slotScopeIds: string[] | null\n  children: VNodeNormalizedChildren\n  component: ComponentInternalInstance | null\n  dirs: DirectiveBinding[] | null\n  transition: TransitionHooks<HostElement> | null\n\n  // DOM\n  el: HostNode | null\n  anchor: HostNode | null // fragment anchor\n  target: HostElement | null // teleport target\n  targetStart: HostNode | null // teleport target start anchor\n  targetAnchor: HostNode | null // teleport target anchor\n  /**\n   * number of elements contained in a static vnode\n   * @internal\n   */\n  staticCount: number\n\n  // suspense\n  suspense: SuspenseBoundary | null\n  /**\n   * @internal\n   */\n  ssContent: VNode | null\n  /**\n   * @internal\n   */\n  ssFallback: VNode | null\n\n  // optimization only\n  shapeFlag: number\n  patchFlag: number\n  /**\n   * @internal\n   */\n  dynamicProps: string[] | null\n  /**\n   * @internal\n   */\n  dynamicChildren: (VNode[] & { hasOnce?: boolean }) | null\n\n  // application root node only\n  appContext: AppContext | null\n\n  /**\n   * @internal lexical scope owner instance\n   */\n  ctx: ComponentInternalInstance | null\n\n  /**\n   * @internal attached by v-memo\n   */\n  memo?: any[]\n  /**\n   * @internal index for cleaning v-memo cache\n   */\n  cacheIndex?: number\n  /**\n   * @internal __COMPAT__ only\n   */\n  isCompatRoot?: true\n  /**\n   * @internal custom element interception hook\n   */\n  ce?: (instance: ComponentInternalInstance) => void\n}\n\n// Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\nexport const blockStack: VNode['dynamicChildren'][] = []\nexport let currentBlock: VNode['dynamicChildren'] = null\n\n/**\n * Open a block.\n * This must be called before `createBlock`. It cannot be part of `createBlock`\n * because the children of the block are evaluated before `createBlock` itself\n * is called. The generated code typically looks like this:\n *\n * ```js\n * function render() {\n *   return (openBlock(),createBlock('div', null, [...]))\n * }\n * ```\n * disableTracking is true when creating a v-for fragment block, since a v-for\n * fragment always diffs its children.\n *\n * @private\n */\nexport function openBlock(disableTracking = false): void {\n  blockStack.push((currentBlock = disableTracking ? null : []))\n}\n\nexport function closeBlock(): void {\n  blockStack.pop()\n  currentBlock = blockStack[blockStack.length - 1] || null\n}\n\n// Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\nexport let isBlockTreeEnabled = 1\n\n/**\n * Block tracking sometimes needs to be disabled, for example during the\n * creation of a tree that needs to be cached by v-once. The compiler generates\n * code like this:\n *\n * ``` js\n * _cache[1] || (\n *   setBlockTracking(-1, true),\n *   _cache[1] = createVNode(...),\n *   setBlockTracking(1),\n *   _cache[1]\n * )\n * ```\n *\n * @private\n */\nexport function setBlockTracking(value: number, inVOnce = false): void {\n  isBlockTreeEnabled += value\n  if (value < 0 && currentBlock && inVOnce) {\n    // mark current block so it doesn't take fast path and skip possible\n    // nested components during unmount\n    currentBlock.hasOnce = true\n  }\n}\n\nfunction setupBlock(vnode: VNode) {\n  // save current block children on the block vnode\n  vnode.dynamicChildren =\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\n  // close block\n  closeBlock()\n  // a block is always going to be patched, so track it as a child of its\n  // parent block\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode)\n  }\n  return vnode\n}\n\n/**\n * @private\n */\nexport function createElementBlock(\n  type: string | typeof Fragment,\n  props?: Record<string, any> | null,\n  children?: any,\n  patchFlag?: number,\n  dynamicProps?: string[],\n  shapeFlag?: number,\n): VNode {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true /* isBlock */,\n    ),\n  )\n}\n\n/**\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\n * A block root keeps track of dynamic nodes within the block in the\n * `dynamicChildren` array.\n *\n * @private\n */\nexport function createBlock(\n  type: VNodeTypes | ClassComponent,\n  props?: Record<string, any> | null,\n  children?: any,\n  patchFlag?: number,\n  dynamicProps?: string[],\n): VNode {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true /* isBlock: prevent a block from tracking itself */,\n    ),\n  )\n}\n\nexport function isVNode(value: any): value is VNode {\n  return value ? value.__v_isVNode === true : false\n}\n\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\n  if (__DEV__ && n2.shapeFlag & ShapeFlags.COMPONENT && n1.component) {\n    const dirtyInstances = hmrDirtyComponents.get(n2.type as ConcreteComponent)\n    if (dirtyInstances && dirtyInstances.has(n1.component)) {\n      // #7042, ensure the vnode being unmounted during HMR\n      // bitwise operations to remove keep alive flags\n      n1.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\n      n2.shapeFlag &= ~ShapeFlags.COMPONENT_KEPT_ALIVE\n      // HMR only: if the component has been hot-updated, force a reload.\n      return false\n    }\n  }\n  return n1.type === n2.type && n1.key === n2.key\n}\n\nlet vnodeArgsTransformer:\n  | ((\n      args: Parameters<typeof _createVNode>,\n      instance: ComponentInternalInstance | null,\n    ) => Parameters<typeof _createVNode>)\n  | undefined\n\n/**\n * Internal API for registering an arguments transform for createVNode\n * used for creating stubs in the test-utils\n * It is *internal* but needs to be exposed for test-utils to pick up proper\n * typings\n */\nexport function transformVNodeArgs(\n  transformer?: typeof vnodeArgsTransformer,\n): void {\n  vnodeArgsTransformer = transformer\n}\n\nconst createVNodeWithArgsTransform = (\n  ...args: Parameters<typeof _createVNode>\n): VNode => {\n  return _createVNode(\n    ...(vnodeArgsTransformer\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\n      : args),\n  )\n}\n\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\n  key != null ? key : null\n\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for,\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\n  if (typeof ref === 'number') {\n    ref = '' + ref\n  }\n  return (\n    ref != null\n      ? isString(ref) || isRef(ref) || isFunction(ref)\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\n        : ref\n      : null\n  ) as any\n}\n\nfunction createBaseVNode(\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\n  props: (Data & VNodeProps) | null = null,\n  children: unknown = null,\n  patchFlag = 0,\n  dynamicProps: string[] | null = null,\n  shapeFlag: number = type === Fragment ? 0 : ShapeFlags.ELEMENT,\n  isBlockNode = false,\n  needFullChildrenNormalization = false,\n): VNode {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetStart: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance,\n  } as VNode\n\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children)\n    // normalize suspense children\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\n      ;(type as typeof SuspenseImpl).normalize(vnode)\n    }\n  } else if (children) {\n    // compiled element vnode - if children is passed, only possible types are\n    // string or Array.\n    vnode.shapeFlag |= isString(children)\n      ? ShapeFlags.TEXT_CHILDREN\n      : ShapeFlags.ARRAY_CHILDREN\n  }\n\n  // validate key\n  if (__DEV__ && vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\n  }\n\n  // track vnode for block tree\n  if (\n    isBlockTreeEnabled > 0 &&\n    // avoid a block node from tracking itself\n    !isBlockNode &&\n    // has current parent block\n    currentBlock &&\n    // presence of a patch flag indicates this node needs patching on updates.\n    // component nodes also should always be patched, because even if the\n    // component doesn't need to update, it needs to persist the instance on to\n    // the next vnode so that it can be properly unmounted later.\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\n    // the EVENTS flag is only for hydration and if it is the only flag, the\n    // vnode should not be considered dynamic due to handler caching.\n    vnode.patchFlag !== PatchFlags.NEED_HYDRATION\n  ) {\n    currentBlock.push(vnode)\n  }\n\n  if (__COMPAT__) {\n    convertLegacyVModelProps(vnode)\n    defineLegacyVNodeProperties(vnode)\n  }\n\n  return vnode\n}\n\nexport { createBaseVNode as createElementVNode }\n\nexport const createVNode = (\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode\n) as typeof _createVNode\n\nfunction _createVNode(\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\n  props: (Data & VNodeProps) | null = null,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null,\n  isBlockNode = false,\n): VNode {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (__DEV__ && !type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\n    }\n    type = Comment\n  }\n\n  if (isVNode(type)) {\n    // createVNode receiving an existing vnode. This happens in cases like\n    // <component :is=\"vnode\"/>\n    // #2078 make sure to merge refs during the clone instead of overwriting it\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\n    if (children) {\n      normalizeChildren(cloned, children)\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\n        currentBlock[currentBlock.indexOf(type)] = cloned\n      } else {\n        currentBlock.push(cloned)\n      }\n    }\n    cloned.patchFlag = PatchFlags.BAIL\n    return cloned\n  }\n\n  // class component normalization.\n  if (isClassComponent(type)) {\n    type = type.__vccOpts\n  }\n\n  // 2.x async/functional component compat\n  if (__COMPAT__) {\n    type = convertLegacyComponent(type, currentRenderingInstance)\n  }\n\n  // class & style normalization.\n  if (props) {\n    // for reactive or proxy objects, we need to clone it to enable mutation.\n    props = guardReactiveProps(props)!\n    let { class: klass, style } = props\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass)\n    }\n    if (isObject(style)) {\n      // reactive state objects need to be cloned since they are likely to be\n      // mutated\n      if (isProxy(style) && !isArray(style)) {\n        style = extend({}, style)\n      }\n      props.style = normalizeStyle(style)\n    }\n  }\n\n  // encode the vnode type information into a bitmap\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\n      ? ShapeFlags.SUSPENSE\n      : isTeleport(type)\n        ? ShapeFlags.TELEPORT\n        : isObject(type)\n          ? ShapeFlags.STATEFUL_COMPONENT\n          : isFunction(type)\n            ? ShapeFlags.FUNCTIONAL_COMPONENT\n            : 0\n\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\n    type = toRaw(type)\n    warn(\n      `Vue received a Component that was made a reactive object. This can ` +\n        `lead to unnecessary performance overhead and should be avoided by ` +\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\n        `instead of \\`ref\\`.`,\n      `\\nComponent that was made reactive: `,\n      type,\n    )\n  }\n\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true,\n  )\n}\n\nexport function guardReactiveProps(\n  props: (Data & VNodeProps) | null,\n): (Data & VNodeProps) | null {\n  if (!props) return null\n  return isProxy(props) || isInternalObject(props) ? extend({}, props) : props\n}\n\nexport function cloneVNode<T, U>(\n  vnode: VNode<T, U>,\n  extraProps?: (Data & VNodeProps) | null,\n  mergeRef = false,\n  cloneTransition = false,\n): VNode<T, U> {\n  // This is intentionally NOT using spread or extend to avoid the runtime\n  // key enumeration cost.\n  const { props, ref, patchFlag, children, transition } = vnode\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\n  const cloned: VNode<T, U> = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref:\n      extraProps && extraProps.ref\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n          // if the vnode itself already has a ref, cloneVNode will need to merge\n          // the refs so the single vnode can be set on multiple refs\n          mergeRef && ref\n          ? isArray(ref)\n            ? ref.concat(normalizeRef(extraProps)!)\n            : [ref, normalizeRef(extraProps)!]\n          : normalizeRef(extraProps)\n        : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children:\n      __DEV__ && patchFlag === PatchFlags.CACHED && isArray(children)\n        ? (children as VNode[]).map(deepCloneVNode)\n        : children,\n    target: vnode.target,\n    targetStart: vnode.targetStart,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag:\n      extraProps && vnode.type !== Fragment\n        ? patchFlag === PatchFlags.CACHED // hoisted node\n          ? PatchFlags.FULL_PROPS\n          : patchFlag | PatchFlags.FULL_PROPS\n        : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition,\n\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce,\n  }\n\n  // if the vnode will be replaced by the cloned one, it is necessary\n  // to clone the transition to ensure that the vnode referenced within\n  // the transition hooks is fresh.\n  if (transition && cloneTransition) {\n    setTransitionHooks(\n      cloned as VNode,\n      transition.clone(cloned as VNode) as TransitionHooks,\n    )\n  }\n\n  if (__COMPAT__) {\n    defineLegacyVNodeProperties(cloned as VNode)\n  }\n\n  return cloned\n}\n\n/**\n * Dev only, for HMR of hoisted vnodes reused in v-for\n * https://github.com/vitejs/vite/issues/2022\n */\nfunction deepCloneVNode(vnode: VNode): VNode {\n  const cloned = cloneVNode(vnode)\n  if (isArray(vnode.children)) {\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\n  }\n  return cloned\n}\n\n/**\n * @private\n */\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\n  return createVNode(Text, null, text, flag)\n}\n\n/**\n * @private\n */\nexport function createStaticVNode(\n  content: string,\n  numberOfNodes: number,\n): VNode {\n  // A static vnode can contain multiple stringified elements, and the number\n  // of elements is necessary for hydration.\n  const vnode = createVNode(Static, null, content)\n  vnode.staticCount = numberOfNodes\n  return vnode\n}\n\n/**\n * @private\n */\nexport function createCommentVNode(\n  text: string = '',\n  // when used as the v-else branch, the comment node must be created as a\n  // block to ensure correct updates.\n  asBlock: boolean = false,\n): VNode {\n  return asBlock\n    ? (openBlock(), createBlock(Comment, null, text))\n    : createVNode(Comment, null, text)\n}\n\nexport function normalizeVNode(child: VNodeChild): VNode {\n  if (child == null || typeof child === 'boolean') {\n    // empty placeholder\n    return createVNode(Comment)\n  } else if (isArray(child)) {\n    // fragment\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice(),\n    )\n  } else if (isVNode(child)) {\n    // already vnode, this should be the most common since compiled templates\n    // always produce all-vnode children arrays\n    return cloneIfMounted(child)\n  } else {\n    // strings and numbers\n    return createVNode(Text, null, String(child))\n  }\n}\n\n// optimized normalization for template-compiled render fns\nexport function cloneIfMounted(child: VNode): VNode {\n  return (child.el === null && child.patchFlag !== PatchFlags.CACHED) ||\n    child.memo\n    ? child\n    : cloneVNode(child)\n}\n\nexport function normalizeChildren(vnode: VNode, children: unknown): void {\n  let type = 0\n  const { shapeFlag } = vnode\n  if (children == null) {\n    children = null\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN\n  } else if (typeof children === 'object') {\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\n      // Normalize slot to plain children for plain element and Teleport\n      const slot = (children as any).default\n      if (slot) {\n        // _c marker is added by withCtx() indicating this is a compiled slot\n        slot._c && (slot._d = false)\n        normalizeChildren(vnode, slot())\n        slot._c && (slot._d = true)\n      }\n      return\n    } else {\n      type = ShapeFlags.SLOTS_CHILDREN\n      const slotFlag = (children as RawSlots)._\n      if (!slotFlag && !isInternalObject(children)) {\n        // if slots are not normalized, attach context instance\n        // (compiled / normalized slots already have context)\n        ;(children as RawSlots)._ctx = currentRenderingInstance\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\n        // a child component receives forwarded slots from the parent.\n        // its slot type is determined by its parent's slot type.\n        if (\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\n        ) {\n          ;(children as RawSlots)._ = SlotFlags.STABLE\n        } else {\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance }\n    type = ShapeFlags.SLOTS_CHILDREN\n  } else {\n    children = String(children)\n    // force teleport children to array so it can be moved around\n    if (shapeFlag & ShapeFlags.TELEPORT) {\n      type = ShapeFlags.ARRAY_CHILDREN\n      children = [createTextVNode(children as string)]\n    } else {\n      type = ShapeFlags.TEXT_CHILDREN\n    }\n  }\n  vnode.children = children as VNodeNormalizedChildren\n  vnode.shapeFlag |= type\n}\n\nexport function mergeProps(...args: (Data & VNodeProps)[]): Data {\n  const ret: Data = {}\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i]\n    for (const key in toMerge) {\n      if (key === 'class') {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class])\n        }\n      } else if (key === 'style') {\n        ret.style = normalizeStyle([ret.style, toMerge.style])\n      } else if (isOn(key)) {\n        const existing = ret[key]\n        const incoming = toMerge[key]\n        if (\n          incoming &&\n          existing !== incoming &&\n          !(isArray(existing) && existing.includes(incoming))\n        ) {\n          ret[key] = existing\n            ? [].concat(existing as any, incoming as any)\n            : incoming\n        }\n      } else if (key !== '') {\n        ret[key] = toMerge[key]\n      }\n    }\n  }\n  return ret\n}\n\nexport function invokeVNodeHook(\n  hook: VNodeHook,\n  instance: ComponentInternalInstance | null,\n  vnode: VNode,\n  prevVNode: VNode | null = null,\n): void {\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\n    vnode,\n    prevVNode,\n  ])\n}\n", "import { type VNode, type VNodeChild, isVNode } from './vnode'\nimport {\n  EffectScope,\n  type ReactiveEffect,\n  TrackOpTypes,\n  isRef,\n  markRaw,\n  pauseTracking,\n  proxyRefs,\n  resetTracking,\n  shallowReadonly,\n  track,\n} from '@vue/reactivity'\nimport {\n  type ComponentPublicInstance,\n  type ComponentPublicInstanceConstructor,\n  PublicInstanceProxyHandlers,\n  RuntimeCompiledPublicInstanceProxyHandlers,\n  createDevRenderContext,\n  exposePropsOnRenderContext,\n  exposeSetupStateOnRenderContext,\n  publicPropertiesMap,\n} from './componentPublicInstance'\nimport {\n  type ComponentPropsOptions,\n  type NormalizedPropsOptions,\n  initProps,\n  normalizePropsOptions,\n} from './componentProps'\nimport {\n  type InternalSlots,\n  type Slots,\n  type SlotsType,\n  type UnwrapSlotsType,\n  initSlots,\n} from './componentSlots'\nimport { warn } from './warning'\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\nimport {\n  type AppConfig,\n  type AppContext,\n  createAppContext,\n} from './apiCreateApp'\nimport { type Directive, validateDirectiveName } from './directives'\nimport {\n  type ComponentOptions,\n  type ComputedOptions,\n  type MergedComponentOptions,\n  type MethodOptions,\n  applyOptions,\n  resolveMergedOptions,\n} from './componentOptions'\nimport {\n  type EmitFn,\n  type EmitsOptions,\n  type EmitsToProps,\n  type ObjectEmitsOptions,\n  type ShortEmitsToObject,\n  emit,\n  normalizeEmitsOptions,\n} from './componentEmits'\nimport {\n  EMPTY_OBJ,\n  type IfAny,\n  NOOP,\n  ShapeFlags,\n  extend,\n  getGlobalThis,\n  isArray,\n  isFunction,\n  isObject,\n  isPromise,\n  makeMap,\n} from '@vue/shared'\nimport type { SuspenseBoundary } from './components/Suspense'\nimport type { CompilerOptions } from '@vue/compiler-core'\nimport { markAttrsAccessed } from './componentRenderUtils'\nimport { currentRenderingInstance } from './componentRenderContext'\nimport { endMeasure, startMeasure } from './profiling'\nimport { convertLegacyRenderFn } from './compat/renderFn'\nimport {\n  type CompatConfig,\n  globalCompatConfig,\n  validateCompatConfig,\n} from './compat/compatConfig'\nimport type { SchedulerJob } from './scheduler'\nimport type { LifecycleHooks } from './enums'\n\n// Augment GlobalComponents\nimport type { TeleportProps } from './components/Teleport'\nimport type { SuspenseProps } from './components/Suspense'\nimport type { KeepAliveProps } from './components/KeepAlive'\nimport type { BaseTransitionProps } from './components/BaseTransition'\nimport type { DefineComponent } from './apiDefineComponent'\nimport { markAsyncBoundary } from './helpers/useId'\nimport { isAsyncWrapper } from './apiAsyncComponent'\nimport type { RendererElement } from './renderer'\n\nexport type Data = Record<string, unknown>\n\n/**\n * Public utility type for extracting the instance type of a component.\n * Works with all valid component definition types. This is intended to replace\n * the usage of `InstanceType<typeof Comp>` which only works for\n * constructor-based component definition types.\n *\n * @example\n * ```ts\n * const MyComp = { ... }\n * declare const instance: ComponentInstance<typeof MyComp>\n * ```\n */\nexport type ComponentInstance<T> = T extends { new (): ComponentPublicInstance }\n  ? InstanceType<T>\n  : T extends FunctionalComponent<infer Props, infer Emits>\n    ? ComponentPublicInstance<Props, {}, {}, {}, {}, ShortEmitsToObject<Emits>>\n    : T extends Component<\n          infer Props,\n          infer RawBindings,\n          infer D,\n          infer C,\n          infer M\n        >\n      ? // NOTE we override Props/RawBindings/D to make sure is not `unknown`\n        ComponentPublicInstance<\n          unknown extends Props ? {} : Props,\n          unknown extends RawBindings ? {} : RawBindings,\n          unknown extends D ? {} : D,\n          C,\n          M\n        >\n      : never // not a vue Component\n\n/**\n * For extending allowed non-declared props on components in TSX\n */\nexport interface ComponentCustomProps {}\n\n/**\n * For globally defined Directives\n * Here is an example of adding a directive `VTooltip` as global directive:\n *\n * @example\n * ```ts\n * import VTooltip from 'v-tooltip'\n *\n * declare module '@vue/runtime-core' {\n *   interface GlobalDirectives {\n *     VTooltip\n *   }\n * }\n * ```\n */\nexport interface GlobalDirectives {}\n\n/**\n * For globally defined Components\n * Here is an example of adding a component `RouterView` as global component:\n *\n * @example\n * ```ts\n * import { RouterView } from 'vue-router'\n *\n * declare module '@vue/runtime-core' {\n *   interface GlobalComponents {\n *     RouterView\n *   }\n * }\n * ```\n */\nexport interface GlobalComponents {\n  Teleport: DefineComponent<TeleportProps>\n  Suspense: DefineComponent<SuspenseProps>\n  KeepAlive: DefineComponent<KeepAliveProps>\n  BaseTransition: DefineComponent<BaseTransitionProps>\n}\n\n/**\n * Default allowed non-declared props on component in TSX\n */\nexport interface AllowedComponentProps {\n  class?: unknown\n  style?: unknown\n}\n\n// Note: can't mark this whole interface internal because some public interfaces\n// extend it.\nexport interface ComponentInternalOptions {\n  /**\n   * @internal\n   */\n  __scopeId?: string\n  /**\n   * @internal\n   */\n  __cssModules?: Data\n  /**\n   * @internal\n   */\n  __hmrId?: string\n  /**\n   * Compat build only, for bailing out of certain compatibility behavior\n   */\n  __isBuiltIn?: boolean\n  /**\n   * This one should be exposed so that devtools can make use of it\n   */\n  __file?: string\n  /**\n   * name inferred from filename\n   */\n  __name?: string\n}\n\nexport interface FunctionalComponent<\n  P = {},\n  E extends EmitsOptions | Record<string, any[]> = {},\n  S extends Record<string, any> = any,\n  EE extends EmitsOptions = ShortEmitsToObject<E>,\n> extends ComponentInternalOptions {\n  // use of any here is intentional so it can be a valid JSX Element constructor\n  (\n    props: P & EmitsToProps<EE>,\n    ctx: Omit<SetupContext<EE, IfAny<S, {}, SlotsType<S>>>, 'expose'>,\n  ): any\n  props?: ComponentPropsOptions<P>\n  emits?: EE | (keyof EE)[]\n  slots?: IfAny<S, Slots, SlotsType<S>>\n  inheritAttrs?: boolean\n  displayName?: string\n  compatConfig?: CompatConfig\n}\n\nexport interface ClassComponent {\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\n  __vccOpts: ComponentOptions\n}\n\n/**\n * Concrete component type matches its actual value: it's either an options\n * object, or a function. Use this where the code expects to work with actual\n * values, e.g. checking if its a function or not. This is mostly for internal\n * implementation code.\n */\nexport type ConcreteComponent<\n  Props = {},\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions,\n  E extends EmitsOptions | Record<string, any[]> = {},\n  S extends Record<string, any> = any,\n> =\n  | ComponentOptions<Props, RawBindings, D, C, M>\n  | FunctionalComponent<Props, E, S>\n\n/**\n * A type used in public APIs where a component type is expected.\n * The constructor type is an artificial type returned by defineComponent().\n */\nexport type Component<\n  Props = any,\n  RawBindings = any,\n  D = any,\n  C extends ComputedOptions = ComputedOptions,\n  M extends MethodOptions = MethodOptions,\n  E extends EmitsOptions | Record<string, any[]> = {},\n  S extends Record<string, any> = any,\n> =\n  | ConcreteComponent<Props, RawBindings, D, C, M, E, S>\n  | ComponentPublicInstanceConstructor<Props>\n\nexport type { ComponentOptions }\n\nexport type LifecycleHook<TFn = Function> = (TFn & SchedulerJob)[] | null\n\n// use `E extends any` to force evaluating type to fix #2362\nexport type SetupContext<\n  E = EmitsOptions,\n  S extends SlotsType = {},\n> = E extends any\n  ? {\n      attrs: Data\n      slots: UnwrapSlotsType<S>\n      emit: EmitFn<E>\n      expose: <Exposed extends Record<string, any> = Record<string, any>>(\n        exposed?: Exposed,\n      ) => void\n    }\n  : never\n\n/**\n * @internal\n */\nexport type InternalRenderFunction = {\n  (\n    ctx: ComponentPublicInstance,\n    cache: ComponentInternalInstance['renderCache'],\n    // for compiler-optimized bindings\n    $props: ComponentInternalInstance['props'],\n    $setup: ComponentInternalInstance['setupState'],\n    $data: ComponentInternalInstance['data'],\n    $options: ComponentInternalInstance['ctx'],\n  ): VNodeChild\n  _rc?: boolean // isRuntimeCompiled\n\n  // __COMPAT__ only\n  _compatChecked?: boolean // v3 and already checked for v2 compat\n  _compatWrapped?: boolean // is wrapped for v2 compat\n}\n\n/**\n * We expose a subset of properties on the internal instance as they are\n * useful for advanced external libraries and tools.\n */\nexport interface ComponentInternalInstance {\n  uid: number\n  type: ConcreteComponent\n  parent: ComponentInternalInstance | null\n  root: ComponentInternalInstance\n  appContext: AppContext\n  /**\n   * Vnode representing this component in its parent's vdom tree\n   */\n  vnode: VNode\n  /**\n   * The pending new vnode from parent updates\n   * @internal\n   */\n  next: VNode | null\n  /**\n   * Root vnode of this component's own vdom tree\n   */\n  subTree: VNode\n  /**\n   * Render effect instance\n   */\n  effect: ReactiveEffect\n  /**\n   * Force update render effect\n   */\n  update: () => void\n  /**\n   * Render effect job to be passed to scheduler (checks if dirty)\n   */\n  job: SchedulerJob\n  /**\n   * The render function that returns vdom tree.\n   * @internal\n   */\n  render: InternalRenderFunction | null\n  /**\n   * SSR render function\n   * @internal\n   */\n  ssrRender?: Function | null\n  /**\n   * Object containing values this component provides for its descendants\n   * @internal\n   */\n  provides: Data\n  /**\n   * for tracking useId()\n   * first element is the current boundary prefix\n   * second number is the index of the useId call within that boundary\n   * @internal\n   */\n  ids: [string, number, number]\n  /**\n   * Tracking reactive effects (e.g. watchers) associated with this component\n   * so that they can be automatically stopped on component unmount\n   * @internal\n   */\n  scope: EffectScope\n  /**\n   * cache for proxy access type to avoid hasOwnProperty calls\n   * @internal\n   */\n  accessCache: Data | null\n  /**\n   * cache for render function values that rely on _ctx but won't need updates\n   * after initialized (e.g. inline handlers)\n   * @internal\n   */\n  renderCache: (Function | VNode | undefined)[]\n\n  /**\n   * Resolved component registry, only for components with mixins or extends\n   * @internal\n   */\n  components: Record<string, ConcreteComponent> | null\n  /**\n   * Resolved directive registry, only for components with mixins or extends\n   * @internal\n   */\n  directives: Record<string, Directive> | null\n  /**\n   * Resolved filters registry, v2 compat only\n   * @internal\n   */\n  filters?: Record<string, Function>\n  /**\n   * resolved props options\n   * @internal\n   */\n  propsOptions: NormalizedPropsOptions\n  /**\n   * resolved emits options\n   * @internal\n   */\n  emitsOptions: ObjectEmitsOptions | null\n  /**\n   * resolved inheritAttrs options\n   * @internal\n   */\n  inheritAttrs?: boolean\n  /**\n   * Custom Element instance (if component is created by defineCustomElement)\n   * @internal\n   */\n  ce?: ComponentCustomElementInterface\n  /**\n   * is custom element? (kept only for compatibility)\n   * @internal\n   */\n  isCE?: boolean\n  /**\n   * custom element specific HMR method\n   * @internal\n   */\n  ceReload?: (newStyles?: string[]) => void\n\n  // the rest are only for stateful components ---------------------------------\n\n  // main proxy that serves as the public instance (`this`)\n  proxy: ComponentPublicInstance | null\n\n  // exposed properties via expose()\n  exposed: Record<string, any> | null\n  exposeProxy: Record<string, any> | null\n\n  /**\n   * alternative proxy used only for runtime-compiled render functions using\n   * `with` block\n   * @internal\n   */\n  withProxy: ComponentPublicInstance | null\n  /**\n   * This is the target for the public instance proxy. It also holds properties\n   * injected by user options (computed, methods etc.) and user-attached\n   * custom properties (via `this.x = ...`)\n   * @internal\n   */\n  ctx: Data\n\n  // state\n  data: Data\n  props: Data\n  attrs: Data\n  slots: InternalSlots\n  refs: Data\n  emit: EmitFn\n\n  /**\n   * used for keeping track of .once event handlers on components\n   * @internal\n   */\n  emitted: Record<string, boolean> | null\n  /**\n   * used for caching the value returned from props default factory functions to\n   * avoid unnecessary watcher trigger\n   * @internal\n   */\n  propsDefaults: Data\n  /**\n   * setup related\n   * @internal\n   */\n  setupState: Data\n  /**\n   * devtools access to additional info\n   * @internal\n   */\n  devtoolsRawSetupState?: any\n  /**\n   * @internal\n   */\n  setupContext: SetupContext | null\n\n  /**\n   * suspense related\n   * @internal\n   */\n  suspense: SuspenseBoundary | null\n  /**\n   * suspense pending batch id\n   * @internal\n   */\n  suspenseId: number\n  /**\n   * @internal\n   */\n  asyncDep: Promise<any> | null\n  /**\n   * @internal\n   */\n  asyncResolved: boolean\n\n  // lifecycle\n  isMounted: boolean\n  isUnmounted: boolean\n  isDeactivated: boolean\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.CREATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.MOUNTED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.UPDATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\n  /**\n   * @internal\n   */\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\n\n  /**\n   * For caching bound $forceUpdate on public proxy access\n   * @internal\n   */\n  f?: () => void\n  /**\n   * For caching bound $nextTick on public proxy access\n   * @internal\n   */\n  n?: () => Promise<void>\n  /**\n   * `updateTeleportCssVars`\n   * For updating css vars on contained teleports\n   * @internal\n   */\n  ut?: (vars?: Record<string, string>) => void\n\n  /**\n   * dev only. For style v-bind hydration mismatch checks\n   * @internal\n   */\n  getCssVars?: () => Record<string, string>\n\n  /**\n   * v2 compat only, for caching mutated $options\n   * @internal\n   */\n  resolvedOptions?: MergedComponentOptions\n}\n\nconst emptyAppContext = createAppContext()\n\nlet uid = 0\n\nexport function createComponentInstance(\n  vnode: VNode,\n  parent: ComponentInternalInstance | null,\n  suspense: SuspenseBoundary | null,\n): ComponentInternalInstance {\n  const type = vnode.type as ConcreteComponent\n  // inherit parent app context - or - if root, adopt from root vnode\n  const appContext =\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\n\n  const instance: ComponentInternalInstance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null!, // to be immediately set\n    next: null,\n    subTree: null!, // will be set synchronously right after creation\n    effect: null!,\n    update: null!, // will be set synchronously right after creation\n    job: null!,\n    scope: new EffectScope(true /* detached */),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    ids: parent ? parent.ids : ['', 0, 0],\n    accessCache: null!,\n    renderCache: [],\n\n    // local resolved assets\n    components: null,\n    directives: null,\n\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n\n    // emit\n    emit: null!, // to be set immediately\n    emitted: null,\n\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null,\n  }\n  if (__DEV__) {\n    instance.ctx = createDevRenderContext(instance)\n  } else {\n    instance.ctx = { _: instance }\n  }\n  instance.root = parent ? parent.root : instance\n  instance.emit = emit.bind(null, instance)\n\n  // apply custom element special handling\n  if (vnode.ce) {\n    vnode.ce(instance)\n  }\n\n  return instance\n}\n\nexport let currentInstance: ComponentInternalInstance | null = null\n\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\n  currentInstance || currentRenderingInstance\n\nlet internalSetCurrentInstance: (\n  instance: ComponentInternalInstance | null,\n) => void\nlet setInSSRSetupState: (state: boolean) => void\n\n/**\n * The following makes getCurrentInstance() usage across multiple copies of Vue\n * work. Some cases of how this can happen are summarized in #7590. In principle\n * the duplication should be avoided, but in practice there are often cases\n * where the user is unable to resolve on their own, especially in complicated\n * SSR setups.\n *\n * Note this fix is technically incomplete, as we still rely on other singletons\n * for effectScope and global reactive dependency maps. However, it does make\n * some of the most common cases work. It also warns if the duplication is\n * found during browser execution.\n */\nif (__SSR__) {\n  type Setter = (v: any) => void\n  const g = getGlobalThis()\n  const registerGlobalSetter = (key: string, setter: Setter) => {\n    let setters: Setter[]\n    if (!(setters = g[key])) setters = g[key] = []\n    setters.push(setter)\n    return (v: any) => {\n      if (setters.length > 1) setters.forEach(set => set(v))\n      else setters[0](v)\n    }\n  }\n  internalSetCurrentInstance = registerGlobalSetter(\n    `__VUE_INSTANCE_SETTERS__`,\n    v => (currentInstance = v),\n  )\n  // also make `isInSSRComponentSetup` sharable across copies of Vue.\n  // this is needed in the SFC playground when SSRing async components, since\n  // we have to load both the runtime and the server-renderer from CDNs, they\n  // contain duplicated copies of Vue runtime code.\n  setInSSRSetupState = registerGlobalSetter(\n    `__VUE_SSR_SETTERS__`,\n    v => (isInSSRComponentSetup = v),\n  )\n} else {\n  internalSetCurrentInstance = i => {\n    currentInstance = i\n  }\n  setInSSRSetupState = v => {\n    isInSSRComponentSetup = v\n  }\n}\n\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\n  const prev = currentInstance\n  internalSetCurrentInstance(instance)\n  instance.scope.on()\n  return (): void => {\n    instance.scope.off()\n    internalSetCurrentInstance(prev)\n  }\n}\n\nexport const unsetCurrentInstance = (): void => {\n  currentInstance && currentInstance.scope.off()\n  internalSetCurrentInstance(null)\n}\n\nconst isBuiltInTag = /*@__PURE__*/ makeMap('slot,component')\n\nexport function validateComponentName(\n  name: string,\n  { isNativeTag }: AppConfig,\n): void {\n  if (isBuiltInTag(name) || isNativeTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component id: ' + name,\n    )\n  }\n}\n\nexport function isStatefulComponent(\n  instance: ComponentInternalInstance,\n): number {\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\n}\n\nexport let isInSSRComponentSetup = false\n\nexport function setupComponent(\n  instance: ComponentInternalInstance,\n  isSSR = false,\n  optimized = false,\n): Promise<void> | undefined {\n  isSSR && setInSSRSetupState(isSSR)\n\n  const { props, children } = instance.vnode\n  const isStateful = isStatefulComponent(instance)\n  initProps(instance, props, isStateful, isSSR)\n  initSlots(instance, children, optimized)\n\n  const setupResult = isStateful\n    ? setupStatefulComponent(instance, isSSR)\n    : undefined\n\n  isSSR && setInSSRSetupState(false)\n  return setupResult\n}\n\nfunction setupStatefulComponent(\n  instance: ComponentInternalInstance,\n  isSSR: boolean,\n) {\n  const Component = instance.type as ComponentOptions\n\n  if (__DEV__) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config)\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components)\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config)\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives)\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i])\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\n          `includes the runtime compiler. Since you are using a runtime-only ` +\n          `build, the options should be passed via your build tool config instead.`,\n      )\n    }\n  }\n  // 0. create render proxy property access cache\n  instance.accessCache = Object.create(null)\n  // 1. create public instance / render proxy\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers)\n  if (__DEV__) {\n    exposePropsOnRenderContext(instance)\n  }\n  // 2. call setup()\n  const { setup } = Component\n  if (setup) {\n    pauseTracking()\n    const setupContext = (instance.setupContext =\n      setup.length > 1 ? createSetupContext(instance) : null)\n    const reset = setCurrentInstance(instance)\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      ErrorCodes.SETUP_FUNCTION,\n      [\n        __DEV__ ? shallowReadonly(instance.props) : instance.props,\n        setupContext,\n      ],\n    )\n    const isAsyncSetup = isPromise(setupResult)\n    resetTracking()\n    reset()\n\n    if ((isAsyncSetup || instance.sp) && !isAsyncWrapper(instance)) {\n      // async setup / serverPrefetch, mark as async boundary for useId()\n      markAsyncBoundary(instance)\n    }\n\n    if (isAsyncSetup) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\n      if (isSSR) {\n        // return the promise so server-renderer can wait on it\n        return setupResult\n          .then((resolvedResult: unknown) => {\n            handleSetupResult(instance, resolvedResult, isSSR)\n          })\n          .catch(e => {\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\n          })\n      } else if (__FEATURE_SUSPENSE__) {\n        // async setup returned Promise.\n        // bail here and wait for re-entry.\n        instance.asyncDep = setupResult\n        if (__DEV__ && !instance.suspense) {\n          const name = Component.name ?? 'Anonymous'\n          warn(\n            `Component <${name}>: setup function returned a promise, but no ` +\n              `<Suspense> boundary was found in the parent component tree. ` +\n              `A component with async setup() must be nested in a <Suspense> ` +\n              `in order to be rendered.`,\n          )\n        }\n      } else if (__DEV__) {\n        warn(\n          `setup() returned a Promise, but the version of Vue you are using ` +\n            `does not support it yet.`,\n        )\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR)\n    }\n  } else {\n    finishComponentSetup(instance, isSSR)\n  }\n}\n\nexport function handleSetupResult(\n  instance: ComponentInternalInstance,\n  setupResult: unknown,\n  isSSR: boolean,\n): void {\n  if (isFunction(setupResult)) {\n    // setup returned an inline render function\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\n      // set it as ssrRender instead.\n      instance.ssrRender = setupResult\n    } else {\n      instance.render = setupResult as InternalRenderFunction\n    }\n  } else if (isObject(setupResult)) {\n    if (__DEV__ && isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - ` +\n          `return a render function instead.`,\n      )\n    }\n    // setup returned bindings.\n    // assuming a render function compiled from template is present.\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult\n    }\n    instance.setupState = proxyRefs(setupResult)\n    if (__DEV__) {\n      exposeSetupStateOnRenderContext(instance)\n    }\n  } else if (__DEV__ && setupResult !== undefined) {\n    warn(\n      `setup() should return an object. Received: ${\n        setupResult === null ? 'null' : typeof setupResult\n      }`,\n    )\n  }\n  finishComponentSetup(instance, isSSR)\n}\n\ntype CompileFunction = (\n  template: string | object,\n  options?: CompilerOptions,\n) => InternalRenderFunction\n\nlet compile: CompileFunction | undefined\nlet installWithProxy: (i: ComponentInternalInstance) => void\n\n/**\n * For runtime-dom to register the compiler.\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\n */\nexport function registerRuntimeCompiler(_compile: any): void {\n  compile = _compile\n  installWithProxy = i => {\n    if (i.render!._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\n    }\n  }\n}\n\n// dev only\nexport const isRuntimeOnly = (): boolean => !compile\n\nexport function finishComponentSetup(\n  instance: ComponentInternalInstance,\n  isSSR: boolean,\n  skipOptions?: boolean,\n): void {\n  const Component = instance.type as ComponentOptions\n\n  if (__COMPAT__) {\n    convertLegacyRenderFn(instance)\n\n    if (__DEV__ && Component.compatConfig) {\n      validateCompatConfig(Component.compatConfig)\n    }\n  }\n\n  // template / render function normalization\n  // could be already set when returned from setup()\n  if (!instance.render) {\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\n    // is done by server-renderer\n    if (!isSSR && compile && !Component.render) {\n      const template =\n        (__COMPAT__ &&\n          instance.vnode.props &&\n          instance.vnode.props['inline-template']) ||\n        Component.template ||\n        (__FEATURE_OPTIONS_API__ && resolveMergedOptions(instance).template)\n      if (template) {\n        if (__DEV__) {\n          startMeasure(instance, `compile`)\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config\n        const { delimiters, compilerOptions: componentCompilerOptions } =\n          Component\n        const finalCompilerOptions: CompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters,\n            },\n            compilerOptions,\n          ),\n          componentCompilerOptions,\n        )\n        if (__COMPAT__) {\n          // pass runtime compat config into the compiler\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\n          if (Component.compatConfig) {\n            // @ts-expect-error types are not compatible\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\n          }\n        }\n        Component.render = compile(template, finalCompilerOptions)\n        if (__DEV__) {\n          endMeasure(instance, `compile`)\n        }\n      }\n    }\n\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\n\n    // for runtime-compiled render functions using `with` blocks, the render\n    // proxy used needs a different `has` handler which is more performant and\n    // also only allows a whitelist of globals to fallthrough.\n    if (installWithProxy) {\n      installWithProxy(instance)\n    }\n  }\n\n  // support for 2.x options\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\n    const reset = setCurrentInstance(instance)\n    pauseTracking()\n    try {\n      applyOptions(instance)\n    } finally {\n      resetTracking()\n      reset()\n    }\n  }\n\n  // warn missing template/render\n  // the runtime compilation of template in SSR is done by server-render\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      /* v8 ignore start */\n      warn(\n        `Component provided template option but ` +\n          `runtime compilation is not supported in this build of Vue.` +\n          (__ESM_BUNDLER__\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\n            : __ESM_BROWSER__\n              ? ` Use \"vue.esm-browser.js\" instead.`\n              : __GLOBAL__\n                ? ` Use \"vue.global.js\" instead.`\n                : ``) /* should not happen */,\n      )\n      /* v8 ignore stop */\n    } else {\n      warn(`Component is missing template or render function: `, Component)\n    }\n  }\n}\n\nconst attrsProxyHandlers = __DEV__\n  ? {\n      get(target: Data, key: string) {\n        markAttrsAccessed()\n        track(target, TrackOpTypes.GET, '')\n        return target[key]\n      },\n      set() {\n        warn(`setupContext.attrs is readonly.`)\n        return false\n      },\n      deleteProperty() {\n        warn(`setupContext.attrs is readonly.`)\n        return false\n      },\n    }\n  : {\n      get(target: Data, key: string) {\n        track(target, TrackOpTypes.GET, '')\n        return target[key]\n      },\n    }\n\n/**\n * Dev-only\n */\nfunction getSlotsProxy(instance: ComponentInternalInstance): Slots {\n  return new Proxy(instance.slots, {\n    get(target, key: string) {\n      track(instance, TrackOpTypes.GET, '$slots')\n      return target[key]\n    },\n  })\n}\n\nexport function createSetupContext(\n  instance: ComponentInternalInstance,\n): SetupContext {\n  const expose: SetupContext['expose'] = exposed => {\n    if (__DEV__) {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`)\n      }\n      if (exposed != null) {\n        let exposedType: string = typeof exposed\n        if (exposedType === 'object') {\n          if (isArray(exposed)) {\n            exposedType = 'array'\n          } else if (isRef(exposed)) {\n            exposedType = 'ref'\n          }\n        }\n        if (exposedType !== 'object') {\n          warn(\n            `expose() should be passed a plain object, received ${exposedType}.`,\n          )\n        }\n      }\n    }\n    instance.exposed = exposed || {}\n  }\n\n  if (__DEV__) {\n    // We use getters in dev in case libs like test-utils overwrite instance\n    // properties (overwrites should not be done in prod)\n    let attrsProxy: Data\n    let slotsProxy: Slots\n    return Object.freeze({\n      get attrs() {\n        return (\n          attrsProxy ||\n          (attrsProxy = new Proxy(instance.attrs, attrsProxyHandlers))\n        )\n      },\n      get slots() {\n        return slotsProxy || (slotsProxy = getSlotsProxy(instance))\n      },\n      get emit() {\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\n      },\n      expose,\n    })\n  } else {\n    return {\n      attrs: new Proxy(instance.attrs, attrsProxyHandlers),\n      slots: instance.slots,\n      emit: instance.emit,\n      expose,\n    }\n  }\n}\n\nexport function getComponentPublicInstance(\n  instance: ComponentInternalInstance,\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null {\n  if (instance.exposed) {\n    return (\n      instance.exposeProxy ||\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n        get(target, key: string) {\n          if (key in target) {\n            return target[key]\n          } else if (key in publicPropertiesMap) {\n            return publicPropertiesMap[key](instance)\n          }\n        },\n        has(target, key: string) {\n          return key in target || key in publicPropertiesMap\n        },\n      }))\n    )\n  } else {\n    return instance.proxy\n  }\n}\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string): string =>\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\n\nexport function getComponentName(\n  Component: ConcreteComponent,\n  includeInferred = true,\n): string | false | undefined {\n  return isFunction(Component)\n    ? Component.displayName || Component.name\n    : Component.name || (includeInferred && Component.__name)\n}\n\nexport function formatComponentName(\n  instance: ComponentInternalInstance | null,\n  Component: ConcreteComponent,\n  isRoot = false,\n): string {\n  let name = getComponentName(Component)\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\n    if (match) {\n      name = match[1]\n    }\n  }\n\n  if (!name && instance && instance.parent) {\n    // try to infer the name based on reverse resolution\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key\n        }\n      }\n    }\n    name =\n      inferFromRegistry(\n        instance.components ||\n          (instance.parent.type as ComponentOptions).components,\n      ) || inferFromRegistry(instance.appContext.components)\n  }\n\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\n}\n\nexport function isClassComponent(value: unknown): value is ClassComponent {\n  return isFunction(value) && '__vccOpts' in value\n}\n\nexport interface ComponentCustomElementInterface {\n  /**\n   * @internal\n   */\n  _injectChildStyle(type: ConcreteComponent): void\n  /**\n   * @internal\n   */\n  _removeChildStyle(type: ConcreteComponent): void\n  /**\n   * @internal\n   */\n  _setProp(\n    key: string,\n    val: any,\n    shouldReflect?: boolean,\n    shouldUpdate?: boolean,\n  ): void\n  /**\n   * @internal attached by the nested Teleport when shadowRoot is false.\n   */\n  _teleportTarget?: RendererElement\n}\n", "import { type ComputedRefImpl, computed as _computed } from '@vue/reactivity'\nimport { getCurrentInstance, isInSSRComponentSetup } from './component'\n\nexport const computed: typeof _computed = (\n  getterOrOptions: any,\n  debugOptions?: any,\n) => {\n  // @ts-expect-error\n  const c = _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\n  if (__DEV__) {\n    const i = getCurrentInstance()\n    if (i && i.appContext.config.warnRecursiveComputed) {\n      ;(c as unknown as ComputedRefImpl<any>)._warnRecursive = true\n    }\n  }\n  return c as any\n}\n", "import {\n  type Comment,\n  type Fragment,\n  type Text,\n  type VNode,\n  type VNodeArrayChildren,\n  type VNodeProps,\n  createVNode,\n  isVNode,\n} from './vnode'\nimport type { Teleport, TeleportProps } from './components/Teleport'\nimport type { Suspense, SuspenseProps } from './components/Suspense'\nimport { type IfAny, isArray, isObject } from '@vue/shared'\nimport type { RawSlots } from './componentSlots'\nimport type {\n  Component,\n  ComponentOptions,\n  ConcreteComponent,\n  FunctionalComponent,\n} from './component'\nimport type { EmitsOptions } from './componentEmits'\nimport type { DefineComponent } from './apiDefineComponent'\n\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\n// props when possible. It is intended for manually written render functions.\n// Compiler-generated code uses `createVNode` because\n// 1. it is monomorphic and avoids the extra call overhead\n// 2. it allows specifying patchFlags for optimization\n\n/*\n// type only\nh('div')\n\n// type + props\nh('div', {})\n\n// type + omit props + children\n// Omit props does NOT support named slots\nh('div', []) // array\nh('div', 'foo') // text\nh('div', h('br')) // vnode\nh(Component, () => {}) // default slot\n\n// type + props + children\nh('div', {}, []) // array\nh('div', {}, 'foo') // text\nh('div', {}, h('br')) // vnode\nh(Component, {}, () => {}) // default slot\nh(Component, {}, {}) // named slots\n\n// named slots without props requires explicit `null` to avoid ambiguity\nh(Component, null, {})\n**/\n\ntype RawProps = VNodeProps & {\n  // used to differ from a single VNode object as children\n  __v_isVNode?: never\n  // used to differ from Array children\n  [Symbol.iterator]?: never\n} & Record<string, any>\n\ntype RawChildren =\n  | string\n  | number\n  | boolean\n  | VNode\n  | VNodeArrayChildren\n  | (() => any)\n\n// fake constructor type returned from `defineComponent`\ninterface Constructor<P = any> {\n  __isFragment?: never\n  __isTeleport?: never\n  __isSuspense?: never\n  new (...args: any[]): { $props: P }\n}\n\ntype HTMLElementEventHandler = {\n  [K in keyof HTMLElementEventMap as `on${Capitalize<K>}`]?: (\n    ev: HTMLElementEventMap[K],\n  ) => any\n}\n\n// The following is a series of overloads for providing props validation of\n// manually written render functions.\n\n// element\nexport function h<K extends keyof HTMLElementTagNameMap>(\n  type: K,\n  children?: RawChildren,\n): VNode\nexport function h<K extends keyof HTMLElementTagNameMap>(\n  type: K,\n  props?: (RawProps & HTMLElementEventHandler) | null,\n  children?: RawChildren | RawSlots,\n): VNode\n\n// custom element\nexport function h(type: string, children?: RawChildren): VNode\nexport function h(\n  type: string,\n  props?: RawProps | null,\n  children?: RawChildren | RawSlots,\n): VNode\n\n// text/comment\nexport function h(\n  type: typeof Text | typeof Comment,\n  children?: string | number | boolean,\n): VNode\nexport function h(\n  type: typeof Text | typeof Comment,\n  props?: null,\n  children?: string | number | boolean,\n): VNode\n// fragment\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\nexport function h(\n  type: typeof Fragment,\n  props?: RawProps | null,\n  children?: VNodeArrayChildren,\n): VNode\n\n// teleport (target prop is required)\nexport function h(\n  type: typeof Teleport,\n  props: RawProps & TeleportProps,\n  children: RawChildren | RawSlots,\n): VNode\n\n// suspense\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\nexport function h(\n  type: typeof Suspense,\n  props?: (RawProps & SuspenseProps) | null,\n  children?: RawChildren | RawSlots,\n): VNode\n\n// functional component\nexport function h<\n  P,\n  E extends EmitsOptions = {},\n  S extends Record<string, any> = any,\n>(\n  type: FunctionalComponent<P, any, S, any>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | IfAny<S, RawSlots, S>,\n): VNode\n\n// catch-all for generic component types\nexport function h(type: Component, children?: RawChildren): VNode\n\n// concrete component\nexport function h<P>(\n  type: ConcreteComponent | string,\n  children?: RawChildren,\n): VNode\nexport function h<P>(\n  type: ConcreteComponent<P> | string,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren,\n): VNode\n\n// component without props\nexport function h<P>(\n  type: Component<P>,\n  props?: (RawProps & P) | null,\n  children?: RawChildren | RawSlots,\n): VNode\n\n// exclude `defineComponent` constructors\nexport function h<P>(\n  type: ComponentOptions<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots,\n): VNode\n\n// fake constructor type returned by `defineComponent` or class component\nexport function h(type: Constructor, children?: RawChildren): VNode\nexport function h<P>(\n  type: Constructor<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots,\n): VNode\n\n// fake constructor type returned by `defineComponent`\nexport function h(type: DefineComponent, children?: RawChildren): VNode\nexport function h<P>(\n  type: DefineComponent<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots,\n): VNode\n\n// catch all types\nexport function h(type: string | Component, children?: RawChildren): VNode\nexport function h<P>(\n  type: string | Component<P>,\n  props?: (RawProps & P) | ({} extends P ? null : never),\n  children?: RawChildren | RawSlots,\n): VNode\n\n// Actual implementation\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\n  const l = arguments.length\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      // single vnode without props\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren])\n      }\n      // props without children\n      return createVNode(type, propsOrChildren)\n    } else {\n      // omit props\n      return createVNode(type, null, propsOrChildren)\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2)\n    } else if (l === 3 && isVNode(children)) {\n      children = [children]\n    }\n    return createVNode(type, propsOrChildren, children)\n  }\n}\n", "import {\n  type Ref,\n  isReactive,\n  isReadonly,\n  isRef,\n  isShallow,\n  toRaw,\n} from '@vue/reactivity'\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\nimport type { ComponentInternalInstance, ComponentOptions } from './component'\nimport type { ComponentPublicInstance } from './componentPublicInstance'\n\nexport function initCustomFormatter(): void {\n  /* eslint-disable no-restricted-globals */\n  if (!__DEV__ || typeof window === 'undefined') {\n    return\n  }\n\n  const vueStyle = { style: 'color:#3ba776' }\n  const numberStyle = { style: 'color:#1677ff' }\n  const stringStyle = { style: 'color:#f5222d' }\n  const keywordStyle = { style: 'color:#eb2f96' }\n\n  // custom formatter for Chrome\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\n  const formatter = {\n    __vue_custom_formatter: true,\n    header(obj: unknown) {\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\n      if (!isObject(obj)) {\n        return null\n      }\n\n      if (obj.__isVue) {\n        return ['div', vueStyle, `VueInstance`]\n      } else if (isRef(obj)) {\n        return [\n          'div',\n          {},\n          ['span', vueStyle, genRefFlag(obj)],\n          '<',\n          // avoid debugger accessing value affecting behavior\n          formatValue('_value' in obj ? obj._value : obj),\n          `>`,\n        ]\n      } else if (isReactive(obj)) {\n        return [\n          'div',\n          {},\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\n          '<',\n          formatValue(obj),\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`,\n        ]\n      } else if (isReadonly(obj)) {\n        return [\n          'div',\n          {},\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\n          '<',\n          formatValue(obj),\n          '>',\n        ]\n      }\n      return null\n    },\n    hasBody(obj: unknown) {\n      return obj && (obj as any).__isVue\n    },\n    body(obj: unknown) {\n      if (obj && (obj as any).__isVue) {\n        return [\n          'div',\n          {},\n          ...formatInstance((obj as ComponentPublicInstance).$),\n        ]\n      }\n    },\n  }\n\n  function formatInstance(instance: ComponentInternalInstance) {\n    const blocks = []\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\n    }\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('setup', instance.setupState))\n    }\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\n    }\n    const computed = extractKeys(instance, 'computed')\n    if (computed) {\n      blocks.push(createInstanceBlock('computed', computed))\n    }\n    const injected = extractKeys(instance, 'inject')\n    if (injected) {\n      blocks.push(createInstanceBlock('injected', injected))\n    }\n\n    blocks.push([\n      'div',\n      {},\n      [\n        'span',\n        {\n          style: keywordStyle.style + ';opacity:0.66',\n        },\n        '$ (internal): ',\n      ],\n      ['object', { object: instance }],\n    ])\n    return blocks\n  }\n\n  function createInstanceBlock(type: string, target: any) {\n    target = extend({}, target)\n    if (!Object.keys(target).length) {\n      return ['span', {}]\n    }\n    return [\n      'div',\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\n      [\n        'div',\n        {\n          style: 'color:#476582',\n        },\n        type,\n      ],\n      [\n        'div',\n        {\n          style: 'padding-left:1.25em',\n        },\n        ...Object.keys(target).map(key => {\n          return [\n            'div',\n            {},\n            ['span', keywordStyle, key + ': '],\n            formatValue(target[key], false),\n          ]\n        }),\n      ],\n    ]\n  }\n\n  function formatValue(v: unknown, asRaw = true) {\n    if (typeof v === 'number') {\n      return ['span', numberStyle, v]\n    } else if (typeof v === 'string') {\n      return ['span', stringStyle, JSON.stringify(v)]\n    } else if (typeof v === 'boolean') {\n      return ['span', keywordStyle, v]\n    } else if (isObject(v)) {\n      return ['object', { object: asRaw ? toRaw(v) : v }]\n    } else {\n      return ['span', stringStyle, String(v)]\n    }\n  }\n\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\n    const Comp = instance.type\n    if (isFunction(Comp)) {\n      return\n    }\n    const extracted: Record<string, any> = {}\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key]\n      }\n    }\n    return extracted\n  }\n\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\n    const opts = Comp[type]\n    if (\n      (isArray(opts) && opts.includes(key)) ||\n      (isObject(opts) && key in opts)\n    ) {\n      return true\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true\n    }\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\n      return true\n    }\n  }\n\n  function genRefFlag(v: Ref) {\n    if (isShallow(v)) {\n      return `ShallowRef`\n    }\n    if ((v as any).effect) {\n      return `ComputedRef`\n    }\n    return `Ref`\n  }\n\n  if ((window as any).devtoolsFormatters) {\n    ;(window as any).devtoolsFormatters.push(formatter)\n  } else {\n    ;(window as any).devtoolsFormatters = [formatter]\n  }\n}\n", "import { hasChanged } from '@vue/shared'\nimport { type VNode, currentBlock, isBlockTreeEnabled } from '../vnode'\n\nexport function withMemo(\n  memo: any[],\n  render: () => VNode<any, any>,\n  cache: any[],\n  index: number,\n): VNode<any, any> {\n  const cached = cache[index] as VNode | undefined\n  if (cached && isMemoSame(cached, memo)) {\n    return cached\n  }\n  const ret = render()\n\n  // shallow clone\n  ret.memo = memo.slice()\n  ret.cacheIndex = index\n\n  return (cache[index] = ret)\n}\n\nexport function isMemoSame(cached: VNode, memo: any[]): boolean {\n  const prev: any[] = cached.memo!\n  if (prev.length != memo.length) {\n    return false\n  }\n\n  for (let i = 0; i < prev.length; i++) {\n    if (hasChanged(prev[i], memo[i])) {\n      return false\n    }\n  }\n\n  // make sure to let parent block track it when returning cached\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached)\n  }\n  return true\n}\n", "// Core API ------------------------------------------------------------------\n\nexport const version: string = __VERSION__\nexport {\n  // core\n  reactive,\n  ref,\n  readonly,\n  // utilities\n  unref,\n  proxyRefs,\n  isRef,\n  toRef,\n  toValue,\n  toRefs,\n  isProxy,\n  isReactive,\n  isReadonly,\n  isShallow,\n  // advanced\n  customRef,\n  triggerRef,\n  shallowRef,\n  shallowReactive,\n  shallowReadonly,\n  markRaw,\n  toRaw,\n  // effect\n  effect,\n  stop,\n  getCurrentWatcher,\n  onWatcherCleanup,\n  ReactiveEffect,\n  // effect scope\n  effectScope,\n  EffectScope,\n  getCurrentScope,\n  onScopeDispose,\n} from '@vue/reactivity'\nexport { computed } from './apiComputed'\nexport {\n  watch,\n  watchEffect,\n  watchPostEffect,\n  watchSyncEffect,\n} from './apiWatch'\nexport {\n  onBeforeMount,\n  onMounted,\n  onBeforeUpdate,\n  onUpdated,\n  onBeforeUnmount,\n  onUnmounted,\n  onActivated,\n  onDeactivated,\n  onRenderTracked,\n  onRenderTriggered,\n  onErrorCaptured,\n  onServerPrefetch,\n} from './apiLifecycle'\nexport { provide, inject, hasInjectionContext } from './apiInject'\nexport { nextTick } from './scheduler'\nexport { defineComponent } from './apiDefineComponent'\nexport { defineAsyncComponent } from './apiAsyncComponent'\nexport { useAttrs, useSlots } from './apiSetupHelpers'\nexport { useModel } from './helpers/useModel'\nexport { useTemplateRef } from './helpers/useTemplateRef'\nexport { useId } from './helpers/useId'\nexport {\n  hydrateOnIdle,\n  hydrateOnVisible,\n  hydrateOnMediaQuery,\n  hydrateOnInteraction,\n} from './hydrationStrategies'\n\n// <script setup> API ----------------------------------------------------------\n\nexport {\n  // macros runtime, for typing and warnings only\n  defineProps,\n  defineEmits,\n  defineExpose,\n  defineOptions,\n  defineSlots,\n  defineModel,\n  withDefaults,\n  type DefineProps,\n  type ModelRef,\n  type ComponentTypeEmits,\n} from './apiSetupHelpers'\n\n/**\n * @internal\n */\nexport {\n  mergeDefaults,\n  mergeModels,\n  createPropsRestProxy,\n  withAsyncContext,\n} from './apiSetupHelpers'\n\n// Advanced API ----------------------------------------------------------------\n\n// For getting a hold of the internal instance in setup() - useful for advanced\n// plugins\nexport { getCurrentInstance } from './component'\n\n// For raw render function users\nexport { h } from './h'\n// Advanced render function utilities\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\n// VNode types\nexport { Fragment, Text, Comment, Static, type VNodeRef } from './vnode'\n// Built-in components\nexport { Teleport, type TeleportProps } from './components/Teleport'\nexport { Suspense, type SuspenseProps } from './components/Suspense'\nexport { KeepAlive, type KeepAliveProps } from './components/KeepAlive'\nexport {\n  BaseTransition,\n  BaseTransitionPropsValidators,\n  type BaseTransitionProps,\n} from './components/BaseTransition'\n// For using custom directives\nexport { withDirectives } from './directives'\n// SSR context\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\n\n// Custom Renderer API ---------------------------------------------------------\n\nexport { createRenderer, createHydrationRenderer } from './renderer'\nexport { queuePostFlushCb } from './scheduler'\nimport { warn as _warn } from './warning'\nexport const warn = (__DEV__ ? _warn : NOOP) as typeof _warn\n\n/** @internal */\nexport { assertNumber } from './warning'\nexport {\n  handleError,\n  callWithErrorHandling,\n  callWithAsyncErrorHandling,\n  ErrorCodes,\n} from './errorHandling'\nexport {\n  resolveComponent,\n  resolveDirective,\n  resolveDynamicComponent,\n} from './helpers/resolveAssets'\n// For integration with runtime compiler\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\nexport {\n  useTransitionState,\n  resolveTransitionHooks,\n  setTransitionHooks,\n  getTransitionRawChildren,\n} from './components/BaseTransition'\nexport { initCustomFormatter } from './customFormatter'\n\nimport { ErrorTypeStrings as _ErrorTypeStrings } from './errorHandling'\n/**\n * Runtime error messages. Only exposed in dev or esm builds.\n * @internal\n */\nexport const ErrorTypeStrings = (\n  __ESM_BUNDLER__ || __CJS__ || __DEV__ ? _ErrorTypeStrings : null\n) as typeof _ErrorTypeStrings\n\n// For devtools\nimport {\n  type DevtoolsHook,\n  devtools as _devtools,\n  setDevtoolsHook as _setDevtoolsHook,\n} from './devtools'\n\nexport const devtools = (\n  __DEV__ || __ESM_BUNDLER__ ? _devtools : undefined\n) as DevtoolsHook\nexport const setDevtoolsHook = (\n  __DEV__ || __ESM_BUNDLER__ ? _setDevtoolsHook : NOOP\n) as typeof _setDevtoolsHook\n\n// Types -----------------------------------------------------------------------\n\nimport type { VNode } from './vnode'\nimport type { ComponentInternalInstance } from './component'\n\n// Augment Ref unwrap bail types.\ndeclare module '@vue/reactivity' {\n  export interface RefUnwrapBailTypes {\n    runtimeCoreBailTypes:\n      | VNode\n      | {\n          // directly bailing on ComponentPublicInstance results in recursion\n          // so we use this as a bail hint\n          $: ComponentInternalInstance\n        }\n  }\n}\n\nexport { TrackOpTypes, TriggerOpTypes } from '@vue/reactivity'\nexport type {\n  Ref,\n  MaybeRef,\n  MaybeRefOrGetter,\n  ToRef,\n  ToRefs,\n  UnwrapRef,\n  ShallowRef,\n  ShallowUnwrapRef,\n  CustomRefFactory,\n  ReactiveFlags,\n  DeepReadonly,\n  ShallowReactive,\n  UnwrapNestedRefs,\n  ComputedRef,\n  WritableComputedRef,\n  WritableComputedOptions,\n  ComputedGetter,\n  ComputedSetter,\n  ReactiveEffectRunner,\n  ReactiveEffectOptions,\n  EffectScheduler,\n  DebuggerOptions,\n  DebuggerEvent,\n  DebuggerEventExtraInfo,\n  Raw,\n  Reactive,\n} from '@vue/reactivity'\nexport type {\n  MultiWatchSources,\n  WatchEffect,\n  WatchOptions,\n  WatchEffectOptions as WatchOptionsBase,\n  WatchCallback,\n  WatchSource,\n  WatchHandle,\n  WatchStopHandle,\n} from './apiWatch'\nexport type { InjectionKey } from './apiInject'\nexport type {\n  App,\n  AppConfig,\n  AppContext,\n  Plugin,\n  ObjectPlugin,\n  FunctionPlugin,\n  CreateAppFunction,\n  OptionMergeFunction,\n} from './apiCreateApp'\nexport type {\n  VNode,\n  VNodeChild,\n  VNodeTypes,\n  VNodeProps,\n  VNodeArrayChildren,\n  VNodeNormalizedChildren,\n} from './vnode'\nexport type {\n  Component,\n  ConcreteComponent,\n  FunctionalComponent,\n  ComponentInternalInstance,\n  SetupContext,\n  ComponentCustomProps,\n  AllowedComponentProps,\n  GlobalComponents,\n  GlobalDirectives,\n  ComponentInstance,\n  ComponentCustomElementInterface,\n} from './component'\nexport type {\n  DefineComponent,\n  DefineSetupFnComponent,\n  PublicProps,\n} from './apiDefineComponent'\nexport type {\n  ComponentOptions,\n  ComponentOptionsMixin,\n  ComponentCustomOptions,\n  ComponentOptionsBase,\n  ComponentProvideOptions,\n  RenderFunction,\n  MethodOptions,\n  ComputedOptions,\n  RuntimeCompilerOptions,\n  ComponentInjectOptions,\n  // deprecated\n  ComponentOptionsWithoutProps,\n  ComponentOptionsWithArrayProps,\n  ComponentOptionsWithObjectProps,\n} from './componentOptions'\nexport type {\n  EmitsOptions,\n  ObjectEmitsOptions,\n  EmitsToProps,\n  ShortEmitsToObject,\n  EmitFn,\n} from './componentEmits'\nexport type {\n  ComponentPublicInstance,\n  ComponentCustomProperties,\n  CreateComponentPublicInstance,\n  CreateComponentPublicInstanceWithMixins,\n} from './componentPublicInstance'\nexport type {\n  Renderer,\n  RendererNode,\n  RendererElement,\n  HydrationRenderer,\n  RendererOptions,\n  RootRenderFunction,\n  ElementNamespace,\n} from './renderer'\nexport type { RootHydrateFunction } from './hydration'\nexport type { Slot, Slots, SlotsType } from './componentSlots'\nexport type {\n  Prop,\n  PropType,\n  ComponentPropsOptions,\n  ComponentObjectPropsOptions,\n  ExtractPropTypes,\n  ExtractPublicPropTypes,\n  ExtractDefaultPropTypes,\n} from './componentProps'\nexport type {\n  Directive,\n  DirectiveBinding,\n  DirectiveHook,\n  ObjectDirective,\n  FunctionDirective,\n  DirectiveArguments,\n} from './directives'\nexport type { SuspenseBoundary } from './components/Suspense'\nexport type {\n  TransitionState,\n  TransitionHooks,\n} from './components/BaseTransition'\nexport type {\n  AsyncComponentOptions,\n  AsyncComponentLoader,\n} from './apiAsyncComponent'\nexport type {\n  HydrationStrategy,\n  HydrationStrategyFactory,\n} from './hydrationStrategies'\nexport type { HMRRuntime } from './hmr'\n\n// Internal API ----------------------------------------------------------------\n\n// **IMPORTANT** Internal APIs may change without notice between versions and\n// user code should avoid relying on them.\n\n// For compiler generated code\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\nexport {\n  withCtx,\n  pushScopeId,\n  popScopeId,\n  withScopeId,\n} from './componentRenderContext'\nexport { renderList } from './helpers/renderList'\nexport { toHandlers } from './helpers/toHandlers'\nexport { renderSlot } from './helpers/renderSlot'\nexport { createSlots } from './helpers/createSlots'\nexport { withMemo, isMemoSame } from './helpers/withMemo'\nexport {\n  openBlock,\n  createBlock,\n  setBlockTracking,\n  createTextVNode,\n  createCommentVNode,\n  createStaticVNode,\n  createElementVNode,\n  createElementBlock,\n  guardReactiveProps,\n} from './vnode'\nexport {\n  toDisplayString,\n  camelize,\n  capitalize,\n  toHandlerKey,\n  normalizeProps,\n  normalizeClass,\n  normalizeStyle,\n} from '@vue/shared'\n\n// For test-utils\nexport { transformVNodeArgs } from './vnode'\n\n// SSR -------------------------------------------------------------------------\n\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\n// change without notice between versions. User code should never rely on them.\n\nimport {\n  createComponentInstance,\n  getComponentPublicInstance,\n  setupComponent,\n} from './component'\nimport { renderComponentRoot } from './componentRenderUtils'\nimport { setCurrentRenderingInstance } from './componentRenderContext'\nimport { isVNode, normalizeVNode } from './vnode'\nimport { ensureValidVNode } from './helpers/renderSlot'\nimport { popWarningContext, pushWarningContext } from './warning'\n\nconst _ssrUtils: {\n  createComponentInstance: typeof createComponentInstance\n  setupComponent: typeof setupComponent\n  renderComponentRoot: typeof renderComponentRoot\n  setCurrentRenderingInstance: typeof setCurrentRenderingInstance\n  isVNode: typeof isVNode\n  normalizeVNode: typeof normalizeVNode\n  getComponentPublicInstance: typeof getComponentPublicInstance\n  ensureValidVNode: typeof ensureValidVNode\n  pushWarningContext: typeof pushWarningContext\n  popWarningContext: typeof popWarningContext\n} = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode,\n  normalizeVNode,\n  getComponentPublicInstance,\n  ensureValidVNode,\n  pushWarningContext,\n  popWarningContext,\n}\n\n/**\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\n * @internal\n */\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\n\n// 2.x COMPAT ------------------------------------------------------------------\n\nimport { DeprecationTypes as _DeprecationTypes } from './compat/compatConfig'\nexport type { CompatVue } from './compat/global'\nexport type { LegacyConfig } from './compat/globalConfig'\n\nimport { warnDeprecation } from './compat/compatConfig'\nimport { createCompatVue } from './compat/global'\nimport {\n  checkCompatEnabled,\n  isCompatEnabled,\n  softAssertCompatEnabled,\n} from './compat/compatConfig'\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\nimport { NOOP } from '@vue/shared'\n\n/**\n * @internal only exposed in compat builds\n */\nexport const resolveFilter: typeof _resolveFilter | null = __COMPAT__\n  ? _resolveFilter\n  : null\n\nconst _compatUtils: {\n  warnDeprecation: typeof warnDeprecation\n  createCompatVue: typeof createCompatVue\n  isCompatEnabled: typeof isCompatEnabled\n  checkCompatEnabled: typeof checkCompatEnabled\n  softAssertCompatEnabled: typeof softAssertCompatEnabled\n} = {\n  warnDeprecation,\n  createCompatVue,\n  isCompatEnabled,\n  checkCompatEnabled,\n  softAssertCompatEnabled,\n}\n\n/**\n * @internal only exposed in compat builds.\n */\nexport const compatUtils = (\n  __COMPAT__ ? _compatUtils : null\n) as typeof _compatUtils\n\nexport const DeprecationTypes = (\n  __COMPAT__ ? _DeprecationTypes : null\n) as typeof _DeprecationTypes\n", "import { warn } from '@vue/runtime-core'\nimport type { RendererOptions } from '@vue/runtime-core'\nimport type {\n  TrustedHTML,\n  TrustedTypePolicy,\n  TrustedTypesWindow,\n} from 'trusted-types/lib'\n\nlet policy: Pick<TrustedTypePolicy, 'name' | 'createHTML'> | undefined =\n  undefined\n\nconst tt =\n  typeof window !== 'undefined' &&\n  (window as unknown as TrustedTypesWindow).trustedTypes\n\nif (tt) {\n  try {\n    policy = /*@__PURE__*/ tt.createPolicy('vue', {\n      createHTML: val => val,\n    })\n  } catch (e: unknown) {\n    // `createPolicy` throws a TypeError if the name is a duplicate\n    // and the CSP trusted-types directive is not using `allow-duplicates`.\n    // So we have to catch that error.\n    __DEV__ && warn(`Error creating trusted types policy: ${e}`)\n  }\n}\n\n// __UNSAFE__\n// Reason: potentially setting innerHTML.\n// This function merely perform a type-level trusted type conversion\n// for use in `innerHTML` assignment, etc.\n// Be careful of whatever value passed to this function.\nexport const unsafeToTrustedHTML: (value: string) => TrustedHTML | string =\n  policy ? val => policy.createHTML(val) : val => val\n\nexport const svgNS = 'http://www.w3.org/2000/svg'\nexport const mathmlNS = 'http://www.w3.org/1998/Math/MathML'\n\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\n\nconst templateContainer = doc && /*@__PURE__*/ doc.createElement('template')\n\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null)\n  },\n\n  remove: child => {\n    const parent = child.parentNode\n    if (parent) {\n      parent.removeChild(child)\n    }\n  },\n\n  createElement: (tag, namespace, is, props): Element => {\n    const el =\n      namespace === 'svg'\n        ? doc.createElementNS(svgNS, tag)\n        : namespace === 'mathml'\n          ? doc.createElementNS(mathmlNS, tag)\n          : is\n            ? doc.createElement(tag, { is })\n            : doc.createElement(tag)\n\n    if (tag === 'select' && props && props.multiple != null) {\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\n    }\n\n    return el\n  },\n\n  createText: text => doc.createTextNode(text),\n\n  createComment: text => doc.createComment(text),\n\n  setText: (node, text) => {\n    node.nodeValue = text\n  },\n\n  setElementText: (el, text) => {\n    el.textContent = text\n  },\n\n  parentNode: node => node.parentNode as Element | null,\n\n  nextSibling: node => node.nextSibling,\n\n  querySelector: selector => doc.querySelector(selector),\n\n  setScopeId(el, id) {\n    el.setAttribute(id, '')\n  },\n\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, namespace, start, end) {\n    // <parent> before | first ... last | anchor </parent>\n    const before = anchor ? anchor.previousSibling : parent.lastChild\n    // #5308 can only take cached path if:\n    // - has a single root node\n    // - nextSibling info is still available\n    if (start && (start === end || start.nextSibling)) {\n      // cached\n      while (true) {\n        parent.insertBefore(start!.cloneNode(true), anchor)\n        if (start === end || !(start = start!.nextSibling)) break\n      }\n    } else {\n      // fresh insert\n      templateContainer.innerHTML = unsafeToTrustedHTML(\n        namespace === 'svg'\n          ? `<svg>${content}</svg>`\n          : namespace === 'mathml'\n            ? `<math>${content}</math>`\n            : content,\n      ) as string\n\n      const template = templateContainer.content\n      if (namespace === 'svg' || namespace === 'mathml') {\n        // remove outer svg/math wrapper\n        const wrapper = template.firstChild!\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild)\n        }\n        template.removeChild(wrapper)\n      }\n      parent.insertBefore(template, anchor)\n    }\n    return [\n      // first\n      before ? before.nextSibling! : parent.firstChild!,\n      // last\n      anchor ? anchor.previousSibling! : parent.lastChild!,\n    ]\n  },\n}\n", "import {\n  BaseTransition,\n  type BaseTransitionProps,\n  BaseTransitionPropsValidators,\n  DeprecationTypes,\n  type FunctionalComponent,\n  assertNumber,\n  compatUtils,\n  h,\n} from '@vue/runtime-core'\nimport { extend, isArray, isObject, toNumber } from '@vue/shared'\n\nconst TRANSITION = 'transition'\nconst ANIMATION = 'animation'\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION\n\nexport interface TransitionProps extends BaseTransitionProps<Element> {\n  name?: string\n  type?: AnimationTypes\n  css?: boolean\n  duration?: number | { enter: number; leave: number }\n  // custom transition classes\n  enterFromClass?: string\n  enterActiveClass?: string\n  enterToClass?: string\n  appearFromClass?: string\n  appearActiveClass?: string\n  appearToClass?: string\n  leaveFromClass?: string\n  leaveActiveClass?: string\n  leaveToClass?: string\n}\n\nexport const vtcKey: unique symbol = Symbol('_vtc')\n\nexport interface ElementWithTransition extends HTMLElement {\n  // _vtc = Vue Transition Classes.\n  // Store the temporarily-added transition classes on the element\n  // so that we can avoid overwriting them if the element's class is patched\n  // during the transition.\n  [vtcKey]?: Set<string>\n}\n\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true,\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String,\n}\n\nexport const TransitionPropsValidators: any = /*@__PURE__*/ extend(\n  {},\n  BaseTransitionPropsValidators as any,\n  DOMTransitionPropsValidators,\n)\n\n/**\n * Wrap logic that attaches extra properties to Transition in a function\n * so that it can be annotated as pure\n */\nconst decorate = (t: typeof Transition) => {\n  t.displayName = 'Transition'\n  t.props = TransitionPropsValidators\n  if (__COMPAT__) {\n    t.__isBuiltIn = true\n  }\n  return t\n}\n\n/**\n * DOM Transition is a higher-order-component based on the platform-agnostic\n * base Transition component, with DOM-specific logic.\n */\nexport const Transition: FunctionalComponent<TransitionProps> =\n  /*@__PURE__*/ decorate((props, { slots }) =>\n    h(BaseTransition, resolveTransitionProps(props), slots),\n  )\n\n/**\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\n * with custom HOCs.\n */\nconst callHook = (\n  hook: Function | Function[] | undefined,\n  args: any[] = [],\n) => {\n  if (isArray(hook)) {\n    hook.forEach(h => h(...args))\n  } else if (hook) {\n    hook(...args)\n  }\n}\n\n/**\n * Check if a hook expects a callback (2nd arg), which means the user\n * intends to explicitly control the end of the transition.\n */\nconst hasExplicitCallback = (\n  hook: Function | Function[] | undefined,\n): boolean => {\n  return hook\n    ? isArray(hook)\n      ? hook.some(h => h.length > 1)\n      : hook.length > 1\n    : false\n}\n\nexport function resolveTransitionProps(\n  rawProps: TransitionProps,\n): BaseTransitionProps<Element> {\n  const baseProps: BaseTransitionProps<Element> = {}\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      ;(baseProps as any)[key] = (rawProps as any)[key]\n    }\n  }\n\n  if (rawProps.css === false) {\n    return baseProps\n  }\n\n  const {\n    name = 'v',\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`,\n  } = rawProps\n\n  // legacy transition class compat\n  const legacyClassEnabled =\n    __COMPAT__ &&\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\n  let legacyEnterFromClass: string\n  let legacyAppearFromClass: string\n  let legacyLeaveFromClass: string\n  if (__COMPAT__ && legacyClassEnabled) {\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\n    if (!rawProps.enterFromClass) {\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\n    }\n    if (!rawProps.appearFromClass) {\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\n    }\n    if (!rawProps.leaveFromClass) {\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\n    }\n  }\n\n  const durations = normalizeDuration(duration)\n  const enterDuration = durations && durations[0]\n  const leaveDuration = durations && durations[1]\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled,\n  } = baseProps\n\n  const finishEnter = (\n    el: Element & { _enterCancelled?: boolean },\n    isAppear: boolean,\n    done?: () => void,\n    isCancelled?: boolean,\n  ) => {\n    el._enterCancelled = isCancelled\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\n    done && done()\n  }\n\n  const finishLeave = (\n    el: Element & { _isLeaving?: boolean },\n    done?: () => void,\n  ) => {\n    el._isLeaving = false\n    removeTransitionClass(el, leaveFromClass)\n    removeTransitionClass(el, leaveToClass)\n    removeTransitionClass(el, leaveActiveClass)\n    done && done()\n  }\n\n  const makeEnterHook = (isAppear: boolean) => {\n    return (el: Element, done: () => void) => {\n      const hook = isAppear ? onAppear : onEnter\n      const resolve = () => finishEnter(el, isAppear, done)\n      callHook(hook, [el, resolve])\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\n        if (__COMPAT__ && legacyClassEnabled) {\n          const legacyClass = isAppear\n            ? legacyAppearFromClass\n            : legacyEnterFromClass\n          if (legacyClass) {\n            removeTransitionClass(el, legacyClass)\n          }\n        }\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve)\n        }\n      })\n    }\n  }\n\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el])\n      addTransitionClass(el, enterFromClass)\n      if (__COMPAT__ && legacyClassEnabled && legacyEnterFromClass) {\n        addTransitionClass(el, legacyEnterFromClass)\n      }\n      addTransitionClass(el, enterActiveClass)\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el])\n      addTransitionClass(el, appearFromClass)\n      if (__COMPAT__ && legacyClassEnabled && legacyAppearFromClass) {\n        addTransitionClass(el, legacyAppearFromClass)\n      }\n      addTransitionClass(el, appearActiveClass)\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(\n      el: Element & { _isLeaving?: boolean; _enterCancelled?: boolean },\n      done,\n    ) {\n      el._isLeaving = true\n      const resolve = () => finishLeave(el, done)\n      addTransitionClass(el, leaveFromClass)\n      if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n        addTransitionClass(el, legacyLeaveFromClass)\n      }\n      // add *-leave-active class before reflow so in the case of a cancelled enter transition\n      // the css will not get the final state (#10677)\n      if (!el._enterCancelled) {\n        // force reflow so *-leave-from classes immediately take effect (#2593)\n        forceReflow()\n        addTransitionClass(el, leaveActiveClass)\n      } else {\n        addTransitionClass(el, leaveActiveClass)\n        forceReflow()\n      }\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          // cancelled\n          return\n        }\n        removeTransitionClass(el, leaveFromClass)\n        if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\n          removeTransitionClass(el, legacyLeaveFromClass)\n        }\n        addTransitionClass(el, leaveToClass)\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve)\n        }\n      })\n      callHook(onLeave, [el, resolve])\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false, undefined, true)\n      callHook(onEnterCancelled, [el])\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true, undefined, true)\n      callHook(onAppearCancelled, [el])\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el)\n      callHook(onLeaveCancelled, [el])\n    },\n  } as BaseTransitionProps<Element>)\n}\n\nfunction normalizeDuration(\n  duration: TransitionProps['duration'],\n): [number, number] | null {\n  if (duration == null) {\n    return null\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\n  } else {\n    const n = NumberOf(duration)\n    return [n, n]\n  }\n}\n\nfunction NumberOf(val: unknown): number {\n  const res = toNumber(val)\n  if (__DEV__) {\n    assertNumber(res, '<transition> explicit duration')\n  }\n  return res\n}\n\nexport function addTransitionClass(el: Element, cls: string): void {\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\n  ;(\n    (el as ElementWithTransition)[vtcKey] ||\n    ((el as ElementWithTransition)[vtcKey] = new Set())\n  ).add(cls)\n}\n\nexport function removeTransitionClass(el: Element, cls: string): void {\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\n  const _vtc = (el as ElementWithTransition)[vtcKey]\n  if (_vtc) {\n    _vtc.delete(cls)\n    if (!_vtc!.size) {\n      ;(el as ElementWithTransition)[vtcKey] = undefined\n    }\n  }\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb)\n  })\n}\n\nlet endId = 0\n\nfunction whenTransitionEnds(\n  el: Element & { _endId?: number },\n  expectedType: TransitionProps['type'] | undefined,\n  explicitTimeout: number | null,\n  resolve: () => void,\n) {\n  const id = (el._endId = ++endId)\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve()\n    }\n  }\n\n  if (explicitTimeout != null) {\n    return setTimeout(resolveIfNotStale, explicitTimeout)\n  }\n\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\n  if (!type) {\n    return resolve()\n  }\n\n  const endEvent = type + 'end'\n  let ended = 0\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd)\n    resolveIfNotStale()\n  }\n  const onEnd = (e: Event) => {\n    if (e.target === el && ++ended >= propCount) {\n      end()\n    }\n  }\n  setTimeout(() => {\n    if (ended < propCount) {\n      end()\n    }\n  }, timeout + 1)\n  el.addEventListener(endEvent, onEnd)\n}\n\ninterface CSSTransitionInfo {\n  type: AnimationTypes | null\n  propCount: number\n  timeout: number\n  hasTransform: boolean\n}\n\ntype AnimationProperties = 'Delay' | 'Duration'\ntype StylePropertiesKey =\n  | `${AnimationTypes}${AnimationProperties}`\n  | `${typeof TRANSITION}Property`\n\nexport function getTransitionInfo(\n  el: Element,\n  expectedType?: TransitionProps['type'],\n): CSSTransitionInfo {\n  const styles = window.getComputedStyle(el) as Pick<\n    CSSStyleDeclaration,\n    StylePropertiesKey\n  >\n  // JSDOM may return undefined for transition properties\n  const getStyleProperties = (key: StylePropertiesKey) =>\n    (styles[key] || '').split(', ')\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`)\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`)\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`)\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`)\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\n\n  let type: CSSTransitionInfo['type'] = null\n  let timeout = 0\n  let propCount = 0\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION\n      timeout = transitionTimeout\n      propCount = transitionDurations.length\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION\n      timeout = animationTimeout\n      propCount = animationDurations.length\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout)\n    type =\n      timeout > 0\n        ? transitionTimeout > animationTimeout\n          ? TRANSITION\n          : ANIMATION\n        : null\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0\n  }\n  const hasTransform =\n    type === TRANSITION &&\n    /\\b(transform|all)(,|$)/.test(\n      getStyleProperties(`${TRANSITION}Property`).toString(),\n    )\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform,\n  }\n}\n\nfunction getTimeout(delays: string[], durations: string[]): number {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays)\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s: string): number {\n  // #8409 default value for CSS durations can be 'auto'\n  if (s === 'auto') return 0\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n// synchronously force layout to put elements into a certain state\nexport function forceReflow(): number {\n  return document.body.offsetHeight\n}\n", "import { type ElementWithTransition, vtcKey } from '../components/Transition'\n\n// compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\nexport function patchClass(\n  el: Element,\n  value: string | null,\n  isSVG: boolean,\n): void {\n  // directly setting className should be faster than setAttribute in theory\n  // if this is an element during a transition, take the temporary transition\n  // classes into account.\n  const transitionClasses = (el as ElementWithTransition)[vtcKey]\n  if (transitionClasses) {\n    value = (\n      value ? [value, ...transitionClasses] : [...transitionClasses]\n    ).join(' ')\n  }\n  if (value == null) {\n    el.removeAttribute('class')\n  } else if (isSVG) {\n    el.setAttribute('class', value)\n  } else {\n    el.className = value\n  }\n}\n", "import type { ObjectDirective } from '@vue/runtime-core'\n\nexport const vShowOriginalDisplay: unique symbol = Symbol('_vod')\nexport const vShowHidden: unique symbol = Symbol('_vsh')\n\nexport interface VShowElement extends HTMLElement {\n  // _vod = vue original display\n  [vShowOriginalDisplay]: string\n  [vShowHidden]: boolean\n}\n\nexport const vShow: ObjectDirective<VShowElement> & { name?: 'show' } = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOriginalDisplay] =\n      el.style.display === 'none' ? '' : el.style.display\n    if (transition && value) {\n      transition.beforeEnter(el)\n    } else {\n      setDisplay(el, value)\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el)\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue) return\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el)\n        setDisplay(el, true)\n        transition.enter(el)\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false)\n        })\n      }\n    } else {\n      setDisplay(el, value)\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value)\n  },\n}\n\nif (__DEV__) {\n  vShow.name = 'show'\n}\n\nfunction setDisplay(el: VShowElement, value: unknown): void {\n  el.style.display = value ? el[vShowOriginalDisplay] : 'none'\n  el[vShowHidden] = !value\n}\n\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nexport function initVShowForSSR(): void {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: 'none' } }\n    }\n  }\n}\n", "import {\n  Fragment,\n  Static,\n  type VNode,\n  getCurrentInstance,\n  onBeforeUpdate,\n  onMounted,\n  onUnmounted,\n  queuePostFlushCb,\n  warn,\n  watch,\n} from '@vue/runtime-core'\nimport { NOOP, ShapeFlags } from '@vue/shared'\n\nexport const CSS_VAR_TEXT: unique symbol = Symbol(__DEV__ ? 'CSS_VAR_TEXT' : '')\n/**\n * Runtime helper for SFC's CSS variable injection feature.\n * @private\n */\nexport function useCssVars(getter: (ctx: any) => Record<string, string>): void {\n  if (!__BROWSER__ && !__TEST__) return\n\n  const instance = getCurrentInstance()\n  /* v8 ignore start */\n  if (!instance) {\n    __DEV__ &&\n      warn(`useCssVars is called without current active component instance.`)\n    return\n  }\n  /* v8 ignore stop */\n\n  const updateTeleports = (instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`),\n    ).forEach(node => setVarsOnNode(node, vars))\n  })\n\n  if (__DEV__) {\n    instance.getCssVars = () => getter(instance.proxy)\n  }\n\n  const setVars = () => {\n    const vars = getter(instance.proxy)\n    if (instance.ce) {\n      setVarsOnNode(instance.ce as any, vars)\n    } else {\n      setVarsOnVNode(instance.subTree, vars)\n    }\n    updateTeleports(vars)\n  }\n\n  // handle cases where child component root is affected\n  // and triggers reflow in onMounted\n  onBeforeUpdate(() => {\n    queuePostFlushCb(setVars)\n  })\n\n  onMounted(() => {\n    // run setVars synchronously here, but run as post-effect on changes\n    watch(setVars, NOOP, { flush: 'post' })\n    const ob = new MutationObserver(setVars)\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\n    onUnmounted(() => ob.disconnect())\n  })\n}\n\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\n    const suspense = vnode.suspense!\n    vnode = suspense.activeBranch!\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch!, vars)\n      })\n    }\n  }\n\n  // drill down HOCs until it's a non-component vnode\n  while (vnode.component) {\n    vnode = vnode.component.subTree\n  }\n\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\n    setVarsOnNode(vnode.el as Node, vars)\n  } else if (vnode.type === Fragment) {\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode\n    while (el) {\n      setVarsOnNode(el as Node, vars)\n      if (el === anchor) break\n      el = el.nextSibling\n    }\n  }\n}\n\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\n  if (el.nodeType === 1) {\n    const style = (el as HTMLElement).style\n    let cssText = ''\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key])\n      cssText += `--${key}: ${vars[key]};`\n    }\n    ;(style as any)[CSS_VAR_TEXT] = cssText\n  }\n}\n", "import { capitalize, hyphenate, isArray, isString } from '@vue/shared'\nimport { camelize, warn } from '@vue/runtime-core'\nimport {\n  type VShowElement,\n  vShowHidden,\n  vShowOriginalDisplay,\n} from '../directives/vShow'\nimport { CSS_VAR_TEXT } from '../helpers/useCssVars'\n\ntype Style = string | Record<string, string | string[]> | null\n\nconst displayRE = /(^|;)\\s*display\\s*:/\n\nexport function patchStyle(el: Element, prev: Style, next: Style): void {\n  const style = (el as HTMLElement).style\n  const isCssString = isString(next)\n  let hasControlledDisplay = false\n  if (next && !isCssString) {\n    if (prev) {\n      if (!isString(prev)) {\n        for (const key in prev) {\n          if (next[key] == null) {\n            setStyle(style, key, '')\n          }\n        }\n      } else {\n        for (const prevStyle of prev.split(';')) {\n          const key = prevStyle.slice(0, prevStyle.indexOf(':')).trim()\n          if (next[key] == null) {\n            setStyle(style, key, '')\n          }\n        }\n      }\n    }\n    for (const key in next) {\n      if (key === 'display') {\n        hasControlledDisplay = true\n      }\n      setStyle(style, key, next[key])\n    }\n  } else {\n    if (isCssString) {\n      if (prev !== next) {\n        // #9821\n        const cssVarText = (style as any)[CSS_VAR_TEXT]\n        if (cssVarText) {\n          ;(next as string) += ';' + cssVarText\n        }\n        style.cssText = next as string\n        hasControlledDisplay = displayRE.test(next)\n      }\n    } else if (prev) {\n      el.removeAttribute('style')\n    }\n  }\n  // indicates the element also has `v-show`.\n  if (vShowOriginalDisplay in el) {\n    // make v-show respect the current v-bind style display when shown\n    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : ''\n    // if v-show is in hidden state, v-show has higher priority\n    if ((el as VShowElement)[vShowHidden]) {\n      style.display = 'none'\n    }\n  }\n}\n\nconst semicolonRE = /[^\\\\];\\s*$/\nconst importantRE = /\\s*!important$/\n\nfunction setStyle(\n  style: CSSStyleDeclaration,\n  name: string,\n  val: string | string[],\n) {\n  if (isArray(val)) {\n    val.forEach(v => setStyle(style, name, v))\n  } else {\n    if (val == null) val = ''\n    if (__DEV__) {\n      if (semicolonRE.test(val)) {\n        warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`,\n        )\n      }\n    }\n    if (name.startsWith('--')) {\n      // custom property definition\n      style.setProperty(name, val)\n    } else {\n      const prefixed = autoPrefix(style, name)\n      if (importantRE.test(val)) {\n        // !important\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, ''),\n          'important',\n        )\n      } else {\n        style[prefixed as any] = val\n      }\n    }\n  }\n}\n\nconst prefixes = ['Webkit', 'Moz', 'ms']\nconst prefixCache: Record<string, string> = {}\n\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\n  const cached = prefixCache[rawName]\n  if (cached) {\n    return cached\n  }\n  let name = camelize(rawName)\n  if (name !== 'filter' && name in style) {\n    return (prefixCache[rawName] = name)\n  }\n  name = capitalize(name)\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name\n    if (prefixed in style) {\n      return (prefixCache[rawName] = prefixed)\n    }\n  }\n  return rawName\n}\n", "import {\n  NOOP,\n  includeBooleanAttr,\n  isSpecialBooleanAttr,\n  isSymbol,\n  makeMap,\n} from '@vue/shared'\nimport {\n  type ComponentInternalInstance,\n  DeprecationTypes,\n  compatUtils,\n} from '@vue/runtime-core'\n\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\n\nexport function patchAttr(\n  el: Element,\n  key: string,\n  value: any,\n  isSVG: boolean,\n  instance?: ComponentInternalInstance | null,\n  isBoolean: boolean = isSpecialBooleanAttr(key),\n): void {\n  if (isSVG && key.startsWith('xlink:')) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\n    } else {\n      el.setAttributeNS(xlinkNS, key, value)\n    }\n  } else {\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\n      return\n    }\n\n    // note we are only checking boolean attributes that don't have a\n    // corresponding dom prop of the same name here.\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\n      el.removeAttribute(key)\n    } else {\n      // attribute value is a string https://html.spec.whatwg.org/multipage/dom.html#attributes\n      el.setAttribute(\n        key,\n        isBoolean ? '' : isSymbol(value) ? String(value) : value,\n      )\n    }\n  }\n}\n\n// 2.x compat\nconst isEnumeratedAttr = __COMPAT__\n  ? /*@__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\n  : NOOP\n\nexport function compatCoerceAttr(\n  el: Element,\n  key: string,\n  value: unknown,\n  instance: ComponentInternalInstance | null = null,\n): boolean {\n  if (isEnumeratedAttr(key)) {\n    const v2CoercedValue =\n      value === null\n        ? 'false'\n        : typeof value !== 'boolean' && value !== undefined\n          ? 'true'\n          : null\n    if (\n      v2CoercedValue &&\n      compatUtils.softAssertCompatEnabled(\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\n        instance,\n        key,\n        value,\n        v2CoercedValue,\n      )\n    ) {\n      el.setAttribute(key, v2CoercedValue)\n      return true\n    }\n  } else if (\n    value === false &&\n    !isSpecialBooleanAttr(key) &&\n    compatUtils.isCompatEnabled(DeprecationTypes.ATTR_FALSE_VALUE, instance)\n  ) {\n    compatUtils.warnDeprecation(\n      DeprecationTypes.ATTR_FALSE_VALUE,\n      instance,\n      key,\n    )\n    el.removeAttribute(key)\n    return true\n  }\n  return false\n}\n", "import { DeprecationTypes, compatUtils, warn } from '@vue/runtime-core'\nimport { includeBooleanAttr } from '@vue/shared'\nimport { unsafeToTrustedHTML } from '../nodeOps'\n\n// functions. The user is responsible for using them with only trusted content.\nexport function patchDOMProp(\n  el: any,\n  key: string,\n  value: any,\n  parentComponent: any,\n  attrName?: string,\n): void {\n  // __UNSAFE__\n  // Reason: potentially setting innerHTML.\n  // This can come from explicit usage of v-html or innerHTML as a prop in render\n  if (key === 'innerHTML' || key === 'textContent') {\n    // null value case is handled in renderer patchElement before patching\n    // children\n    if (value != null) {\n      el[key] = key === 'innerHTML' ? unsafeToTrustedHTML(value) : value\n    }\n    return\n  }\n\n  const tag = el.tagName\n\n  if (\n    key === 'value' &&\n    tag !== 'PROGRESS' &&\n    // custom elements may use _value internally\n    !tag.includes('-')\n  ) {\n    // #4956: <option> value will fallback to its text content so we need to\n    // compare against its attribute value instead.\n    const oldValue =\n      tag === 'OPTION' ? el.getAttribute('value') || '' : el.value\n    const newValue =\n      value == null\n        ? // #11647: value should be set as empty string for null and undefined,\n          // but <input type=\"checkbox\"> should be set as 'on'.\n          el.type === 'checkbox'\n          ? 'on'\n          : ''\n        : String(value)\n    if (oldValue !== newValue || !('_value' in el)) {\n      el.value = newValue\n    }\n    if (value == null) {\n      el.removeAttribute(key)\n    }\n    // store value as _value as well since\n    // non-string values will be stringified.\n    el._value = value\n    return\n  }\n\n  let needRemove = false\n  if (value === '' || value == null) {\n    const type = typeof el[key]\n    if (type === 'boolean') {\n      // e.g. <select multiple> compiles to { multiple: '' }\n      value = includeBooleanAttr(value)\n    } else if (value == null && type === 'string') {\n      // e.g. <div :id=\"null\">\n      value = ''\n      needRemove = true\n    } else if (type === 'number') {\n      // e.g. <img :width=\"null\">\n      value = 0\n      needRemove = true\n    }\n  } else {\n    if (\n      __COMPAT__ &&\n      value === false &&\n      compatUtils.isCompatEnabled(\n        DeprecationTypes.ATTR_FALSE_VALUE,\n        parentComponent,\n      )\n    ) {\n      const type = typeof el[key]\n      if (type === 'string' || type === 'number') {\n        __DEV__ &&\n          compatUtils.warnDeprecation(\n            DeprecationTypes.ATTR_FALSE_VALUE,\n            parentComponent,\n            key,\n          )\n        value = type === 'number' ? 0 : ''\n        needRemove = true\n      }\n    }\n  }\n\n  // some properties perform value validation and throw,\n  // some properties has getter, no setter, will error in 'use strict'\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\n  try {\n    el[key] = value\n  } catch (e: any) {\n    // do not warn if value is auto-coerced from nullish values\n    if (__DEV__ && !needRemove) {\n      warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: ` +\n          `value ${value} is invalid.`,\n        e,\n      )\n    }\n  }\n  needRemove && el.removeAttribute(attrName || key)\n}\n", "import { NOOP, hyphenate, isArray, isFunction } from '@vue/shared'\nimport {\n  type ComponentInternalInstance,\n  ErrorCodes,\n  callWithAsyncErrorHandling,\n  warn,\n} from '@vue/runtime-core'\n\ninterface Invoker extends EventListener {\n  value: EventValue\n  attached: number\n}\n\ntype EventValue = Function | Function[]\n\nexport function addEventListener(\n  el: Element,\n  event: string,\n  handler: EventListener,\n  options?: EventListenerOptions,\n): void {\n  el.addEventListener(event, handler, options)\n}\n\nexport function removeEventListener(\n  el: Element,\n  event: string,\n  handler: EventListener,\n  options?: EventListenerOptions,\n): void {\n  el.removeEventListener(event, handler, options)\n}\n\nconst veiKey: unique symbol = Symbol('_vei')\n\nexport function patchEvent(\n  el: Element & { [veiKey]?: Record<string, Invoker | undefined> },\n  rawName: string,\n  prevValue: EventValue | null,\n  nextValue: EventValue | unknown,\n  instance: ComponentInternalInstance | null = null,\n): void {\n  // vei = vue event invokers\n  const invokers = el[veiKey] || (el[veiKey] = {})\n  const existingInvoker = invokers[rawName]\n  if (nextValue && existingInvoker) {\n    // patch\n    existingInvoker.value = __DEV__\n      ? sanitizeEventValue(nextValue, rawName)\n      : (nextValue as EventValue)\n  } else {\n    const [name, options] = parseName(rawName)\n    if (nextValue) {\n      // add\n      const invoker = (invokers[rawName] = createInvoker(\n        __DEV__\n          ? sanitizeEventValue(nextValue, rawName)\n          : (nextValue as EventValue),\n        instance,\n      ))\n      addEventListener(el, name, invoker, options)\n    } else if (existingInvoker) {\n      // remove\n      removeEventListener(el, name, existingInvoker, options)\n      invokers[rawName] = undefined\n    }\n  }\n}\n\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\n\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\n  let options: EventListenerOptions | undefined\n  if (optionsModifierRE.test(name)) {\n    options = {}\n    let m\n    while ((m = name.match(optionsModifierRE))) {\n      name = name.slice(0, name.length - m[0].length)\n      ;(options as any)[m[0].toLowerCase()] = true\n    }\n  }\n  const event = name[2] === ':' ? name.slice(3) : hyphenate(name.slice(2))\n  return [event, options]\n}\n\n// To avoid the overhead of repeatedly calling Date.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\nlet cachedNow: number = 0\nconst p = /*@__PURE__*/ Promise.resolve()\nconst getNow = () =>\n  cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = Date.now()))\n\nfunction createInvoker(\n  initialValue: EventValue,\n  instance: ComponentInternalInstance | null,\n) {\n  const invoker: Invoker = (e: Event & { _vts?: number }) => {\n    // async edge case vuejs/vue#6566\n    // inner click event triggers patch, event handler\n    // attached to outer element during patch, and triggered again. This\n    // happens because browsers fire microtask ticks between event propagation.\n    // this no longer happens for templates in Vue 3, but could still be\n    // theoretically possible for hand-written render functions.\n    // the solution: we save the timestamp when a handler is attached,\n    // and also attach the timestamp to any event that was handled by vue\n    // for the first time (to avoid inconsistent event timestamp implementations\n    // or events fired from iframes, e.g. #2513)\n    // The handler would only fire if the event passed to it was fired\n    // AFTER it was attached.\n    if (!e._vts) {\n      e._vts = Date.now()\n    } else if (e._vts <= invoker.attached) {\n      return\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      ErrorCodes.NATIVE_EVENT_HANDLER,\n      [e],\n    )\n  }\n  invoker.value = initialValue\n  invoker.attached = getNow()\n  return invoker\n}\n\nfunction sanitizeEventValue(value: unknown, propName: string): EventValue {\n  if (isFunction(value) || isArray(value)) {\n    return value as EventValue\n  }\n  warn(\n    `Wrong type passed as event handler to ${propName} - did you forget @ or : ` +\n      `in front of your prop?\\nExpected function or array of functions, received type ${typeof value}.`,\n  )\n  return NOOP\n}\n\nfunction patchStopImmediatePropagation(\n  e: Event,\n  value: EventValue,\n): EventValue {\n  if (isArray(value)) {\n    const originalStop = e.stopImmediatePropagation\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e)\n      ;(e as any)._stopped = true\n    }\n    return (value as Function[]).map(\n      fn => (e: Event) => !(e as any)._stopped && fn && fn(e),\n    )\n  } else {\n    return value\n  }\n}\n", "import { patchClass } from './modules/class'\nimport { patchStyle } from './modules/style'\nimport { patchAttr } from './modules/attrs'\nimport { patchDOMProp } from './modules/props'\nimport { patchEvent } from './modules/events'\nimport {\n  camelize,\n  isFunction,\n  isModelListener,\n  isOn,\n  isString,\n} from '@vue/shared'\nimport type { RendererOptions } from '@vue/runtime-core'\nimport type { VueElement } from './apiCustomElement'\n\nconst isNativeOn = (key: string) =>\n  key.charCodeAt(0) === 111 /* o */ &&\n  key.charCodeAt(1) === 110 /* n */ &&\n  // lowercase letter\n  key.charCodeAt(2) > 96 &&\n  key.charCodeAt(2) < 123\n\ntype DOMRendererOptions = RendererOptions<Node, Element>\n\nexport const patchProp: DOMRendererOptions['patchProp'] = (\n  el,\n  key,\n  prevValue,\n  nextValue,\n  namespace,\n  parentComponent,\n) => {\n  const isSVG = namespace === 'svg'\n  if (key === 'class') {\n    patchClass(el, nextValue, isSVG)\n  } else if (key === 'style') {\n    patchStyle(el, prevValue, nextValue)\n  } else if (isOn(key)) {\n    // ignore v-model listeners\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\n    }\n  } else if (\n    key[0] === '.'\n      ? ((key = key.slice(1)), true)\n      : key[0] === '^'\n        ? ((key = key.slice(1)), false)\n        : shouldSetAsProp(el, key, nextValue, isSVG)\n  ) {\n    patchDOMProp(el, key, nextValue, parentComponent)\n    // #6007 also set form state as attributes so they work with\n    // <input type=\"reset\"> or libs / extensions that expect attributes\n    // #11163 custom elements may use value as an prop and set it as object\n    if (\n      !el.tagName.includes('-') &&\n      (key === 'value' || key === 'checked' || key === 'selected')\n    ) {\n      patchAttr(el, key, nextValue, isSVG, parentComponent, key !== 'value')\n    }\n  } else if (\n    // #11081 force set props for possible async custom element\n    (el as VueElement)._isVueCE &&\n    (/[A-Z]/.test(key) || !isString(nextValue))\n  ) {\n    patchDOMProp(el, camelize(key), nextValue, parentComponent, key)\n  } else {\n    // special case for <input v-model type=\"checkbox\"> with\n    // :true-value & :false-value\n    // store value as dom properties since non-string values will be\n    // stringified.\n    if (key === 'true-value') {\n      ;(el as any)._trueValue = nextValue\n    } else if (key === 'false-value') {\n      ;(el as any)._falseValue = nextValue\n    }\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\n  }\n}\n\nfunction shouldSetAsProp(\n  el: Element,\n  key: string,\n  value: unknown,\n  isSVG: boolean,\n) {\n  if (isSVG) {\n    // most keys must be set as attribute on svg elements to work\n    // ...except innerHTML & textContent\n    if (key === 'innerHTML' || key === 'textContent') {\n      return true\n    }\n    // or native onclick with function values\n    if (key in el && isNativeOn(key) && isFunction(value)) {\n      return true\n    }\n    return false\n  }\n\n  // these are enumerated attrs, however their corresponding DOM properties\n  // are actually booleans - this leads to setting it with a string \"false\"\n  // value leading it to be coerced to `true`, so we need to always treat\n  // them as attributes.\n  // Note that `contentEditable` doesn't have this problem: its DOM\n  // property is also enumerated string values.\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\n    return false\n  }\n\n  // #1787, #2840 form property on form elements is readonly and must be set as\n  // attribute.\n  if (key === 'form') {\n    return false\n  }\n\n  // #1526 <input list> must be set as attribute\n  if (key === 'list' && el.tagName === 'INPUT') {\n    return false\n  }\n\n  // #2766 <textarea type> must be set as attribute\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\n    return false\n  }\n\n  // #8780 the width or height of embedded tags must be set as attribute\n  if (key === 'width' || key === 'height') {\n    const tag = el.tagName\n    if (\n      tag === 'IMG' ||\n      tag === 'VIDEO' ||\n      tag === 'CANVAS' ||\n      tag === 'SOURCE'\n    ) {\n      return false\n    }\n  }\n\n  // native onclick with string value, must be set as attribute\n  if (isNativeOn(key) && isString(value)) {\n    return false\n  }\n\n  return key in el\n}\n", "import {\n  type App,\n  type Component,\n  type ComponentCustomElementInterface,\n  type ComponentInjectOptions,\n  type ComponentInternalInstance,\n  type ComponentObjectPropsOptions,\n  type ComponentOptions,\n  type ComponentOptionsBase,\n  type ComponentOptionsMixin,\n  type ComponentProvideOptions,\n  type ComponentPublicInstance,\n  type ComputedOptions,\n  type ConcreteComponent,\n  type CreateAppFunction,\n  type CreateComponentPublicInstanceWithMixins,\n  type DefineComponent,\n  type Directive,\n  type EmitsOptions,\n  type EmitsToProps,\n  type ExtractPropTypes,\n  type MethodOptions,\n  type RenderFunction,\n  type SetupContext,\n  type SlotsType,\n  type VNode,\n  type VNodeProps,\n  createVNode,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  unref,\n  warn,\n} from '@vue/runtime-core'\nimport {\n  camelize,\n  extend,\n  hasOwn,\n  hyphenate,\n  isArray,\n  isPlainObject,\n  toNumber,\n} from '@vue/shared'\nimport { createApp, createSSRApp, render } from '.'\n\n// marker for attr removal\nconst REMOVAL = {}\n\nexport type VueElementConstructor<P = {}> = {\n  new (initialProps?: Record<string, any>): VueElement & P\n}\n\nexport interface CustomElementOptions {\n  styles?: string[]\n  shadowRoot?: boolean\n  nonce?: string\n  configureApp?: (app: App) => void\n}\n\n// defineCustomElement provides the same type inference as defineComponent\n// so most of the following overloads should be kept in sync w/ defineComponent.\n\n// overload 1: direct setup function\nexport function defineCustomElement<Props, RawBindings = object>(\n  setup: (props: Props, ctx: SetupContext) => RawBindings | RenderFunction,\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs' | 'emits'> &\n    CustomElementOptions & {\n      props?: (keyof Props)[]\n    },\n): VueElementConstructor<Props>\nexport function defineCustomElement<Props, RawBindings = object>(\n  setup: (props: Props, ctx: SetupContext) => RawBindings | RenderFunction,\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs' | 'emits'> &\n    CustomElementOptions & {\n      props?: ComponentObjectPropsOptions<Props>\n    },\n): VueElementConstructor<Props>\n\n// overload 2: defineCustomElement with options object, infer props from options\nexport function defineCustomElement<\n  // props\n  RuntimePropsOptions extends\n    ComponentObjectPropsOptions = ComponentObjectPropsOptions,\n  PropsKeys extends string = string,\n  // emits\n  RuntimeEmitsOptions extends EmitsOptions = {},\n  EmitsKeys extends string = string,\n  // other options\n  Data = {},\n  SetupBindings = {},\n  Computed extends ComputedOptions = {},\n  Methods extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  InjectOptions extends ComponentInjectOptions = {},\n  InjectKeys extends string = string,\n  Slots extends SlotsType = {},\n  LocalComponents extends Record<string, Component> = {},\n  Directives extends Record<string, Directive> = {},\n  Exposed extends string = string,\n  Provide extends ComponentProvideOptions = ComponentProvideOptions,\n  // resolved types\n  InferredProps = string extends PropsKeys\n    ? ComponentObjectPropsOptions extends RuntimePropsOptions\n      ? {}\n      : ExtractPropTypes<RuntimePropsOptions>\n    : { [key in PropsKeys]?: any },\n  ResolvedProps = InferredProps & EmitsToProps<RuntimeEmitsOptions>,\n>(\n  options: CustomElementOptions & {\n    props?: (RuntimePropsOptions & ThisType<void>) | PropsKeys[]\n  } & ComponentOptionsBase<\n      ResolvedProps,\n      SetupBindings,\n      Data,\n      Computed,\n      Methods,\n      Mixin,\n      Extends,\n      RuntimeEmitsOptions,\n      EmitsKeys,\n      {}, // Defaults\n      InjectOptions,\n      InjectKeys,\n      Slots,\n      LocalComponents,\n      Directives,\n      Exposed,\n      Provide\n    > &\n    ThisType<\n      CreateComponentPublicInstanceWithMixins<\n        Readonly<ResolvedProps>,\n        SetupBindings,\n        Data,\n        Computed,\n        Methods,\n        Mixin,\n        Extends,\n        RuntimeEmitsOptions,\n        EmitsKeys,\n        {},\n        false,\n        InjectOptions,\n        Slots,\n        LocalComponents,\n        Directives,\n        Exposed\n      >\n    >,\n  extraOptions?: CustomElementOptions,\n): VueElementConstructor<ResolvedProps>\n\n// overload 3: defining a custom element from the returned value of\n// `defineComponent`\nexport function defineCustomElement<\n  // this should be `ComponentPublicInstanceConstructor` but that type is not exported\n  T extends { new (...args: any[]): ComponentPublicInstance<any> },\n>(\n  options: T,\n  extraOptions?: CustomElementOptions,\n): VueElementConstructor<\n  T extends DefineComponent<infer P, any, any, any> ? P : unknown\n>\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport function defineCustomElement(\n  options: any,\n  extraOptions?: ComponentOptions,\n  /**\n   * @internal\n   */\n  _createApp?: CreateAppFunction<Element>,\n): VueElementConstructor {\n  const Comp = defineComponent(options, extraOptions) as any\n  if (isPlainObject(Comp)) extend(Comp, extraOptions)\n  class VueCustomElement extends VueElement {\n    static def = Comp\n    constructor(initialProps?: Record<string, any>) {\n      super(Comp, initialProps, _createApp)\n    }\n  }\n\n  return VueCustomElement\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\nexport const defineSSRCustomElement = ((\n  options: any,\n  extraOptions?: ComponentOptions,\n) => {\n  // @ts-expect-error\n  return defineCustomElement(options, extraOptions, createSSRApp)\n}) as typeof defineCustomElement\n\nconst BaseClass = (\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\n) as typeof HTMLElement\n\ntype InnerComponentDef = ConcreteComponent & CustomElementOptions\n\nexport class VueElement\n  extends BaseClass\n  implements ComponentCustomElementInterface\n{\n  _isVueCE = true\n  /**\n   * @internal\n   */\n  _instance: ComponentInternalInstance | null = null\n  /**\n   * @internal\n   */\n  _app: App | null = null\n  /**\n   * @internal\n   */\n  _root: Element | ShadowRoot\n  /**\n   * @internal\n   */\n  _nonce: string | undefined = this._def.nonce\n\n  /**\n   * @internal\n   */\n  _teleportTarget?: HTMLElement\n\n  private _connected = false\n  private _resolved = false\n  private _numberProps: Record<string, true> | null = null\n  private _styleChildren = new WeakSet()\n  private _pendingResolve: Promise<void> | undefined\n  private _parent: VueElement | undefined\n  /**\n   * dev only\n   */\n  private _styles?: HTMLStyleElement[]\n  /**\n   * dev only\n   */\n  private _childStyles?: Map<string, HTMLStyleElement[]>\n  private _ob?: MutationObserver | null = null\n  private _slots?: Record<string, Node[]>\n\n  constructor(\n    /**\n     * Component def - note this may be an AsyncWrapper, and this._def will\n     * be overwritten by the inner component when resolved.\n     */\n    private _def: InnerComponentDef,\n    private _props: Record<string, any> = {},\n    private _createApp: CreateAppFunction<Element> = createApp,\n  ) {\n    super()\n    if (this.shadowRoot && _createApp !== createApp) {\n      this._root = this.shadowRoot\n    } else {\n      if (__DEV__ && this.shadowRoot) {\n        warn(\n          `Custom element has pre-rendered declarative shadow root but is not ` +\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`,\n        )\n      }\n      if (_def.shadowRoot !== false) {\n        this.attachShadow({ mode: 'open' })\n        this._root = this.shadowRoot!\n      } else {\n        this._root = this\n      }\n    }\n\n    if (!(this._def as ComponentOptions).__asyncLoader) {\n      // for sync component defs we can immediately resolve props\n      this._resolveProps(this._def)\n    }\n  }\n\n  connectedCallback(): void {\n    // avoid resolving component if it's not connected\n    if (!this.isConnected) return\n\n    if (!this.shadowRoot) {\n      this._parseSlots()\n    }\n    this._connected = true\n\n    // locate nearest Vue custom element parent for provide/inject\n    let parent: Node | null = this\n    while (\n      (parent = parent && (parent.parentNode || (parent as ShadowRoot).host))\n    ) {\n      if (parent instanceof VueElement) {\n        this._parent = parent\n        break\n      }\n    }\n\n    if (!this._instance) {\n      if (this._resolved) {\n        this._setParent()\n        this._update()\n      } else {\n        if (parent && parent._pendingResolve) {\n          this._pendingResolve = parent._pendingResolve.then(() => {\n            this._pendingResolve = undefined\n            this._resolveDef()\n          })\n        } else {\n          this._resolveDef()\n        }\n      }\n    }\n  }\n\n  private _setParent(parent = this._parent) {\n    if (parent) {\n      this._instance!.parent = parent._instance\n      this._instance!.provides = parent._instance!.provides\n    }\n  }\n\n  disconnectedCallback(): void {\n    this._connected = false\n    nextTick(() => {\n      if (!this._connected) {\n        if (this._ob) {\n          this._ob.disconnect()\n          this._ob = null\n        }\n        // unmount\n        this._app && this._app.unmount()\n        if (this._instance) this._instance.ce = undefined\n        this._app = this._instance = null\n      }\n    })\n  }\n\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  private _resolveDef() {\n    if (this._pendingResolve) {\n      return\n    }\n\n    // set initial attrs\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name)\n    }\n\n    // watch future attr changes\n    this._ob = new MutationObserver(mutations => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName!)\n      }\n    })\n\n    this._ob.observe(this, { attributes: true })\n\n    const resolve = (def: InnerComponentDef, isAsync = false) => {\n      this._resolved = true\n      this._pendingResolve = undefined\n\n      const { props, styles } = def\n\n      // cast Number-type props set before resolve\n      let numberProps\n      if (props && !isArray(props)) {\n        for (const key in props) {\n          const opt = props[key]\n          if (opt === Number || (opt && opt.type === Number)) {\n            if (key in this._props) {\n              this._props[key] = toNumber(this._props[key])\n            }\n            ;(numberProps || (numberProps = Object.create(null)))[\n              camelize(key)\n            ] = true\n          }\n        }\n      }\n      this._numberProps = numberProps\n\n      if (isAsync) {\n        // defining getter/setters on prototype\n        // for sync defs, this already happened in the constructor\n        this._resolveProps(def)\n      }\n\n      // apply CSS\n      if (this.shadowRoot) {\n        this._applyStyles(styles)\n      } else if (__DEV__ && styles) {\n        warn(\n          'Custom element style injection is not supported when using ' +\n            'shadowRoot: false',\n        )\n      }\n\n      // initial mount\n      this._mount(def)\n    }\n\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\n    if (asyncDef) {\n      this._pendingResolve = asyncDef().then(def =>\n        resolve((this._def = def), true),\n      )\n    } else {\n      resolve(this._def)\n    }\n  }\n\n  private _mount(def: InnerComponentDef) {\n    if ((__DEV__ || __FEATURE_PROD_DEVTOOLS__) && !def.name) {\n      // @ts-expect-error\n      def.name = 'VueElement'\n    }\n    this._app = this._createApp(def)\n    if (def.configureApp) {\n      def.configureApp(this._app)\n    }\n    this._app._ceVNode = this._createVNode()\n    this._app.mount(this._root)\n\n    // apply expose after mount\n    const exposed = this._instance && this._instance.exposed\n    if (!exposed) return\n    for (const key in exposed) {\n      if (!hasOwn(this, key)) {\n        // exposed properties are readonly\n        Object.defineProperty(this, key, {\n          // unwrap ref to be consistent with public instance behavior\n          get: () => unref(exposed[key]),\n        })\n      } else if (__DEV__) {\n        warn(`Exposed property \"${key}\" already exists on custom element.`)\n      }\n    }\n  }\n\n  private _resolveProps(def: InnerComponentDef) {\n    const { props } = def\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {})\n\n    // check if there are props set pre-upgrade or connect\n    for (const key of Object.keys(this)) {\n      if (key[0] !== '_' && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key as keyof this])\n      }\n    }\n\n    // defining getter/setters on prototype\n    for (const key of declaredPropKeys.map(camelize)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key)\n        },\n        set(val) {\n          this._setProp(key, val, true, true)\n        },\n      })\n    }\n  }\n\n  protected _setAttr(key: string): void {\n    if (key.startsWith('data-v-')) return\n    const has = this.hasAttribute(key)\n    let value = has ? this.getAttribute(key) : REMOVAL\n    const camelKey = camelize(key)\n    if (has && this._numberProps && this._numberProps[camelKey]) {\n      value = toNumber(value)\n    }\n    this._setProp(camelKey, value, false, true)\n  }\n\n  /**\n   * @internal\n   */\n  protected _getProp(key: string): any {\n    return this._props[key]\n  }\n\n  /**\n   * @internal\n   */\n  _setProp(\n    key: string,\n    val: any,\n    shouldReflect = true,\n    shouldUpdate = false,\n  ): void {\n    if (val !== this._props[key]) {\n      if (val === REMOVAL) {\n        delete this._props[key]\n      } else {\n        this._props[key] = val\n        // support set key on ceVNode\n        if (key === 'key' && this._app) {\n          this._app._ceVNode!.key = val\n        }\n      }\n      if (shouldUpdate && this._instance) {\n        this._update()\n      }\n      // reflect\n      if (shouldReflect) {\n        const ob = this._ob\n        ob && ob.disconnect()\n        if (val === true) {\n          this.setAttribute(hyphenate(key), '')\n        } else if (typeof val === 'string' || typeof val === 'number') {\n          this.setAttribute(hyphenate(key), val + '')\n        } else if (!val) {\n          this.removeAttribute(hyphenate(key))\n        }\n        ob && ob.observe(this, { attributes: true })\n      }\n    }\n  }\n\n  private _update() {\n    render(this._createVNode(), this._root)\n  }\n\n  private _createVNode(): VNode<any, any> {\n    const baseProps: VNodeProps = {}\n    if (!this.shadowRoot) {\n      baseProps.onVnodeMounted = baseProps.onVnodeUpdated =\n        this._renderSlots.bind(this)\n    }\n    const vnode = createVNode(this._def, extend(baseProps, this._props))\n    if (!this._instance) {\n      vnode.ce = instance => {\n        this._instance = instance\n        instance.ce = this\n        instance.isCE = true // for vue-i18n backwards compat\n        // HMR\n        if (__DEV__) {\n          instance.ceReload = newStyles => {\n            // always reset styles\n            if (this._styles) {\n              this._styles.forEach(s => this._root.removeChild(s))\n              this._styles.length = 0\n            }\n            this._applyStyles(newStyles)\n            this._instance = null\n            this._update()\n          }\n        }\n\n        const dispatch = (event: string, args: any[]) => {\n          this.dispatchEvent(\n            new CustomEvent(\n              event,\n              isPlainObject(args[0])\n                ? extend({ detail: args }, args[0])\n                : { detail: args },\n            ),\n          )\n        }\n\n        // intercept emit\n        instance.emit = (event: string, ...args: any[]) => {\n          // dispatch both the raw and hyphenated versions of an event\n          // to match Vue behavior\n          dispatch(event, args)\n          if (hyphenate(event) !== event) {\n            dispatch(hyphenate(event), args)\n          }\n        }\n\n        this._setParent()\n      }\n    }\n    return vnode\n  }\n\n  private _applyStyles(\n    styles: string[] | undefined,\n    owner?: ConcreteComponent,\n  ) {\n    if (!styles) return\n    if (owner) {\n      if (owner === this._def || this._styleChildren.has(owner)) {\n        return\n      }\n      this._styleChildren.add(owner)\n    }\n    const nonce = this._nonce\n    for (let i = styles.length - 1; i >= 0; i--) {\n      const s = document.createElement('style')\n      if (nonce) s.setAttribute('nonce', nonce)\n      s.textContent = styles[i]\n      this.shadowRoot!.prepend(s)\n      // record for HMR\n      if (__DEV__) {\n        if (owner) {\n          if (owner.__hmrId) {\n            if (!this._childStyles) this._childStyles = new Map()\n            let entry = this._childStyles.get(owner.__hmrId)\n            if (!entry) {\n              this._childStyles.set(owner.__hmrId, (entry = []))\n            }\n            entry.push(s)\n          }\n        } else {\n          ;(this._styles || (this._styles = [])).push(s)\n        }\n      }\n    }\n  }\n\n  /**\n   * Only called when shadowRoot is false\n   */\n  private _parseSlots() {\n    const slots: VueElement['_slots'] = (this._slots = {})\n    let n\n    while ((n = this.firstChild)) {\n      const slotName =\n        (n.nodeType === 1 && (n as Element).getAttribute('slot')) || 'default'\n      ;(slots[slotName] || (slots[slotName] = [])).push(n)\n      this.removeChild(n)\n    }\n  }\n\n  /**\n   * Only called when shadowRoot is false\n   */\n  private _renderSlots() {\n    const outlets = (this._teleportTarget || this).querySelectorAll('slot')\n    const scopeId = this._instance!.type.__scopeId\n    for (let i = 0; i < outlets.length; i++) {\n      const o = outlets[i] as HTMLSlotElement\n      const slotName = o.getAttribute('name') || 'default'\n      const content = this._slots![slotName]\n      const parent = o.parentNode!\n      if (content) {\n        for (const n of content) {\n          // for :slotted css\n          if (scopeId && n.nodeType === 1) {\n            const id = scopeId + '-s'\n            const walker = document.createTreeWalker(n, 1)\n            ;(n as Element).setAttribute(id, '')\n            let child\n            while ((child = walker.nextNode())) {\n              ;(child as Element).setAttribute(id, '')\n            }\n          }\n          parent.insertBefore(n, o)\n        }\n      } else {\n        while (o.firstChild) parent.insertBefore(o.firstChild, o)\n      }\n      parent.removeChild(o)\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _injectChildStyle(comp: ConcreteComponent & CustomElementOptions): void {\n    this._applyStyles(comp.styles, comp)\n  }\n\n  /**\n   * @internal\n   */\n  _removeChildStyle(comp: ConcreteComponent): void {\n    if (__DEV__) {\n      this._styleChildren.delete(comp)\n      if (this._childStyles && comp.__hmrId) {\n        // clear old styles\n        const oldStyles = this._childStyles.get(comp.__hmrId)\n        if (oldStyles) {\n          oldStyles.forEach(s => this._root.removeChild(s))\n          oldStyles.length = 0\n        }\n      }\n    }\n  }\n}\n\nexport function useHost(caller?: string): VueElement | null {\n  const instance = getCurrentInstance()\n  const el = instance && (instance.ce as VueElement)\n  if (el) {\n    return el\n  } else if (__DEV__) {\n    if (!instance) {\n      warn(\n        `${caller || 'useHost'} called without an active component instance.`,\n      )\n    } else {\n      warn(\n        `${caller || 'useHost'} can only be used in components defined via ` +\n          `defineCustomElement.`,\n      )\n    }\n  }\n  return null\n}\n\n/**\n * Retrieve the shadowRoot of the current custom element. Only usable in setup()\n * of a `defineCustomElement` component.\n */\nexport function useShadowRoot(): ShadowRoot | null {\n  const el = __DEV__ ? useHost('useShadowRoot') : useHost()\n  return el && el.shadowRoot\n}\n", "import { getCurrentInstance, warn } from '@vue/runtime-core'\nimport { EMPTY_OBJ } from '@vue/shared'\n\nexport function useCssModule(name = '$style'): Record<string, string> {\n  if (!__GLOBAL__) {\n    const instance = getCurrentInstance()!\n    if (!instance) {\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\n      return EMPTY_OBJ\n    }\n    const modules = instance.type.__cssModules\n    if (!modules) {\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\n      return EMPTY_OBJ\n    }\n    const mod = modules[name]\n    if (!mod) {\n      __DEV__ &&\n        warn(`Current instance does not have CSS module named \"${name}\".`)\n      return EMPTY_OBJ\n    }\n    return mod as Record<string, string>\n  } else {\n    /* v8 ignore start */\n    if (__DEV__) {\n      warn(`useCssModule() is not supported in the global build.`)\n    }\n    return EMPTY_OBJ\n    /* v8 ignore stop */\n  }\n}\n", "import {\n  type ElementWithTransition,\n  type TransitionProps,\n  TransitionPropsValidators,\n  addTransitionClass,\n  forceReflow,\n  getTransitionInfo,\n  removeTransitionClass,\n  resolveTransitionProps,\n  vtcKey,\n} from './Transition'\nimport {\n  type ComponentOptions,\n  DeprecationTypes,\n  Fragment,\n  type SetupContext,\n  Text,\n  type VNode,\n  compatUtils,\n  createVNode,\n  getCurrentInstance,\n  getTransitionRawChildren,\n  onUpdated,\n  resolveTransitionHooks,\n  setTransitionHooks,\n  toRaw,\n  useTransitionState,\n  warn,\n} from '@vue/runtime-core'\nimport { extend } from '@vue/shared'\n\nconst positionMap = new WeakMap<VNode, DOMRect>()\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\nconst moveCbKey = Symbol('_moveCb')\nconst enterCbKey = Symbol('_enterCb')\n\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\n  tag?: string\n  moveClass?: string\n}\n\n/**\n * Wrap logic that modifies TransitionGroup properties in a function\n * so that it can be annotated as pure\n */\nconst decorate = (t: typeof TransitionGroupImpl) => {\n  // TransitionGroup does not support \"mode\" so we need to remove it from the\n  // props declarations, but direct delete operation is considered a side effect\n  delete t.props.mode\n  if (__COMPAT__) {\n    t.__isBuiltIn = true\n  }\n  return t\n}\n\nconst TransitionGroupImpl: ComponentOptions = /*@__PURE__*/ decorate({\n  name: 'TransitionGroup',\n\n  props: /*@__PURE__*/ extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String,\n  }),\n\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const state = useTransitionState()\n    let prevChildren: VNode[]\n    let children: VNode[]\n\n    onUpdated(() => {\n      // children is guaranteed to exist after initial render\n      if (!prevChildren.length) {\n        return\n      }\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\n\n      if (\n        !hasCSSTransform(\n          prevChildren[0].el as ElementWithTransition,\n          instance.vnode.el as Node,\n          moveClass,\n        )\n      ) {\n        return\n      }\n\n      // we divide the work into three loops to avoid mixing DOM reads and writes\n      // in each iteration - which helps prevent layout thrashing.\n      prevChildren.forEach(callPendingCbs)\n      prevChildren.forEach(recordPosition)\n      const movedChildren = prevChildren.filter(applyTranslation)\n\n      // force reflow to put everything in position\n      forceReflow()\n\n      movedChildren.forEach(c => {\n        const el = c.el as ElementWithTransition\n        const style = el.style\n        addTransitionClass(el, moveClass)\n        style.transform = style.webkitTransform = style.transitionDuration = ''\n        const cb = ((el as any)[moveCbKey] = (e: TransitionEvent) => {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener('transitionend', cb)\n            ;(el as any)[moveCbKey] = null\n            removeTransitionClass(el, moveClass)\n          }\n        })\n        el.addEventListener('transitionend', cb)\n      })\n    })\n\n    return () => {\n      const rawProps = toRaw(props)\n      const cssTransitionProps = resolveTransitionProps(rawProps)\n      let tag = rawProps.tag || Fragment\n\n      if (\n        __COMPAT__ &&\n        !rawProps.tag &&\n        compatUtils.checkCompatEnabled(\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\n          instance.parent,\n        )\n      ) {\n        tag = 'span'\n      }\n\n      prevChildren = []\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i]\n          if (child.el && child.el instanceof Element) {\n            prevChildren.push(child)\n            setTransitionHooks(\n              child,\n              resolveTransitionHooks(\n                child,\n                cssTransitionProps,\n                state,\n                instance,\n              ),\n            )\n            positionMap.set(\n              child,\n              (child.el as Element).getBoundingClientRect(),\n            )\n          }\n        }\n      }\n\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (child.key != null) {\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance),\n          )\n        } else if (__DEV__ && child.type !== Text) {\n          warn(`<TransitionGroup> children must be keyed.`)\n        }\n      }\n\n      return createVNode(tag, null, children)\n    }\n  },\n})\n\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\n  new (): {\n    $props: TransitionGroupProps\n  }\n}\n\nfunction callPendingCbs(c: VNode) {\n  const el = c.el as any\n  if (el[moveCbKey]) {\n    el[moveCbKey]()\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]()\n  }\n}\n\nfunction recordPosition(c: VNode) {\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\n}\n\nfunction applyTranslation(c: VNode): VNode | undefined {\n  const oldPos = positionMap.get(c)!\n  const newPos = newPositionMap.get(c)!\n  const dx = oldPos.left - newPos.left\n  const dy = oldPos.top - newPos.top\n  if (dx || dy) {\n    const s = (c.el as HTMLElement).style\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\n    s.transitionDuration = '0s'\n    return c\n  }\n}\n\nfunction hasCSSTransform(\n  el: ElementWithTransition,\n  root: Node,\n  moveClass: string,\n): boolean {\n  // Detect whether an element with the move class applied has\n  // CSS transitions. Since the element may be inside an entering\n  // transition at this very moment, we make a clone of it and remove\n  // all other transition classes applied to ensure only the move class\n  // is applied.\n  const clone = el.cloneNode() as HTMLElement\n  const _vtc = el[vtcKey]\n  if (_vtc) {\n    _vtc.forEach(cls => {\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\n    })\n  }\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\n  clone.style.display = 'none'\n  const container = (\n    root.nodeType === 1 ? root : root.parentNode\n  ) as HTMLElement\n  container.appendChild(clone)\n  const { hasTransform } = getTransitionInfo(clone)\n  container.removeChild(clone)\n  return hasTransform\n}\n", "import {\n  type DirectiveBinding,\n  type DirectiveHook,\n  type ObjectDirective,\n  type VNode,\n  nextTick,\n  warn,\n} from '@vue/runtime-core'\nimport { addEventListener } from '../modules/events'\nimport {\n  invokeArrayFns,\n  isArray,\n  isSet,\n  looseEqual,\n  looseIndexOf,\n  looseToNumber,\n} from '@vue/shared'\n\ntype AssignerFn = (value: any) => void\n\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\n  const fn =\n    vnode.props!['onUpdate:modelValue'] ||\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\n}\n\nfunction onCompositionStart(e: Event) {\n  ;(e.target as any).composing = true\n}\n\nfunction onCompositionEnd(e: Event) {\n  const target = e.target as any\n  if (target.composing) {\n    target.composing = false\n    target.dispatchEvent(new Event('input'))\n  }\n}\n\nconst assignKey: unique symbol = Symbol('_assign')\n\ntype ModelDirective<T, Modifiers extends string = string> = ObjectDirective<\n  T & { [assignKey]: AssignerFn; _assigning?: boolean },\n  any,\n  Modifiers\n>\n\n// We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\nexport const vModelText: ModelDirective<\n  HTMLInputElement | HTMLTextAreaElement,\n  'trim' | 'number' | 'lazy'\n> = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    const castToNumber =\n      number || (vnode.props && vnode.props.type === 'number')\n    addEventListener(el, lazy ? 'change' : 'input', e => {\n      if ((e.target as any).composing) return\n      let domValue: string | number = el.value\n      if (trim) {\n        domValue = domValue.trim()\n      }\n      if (castToNumber) {\n        domValue = looseToNumber(domValue)\n      }\n      el[assignKey](domValue)\n    })\n    if (trim) {\n      addEventListener(el, 'change', () => {\n        el.value = el.value.trim()\n      })\n    }\n    if (!lazy) {\n      addEventListener(el, 'compositionstart', onCompositionStart)\n      addEventListener(el, 'compositionend', onCompositionEnd)\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\n      // switching focus before confirming composition choice\n      // this also fixes the issue where some browsers e.g. iOS Chrome\n      // fires \"change\" instead of \"input\" on autocomplete.\n      addEventListener(el, 'change', onCompositionEnd)\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? '' : value\n  },\n  beforeUpdate(\n    el,\n    { value, oldValue, modifiers: { lazy, trim, number } },\n    vnode,\n  ) {\n    el[assignKey] = getModelAssigner(vnode)\n    // avoid clearing unresolved text. #2302\n    if ((el as any).composing) return\n    const elValue =\n      (number || el.type === 'number') && !/^0\\d/.test(el.value)\n        ? looseToNumber(el.value)\n        : el.value\n    const newValue = value == null ? '' : value\n\n    if (elValue === newValue) {\n      return\n    }\n\n    if (document.activeElement === el && el.type !== 'range') {\n      // #8546\n      if (lazy && value === oldValue) {\n        return\n      }\n      if (trim && el.value.trim() === newValue) {\n        return\n      }\n    }\n\n    el.value = newValue\n  },\n}\n\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      const modelValue = (el as any)._modelValue\n      const elementValue = getValue(el)\n      const checked = el.checked\n      const assign = el[assignKey]\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue)\n        const found = index !== -1\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue))\n        } else if (!checked && found) {\n          const filtered = [...modelValue]\n          filtered.splice(index, 1)\n          assign(filtered)\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue)\n        if (checked) {\n          cloned.add(elementValue)\n        } else {\n          cloned.delete(elementValue)\n        }\n        assign(cloned)\n      } else {\n        assign(getCheckboxValue(el, checked))\n      }\n    })\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    setChecked(el, binding, vnode)\n  },\n}\n\nfunction setChecked(\n  el: HTMLInputElement,\n  { value, oldValue }: DirectiveBinding,\n  vnode: VNode,\n) {\n  // store the v-model value on the element so it can be accessed by the\n  // change listener.\n  ;(el as any)._modelValue = value\n  let checked: boolean\n\n  if (isArray(value)) {\n    checked = looseIndexOf(value, vnode.props!.value) > -1\n  } else if (isSet(value)) {\n    checked = value.has(vnode.props!.value)\n  } else {\n    if (value === oldValue) return\n    checked = looseEqual(value, getCheckboxValue(el, true))\n  }\n\n  // Only update if the checked state has changed\n  if (el.checked !== checked) {\n    el.checked = checked\n  }\n}\n\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\n  created(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props!.value)\n    el[assignKey] = getModelAssigner(vnode)\n    addEventListener(el, 'change', () => {\n      el[assignKey](getValue(el))\n    })\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props!.value)\n    }\n  },\n}\n\nexport const vModelSelect: ModelDirective<HTMLSelectElement, 'number'> = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = isSet(value)\n    addEventListener(el, 'change', () => {\n      const selectedVal = Array.prototype.filter\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\n        .map((o: HTMLOptionElement) =>\n          number ? looseToNumber(getValue(o)) : getValue(o),\n        )\n      el[assignKey](\n        el.multiple\n          ? isSetModel\n            ? new Set(selectedVal)\n            : selectedVal\n          : selectedVal[0],\n      )\n      el._assigning = true\n      nextTick(() => {\n        el._assigning = false\n      })\n    })\n    el[assignKey] = getModelAssigner(vnode)\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value }) {\n    setSelected(el, value)\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode)\n  },\n  updated(el, { value }) {\n    if (!el._assigning) {\n      setSelected(el, value)\n    }\n  },\n}\n\nfunction setSelected(el: HTMLSelectElement, value: any) {\n  const isMultiple = el.multiple\n  const isArrayValue = isArray(value)\n  if (isMultiple && !isArrayValue && !isSet(value)) {\n    __DEV__ &&\n      warn(\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`,\n      )\n    return\n  }\n\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i]\n    const optionValue = getValue(option)\n    if (isMultiple) {\n      if (isArrayValue) {\n        const optionType = typeof optionValue\n        // fast path for string / number values\n        if (optionType === 'string' || optionType === 'number') {\n          option.selected = value.some(v => String(v) === String(optionValue))\n        } else {\n          option.selected = looseIndexOf(value, optionValue) > -1\n        }\n      } else {\n        option.selected = value.has(optionValue)\n      }\n    } else if (looseEqual(getValue(option), value)) {\n      if (el.selectedIndex !== i) el.selectedIndex = i\n      return\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1\n  }\n}\n\n// retrieve raw value set via :value bindings\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\n  return '_value' in el ? (el as any)._value : el.value\n}\n\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\nfunction getCheckboxValue(\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\n  checked: boolean,\n) {\n  const key = checked ? '_trueValue' : '_falseValue'\n  return key in el ? el[key] : checked\n}\n\nexport const vModelDynamic: ObjectDirective<\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n> = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'created')\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'mounted')\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\n  },\n}\n\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\n  switch (tagName) {\n    case 'SELECT':\n      return vModelSelect\n    case 'TEXTAREA':\n      return vModelText\n    default:\n      switch (type) {\n        case 'checkbox':\n          return vModelCheckbox\n        case 'radio':\n          return vModelRadio\n        default:\n          return vModelText\n      }\n  }\n}\n\nfunction callModelHook(\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\n  binding: DirectiveBinding,\n  vnode: VNode,\n  prevVNode: VNode | null,\n  hook: keyof ObjectDirective,\n) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type,\n  )\n  const fn = modelToUse[hook] as DirectiveHook\n  fn && fn(el, binding, vnode, prevVNode)\n}\n\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nexport function initVModelForSSR(): void {\n  vModelText.getSSRProps = ({ value }) => ({ value })\n\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return { checked: true }\n    }\n  }\n\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true }\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true }\n      }\n    } else if (value) {\n      return { checked: true }\n    }\n  }\n\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== 'string') {\n      return\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type,\n    )\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode)\n    }\n  }\n}\n\nexport type VModelDirective =\n  | typeof vModelText\n  | typeof vModelCheckbox\n  | typeof vModelSelect\n  | typeof vModelRadio\n  | typeof vModelDynamic\n", "import {\n  type ComponentInternalInstance,\n  DeprecationTypes,\n  type Directive,\n  type LegacyConfig,\n  compatUtils,\n  getCurrentInstance,\n} from '@vue/runtime-core'\nimport { hyphenate, isArray } from '@vue/shared'\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'] as const\ntype SystemModifiers = (typeof systemModifiers)[number]\ntype CompatModifiers = keyof typeof keyNames\n\nexport type VOnModifiers = SystemModifiers | ModifierGuards | CompatModifiers\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\n\ntype ModifierGuards =\n  | 'shift'\n  | 'ctrl'\n  | 'alt'\n  | 'meta'\n  | 'left'\n  | 'right'\n  | 'stop'\n  | 'prevent'\n  | 'self'\n  | 'middle'\n  | 'exact'\nconst modifierGuards: Record<\n  ModifierGuards,\n  | ((e: Event) => void | boolean)\n  | ((e: Event, modifiers: string[]) => void | boolean)\n> = {\n  stop: (e: Event) => e.stopPropagation(),\n  prevent: (e: Event) => e.preventDefault(),\n  self: (e: Event) => e.target !== e.currentTarget,\n  ctrl: (e: Event) => !(e as KeyedEvent).ctrlKey,\n  shift: (e: Event) => !(e as KeyedEvent).shiftKey,\n  alt: (e: Event) => !(e as KeyedEvent).altKey,\n  meta: (e: Event) => !(e as KeyedEvent).metaKey,\n  left: (e: Event) => 'button' in e && (e as MouseEvent).button !== 0,\n  middle: (e: Event) => 'button' in e && (e as MouseEvent).button !== 1,\n  right: (e: Event) => 'button' in e && (e as MouseEvent).button !== 2,\n  exact: (e, modifiers) =>\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m)),\n}\n\n/**\n * @private\n */\nexport const withModifiers = <\n  T extends (event: Event, ...args: unknown[]) => any,\n>(\n  fn: T & { _withMods?: { [key: string]: T } },\n  modifiers: VOnModifiers[],\n): T => {\n  const cache = fn._withMods || (fn._withMods = {})\n  const cacheKey = modifiers.join('.')\n  return (\n    cache[cacheKey] ||\n    (cache[cacheKey] = ((event, ...args) => {\n      for (let i = 0; i < modifiers.length; i++) {\n        const guard = modifierGuards[modifiers[i] as ModifierGuards]\n        if (guard && guard(event, modifiers)) return\n      }\n      return fn(event, ...args)\n    }) as T)\n  )\n}\n\n// Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\nconst keyNames: Record<\n  'esc' | 'space' | 'up' | 'left' | 'right' | 'down' | 'delete',\n  string\n> = {\n  esc: 'escape',\n  space: ' ',\n  up: 'arrow-up',\n  left: 'arrow-left',\n  right: 'arrow-right',\n  down: 'arrow-down',\n  delete: 'backspace',\n}\n\n/**\n * @private\n */\nexport const withKeys = <T extends (event: KeyboardEvent) => any>(\n  fn: T & { _withKeys?: { [k: string]: T } },\n  modifiers: string[],\n): T => {\n  let globalKeyCodes: LegacyConfig['keyCodes']\n  let instance: ComponentInternalInstance | null = null\n  if (__COMPAT__) {\n    instance = getCurrentInstance()\n    if (\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\n    ) {\n      if (instance) {\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\n      }\n    }\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\n      compatUtils.warnDeprecation(\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\n        instance,\n      )\n    }\n  }\n\n  const cache: { [k: string]: T } = fn._withKeys || (fn._withKeys = {})\n  const cacheKey = modifiers.join('.')\n\n  return (\n    cache[cacheKey] ||\n    (cache[cacheKey] = (event => {\n      if (!('key' in event)) {\n        return\n      }\n\n      const eventKey = hyphenate(event.key)\n      if (\n        modifiers.some(\n          k =>\n            k === eventKey ||\n            keyNames[k as unknown as CompatModifiers] === eventKey,\n        )\n      ) {\n        return fn(event)\n      }\n\n      if (__COMPAT__) {\n        const keyCode = String(event.keyCode)\n        if (\n          compatUtils.isCompatEnabled(\n            DeprecationTypes.V_ON_KEYCODE_MODIFIER,\n            instance,\n          ) &&\n          modifiers.some(mod => mod == keyCode)\n        ) {\n          return fn(event)\n        }\n        if (globalKeyCodes) {\n          for (const mod of modifiers) {\n            const codes = globalKeyCodes[mod]\n            if (codes) {\n              const matches = isArray(codes)\n                ? codes.some(code => String(code) === keyCode)\n                : String(codes) === keyCode\n              if (matches) {\n                return fn(event)\n              }\n            }\n          }\n        }\n      }\n    }) as T)\n  )\n}\n\nexport type VOnDirective = Directive<any, any, VOnModifiers>\n", "import { initCustomFormatter } from '@vue/runtime-dom'\n\nexport function initDev(): void {\n  if (__BROWSER__) {\n    if (!__ESM_BUNDLER__) {\n      console.info(\n        `You are running a development build of Vue.\\n` +\n          `Make sure to use the production build (*.prod.js) when deploying for production.`,\n      )\n    }\n\n    initCustomFormatter()\n  }\n}\n", "export const FRAGMENT: unique symbol = Symbol(__DEV__ ? `Fragment` : ``)\nexport const TELEPORT: unique symbol = Symbol(__DEV__ ? `Teleport` : ``)\nexport const SUSPENSE: unique symbol = Symbol(__DEV__ ? `Suspense` : ``)\nexport const KEEP_ALIVE: unique symbol = Symbol(__DEV__ ? `KeepAlive` : ``)\nexport const BASE_TRANSITION: unique symbol = Symbol(\n  __DEV__ ? `BaseTransition` : ``,\n)\nexport const OPEN_BLOCK: unique symbol = Symbol(__DEV__ ? `openBlock` : ``)\nexport const CREATE_BLOCK: unique symbol = Symbol(__DEV__ ? `createBlock` : ``)\nexport const CREATE_ELEMENT_BLOCK: unique symbol = Symbol(\n  __DEV__ ? `createElementBlock` : ``,\n)\nexport const CREATE_VNODE: unique symbol = Symbol(__DEV__ ? `createVNode` : ``)\nexport const CREATE_ELEMENT_VNODE: unique symbol = Symbol(\n  __DEV__ ? `createElementVNode` : ``,\n)\nexport const CREATE_COMMENT: unique symbol = Symbol(\n  __DEV__ ? `createCommentVNode` : ``,\n)\nexport const CREATE_TEXT: unique symbol = Symbol(\n  __DEV__ ? `createTextVNode` : ``,\n)\nexport const CREATE_STATIC: unique symbol = Symbol(\n  __DEV__ ? `createStaticVNode` : ``,\n)\nexport const RESOLVE_COMPONENT: unique symbol = Symbol(\n  __DEV__ ? `resolveComponent` : ``,\n)\nexport const RESOLVE_DYNAMIC_COMPONENT: unique symbol = Symbol(\n  __DEV__ ? `resolveDynamicComponent` : ``,\n)\nexport const RESOLVE_DIRECTIVE: unique symbol = Symbol(\n  __DEV__ ? `resolveDirective` : ``,\n)\nexport const RESOLVE_FILTER: unique symbol = Symbol(\n  __DEV__ ? `resolveFilter` : ``,\n)\nexport const WITH_DIRECTIVES: unique symbol = Symbol(\n  __DEV__ ? `withDirectives` : ``,\n)\nexport const RENDER_LIST: unique symbol = Symbol(__DEV__ ? `renderList` : ``)\nexport const RENDER_SLOT: unique symbol = Symbol(__DEV__ ? `renderSlot` : ``)\nexport const CREATE_SLOTS: unique symbol = Symbol(__DEV__ ? `createSlots` : ``)\nexport const TO_DISPLAY_STRING: unique symbol = Symbol(\n  __DEV__ ? `toDisplayString` : ``,\n)\nexport const MERGE_PROPS: unique symbol = Symbol(__DEV__ ? `mergeProps` : ``)\nexport const NORMALIZE_CLASS: unique symbol = Symbol(\n  __DEV__ ? `normalizeClass` : ``,\n)\nexport const NORMALIZE_STYLE: unique symbol = Symbol(\n  __DEV__ ? `normalizeStyle` : ``,\n)\nexport const NORMALIZE_PROPS: unique symbol = Symbol(\n  __DEV__ ? `normalizeProps` : ``,\n)\nexport const GUARD_REACTIVE_PROPS: unique symbol = Symbol(\n  __DEV__ ? `guardReactiveProps` : ``,\n)\nexport const TO_HANDLERS: unique symbol = Symbol(__DEV__ ? `toHandlers` : ``)\nexport const CAMELIZE: unique symbol = Symbol(__DEV__ ? `camelize` : ``)\nexport const CAPITALIZE: unique symbol = Symbol(__DEV__ ? `capitalize` : ``)\nexport const TO_HANDLER_KEY: unique symbol = Symbol(\n  __DEV__ ? `toHandlerKey` : ``,\n)\nexport const SET_BLOCK_TRACKING: unique symbol = Symbol(\n  __DEV__ ? `setBlockTracking` : ``,\n)\n/**\n * @deprecated no longer needed in 3.5+ because we no longer hoist element nodes\n * but kept for backwards compat\n */\nexport const PUSH_SCOPE_ID: unique symbol = Symbol(__DEV__ ? `pushScopeId` : ``)\n/**\n * @deprecated kept for backwards compat\n */\nexport const POP_SCOPE_ID: unique symbol = Symbol(__DEV__ ? `popScopeId` : ``)\nexport const WITH_CTX: unique symbol = Symbol(__DEV__ ? `withCtx` : ``)\nexport const UNREF: unique symbol = Symbol(__DEV__ ? `unref` : ``)\nexport const IS_REF: unique symbol = Symbol(__DEV__ ? `isRef` : ``)\nexport const WITH_MEMO: unique symbol = Symbol(__DEV__ ? `withMemo` : ``)\nexport const IS_MEMO_SAME: unique symbol = Symbol(__DEV__ ? `isMemoSame` : ``)\n\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\nexport const helperNameMap: Record<symbol, string> = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`,\n}\n\nexport function registerRuntimeHelpers(helpers: Record<symbol, string>): void {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s]\n  })\n}\n", "import { type PatchFlags, isString } from '@vue/shared'\nimport {\n  CREATE_BLOCK,\n  CREATE_ELEMENT_BLOCK,\n  CREATE_ELEMENT_VNODE,\n  type CREATE_SLOTS,\n  CREATE_VNODE,\n  type FRAGMENT,\n  OPEN_BLOCK,\n  type RENDER_LIST,\n  type RENDER_SLOT,\n  WITH_DIRECTIVES,\n  type WITH_MEMO,\n} from './runtimeHelpers'\nimport type { PropsExpression } from './transforms/transformElement'\nimport type { ImportItem, TransformContext } from './transform'\nimport type { Node as BabelNode } from '@babel/types'\n\n// Vue template is a platform-agnostic superset of HTML (syntax only).\n// More namespaces can be declared by platform specific compilers.\nexport type Namespace = number\n\nexport enum Namespaces {\n  HTML,\n  SVG,\n  MATH_ML,\n}\n\nexport enum NodeTypes {\n  ROOT,\n  ELEMENT,\n  TEXT,\n  COMMENT,\n  SIMPLE_EXPRESSION,\n  INTERPOLATION,\n  ATTRIBUTE,\n  DIRECTIVE,\n  // containers\n  COMPOUND_EXPRESSION,\n  IF,\n  IF_BRANCH,\n  FOR,\n  TEXT_CALL,\n  // codegen\n  VNODE_CALL,\n  JS_CALL_EXPRESSION,\n  JS_OBJECT_EXPRESSION,\n  JS_PROPERTY,\n  JS_ARRAY_EXPRESSION,\n  JS_FUNCTION_EXPRESSION,\n  JS_CONDITIONAL_EXPRESSION,\n  JS_CACHE_EXPRESSION,\n\n  // ssr codegen\n  JS_BLOCK_STATEMENT,\n  JS_TEMPLATE_LITERAL,\n  JS_IF_STATEMENT,\n  JS_ASSIGNMENT_EXPRESSION,\n  JS_SEQUENCE_EXPRESSION,\n  JS_RETURN_STATEMENT,\n}\n\nexport enum ElementTypes {\n  ELEMENT,\n  COMPONENT,\n  SLOT,\n  TEMPLATE,\n}\n\nexport interface Node {\n  type: NodeTypes\n  loc: SourceLocation\n}\n\n// The node's range. The `start` is inclusive and `end` is exclusive.\n// [start, end)\nexport interface SourceLocation {\n  start: Position\n  end: Position\n  source: string\n}\n\nexport interface Position {\n  offset: number // from start of file\n  line: number\n  column: number\n}\n\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\n\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\n\nexport type TemplateChildNode =\n  | ElementNode\n  | InterpolationNode\n  | CompoundExpressionNode\n  | TextNode\n  | CommentNode\n  | IfNode\n  | IfBranchNode\n  | ForNode\n  | TextCallNode\n\nexport interface RootNode extends Node {\n  type: NodeTypes.ROOT\n  source: string\n  children: TemplateChildNode[]\n  helpers: Set<symbol>\n  components: string[]\n  directives: string[]\n  hoists: (JSChildNode | null)[]\n  imports: ImportItem[]\n  cached: (CacheExpression | null)[]\n  temps: number\n  ssrHelpers?: symbol[]\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\n  transformed?: boolean\n\n  // v2 compat only\n  filters?: string[]\n}\n\nexport type ElementNode =\n  | PlainElementNode\n  | ComponentNode\n  | SlotOutletNode\n  | TemplateNode\n\nexport interface BaseElementNode extends Node {\n  type: NodeTypes.ELEMENT\n  ns: Namespace\n  tag: string\n  tagType: ElementTypes\n  props: Array<AttributeNode | DirectiveNode>\n  children: TemplateChildNode[]\n  isSelfClosing?: boolean\n  innerLoc?: SourceLocation // only for SFC root level elements\n}\n\nexport interface PlainElementNode extends BaseElementNode {\n  tagType: ElementTypes.ELEMENT\n  codegenNode:\n    | VNodeCall\n    | SimpleExpressionNode // when hoisted\n    | CacheExpression // when cached by v-once\n    | MemoExpression // when cached by v-memo\n    | undefined\n  ssrCodegenNode?: TemplateLiteral\n}\n\nexport interface ComponentNode extends BaseElementNode {\n  tagType: ElementTypes.COMPONENT\n  codegenNode:\n    | VNodeCall\n    | CacheExpression // when cached by v-once\n    | MemoExpression // when cached by v-memo\n    | undefined\n  ssrCodegenNode?: CallExpression\n}\n\nexport interface SlotOutletNode extends BaseElementNode {\n  tagType: ElementTypes.SLOT\n  codegenNode:\n    | RenderSlotCall\n    | CacheExpression // when cached by v-once\n    | undefined\n  ssrCodegenNode?: CallExpression\n}\n\nexport interface TemplateNode extends BaseElementNode {\n  tagType: ElementTypes.TEMPLATE\n  // TemplateNode is a container type that always gets compiled away\n  codegenNode: undefined\n}\n\nexport interface TextNode extends Node {\n  type: NodeTypes.TEXT\n  content: string\n}\n\nexport interface CommentNode extends Node {\n  type: NodeTypes.COMMENT\n  content: string\n}\n\nexport interface AttributeNode extends Node {\n  type: NodeTypes.ATTRIBUTE\n  name: string\n  nameLoc: SourceLocation\n  value: TextNode | undefined\n}\n\nexport interface DirectiveNode extends Node {\n  type: NodeTypes.DIRECTIVE\n  /**\n   * the normalized name without prefix or shorthands, e.g. \"bind\", \"on\"\n   */\n  name: string\n  /**\n   * the raw attribute name, preserving shorthand, and including arg & modifiers\n   * this is only used during parse.\n   */\n  rawName?: string\n  exp: ExpressionNode | undefined\n  arg: ExpressionNode | undefined\n  modifiers: SimpleExpressionNode[]\n  /**\n   * optional property to cache the expression parse result for v-for\n   */\n  forParseResult?: ForParseResult\n}\n\n/**\n * Static types have several levels.\n * Higher levels implies lower levels. e.g. a node that can be stringified\n * can always be hoisted and skipped for patch.\n */\nexport enum ConstantTypes {\n  NOT_CONSTANT = 0,\n  CAN_SKIP_PATCH,\n  CAN_CACHE,\n  CAN_STRINGIFY,\n}\n\nexport interface SimpleExpressionNode extends Node {\n  type: NodeTypes.SIMPLE_EXPRESSION\n  content: string\n  isStatic: boolean\n  constType: ConstantTypes\n  /**\n   * - `null` means the expression is a simple identifier that doesn't need\n   *    parsing\n   * - `false` means there was a parsing error\n   */\n  ast?: BabelNode | null | false\n  /**\n   * Indicates this is an identifier for a hoist vnode call and points to the\n   * hoisted node.\n   */\n  hoisted?: JSChildNode\n  /**\n   * an expression parsed as the params of a function will track\n   * the identifiers declared inside the function body.\n   */\n  identifiers?: string[]\n  isHandlerKey?: boolean\n}\n\nexport interface InterpolationNode extends Node {\n  type: NodeTypes.INTERPOLATION\n  content: ExpressionNode\n}\n\nexport interface CompoundExpressionNode extends Node {\n  type: NodeTypes.COMPOUND_EXPRESSION\n  /**\n   * - `null` means the expression is a simple identifier that doesn't need\n   *    parsing\n   * - `false` means there was a parsing error\n   */\n  ast?: BabelNode | null | false\n  children: (\n    | SimpleExpressionNode\n    | CompoundExpressionNode\n    | InterpolationNode\n    | TextNode\n    | string\n    | symbol\n  )[]\n\n  /**\n   * an expression parsed as the params of a function will track\n   * the identifiers declared inside the function body.\n   */\n  identifiers?: string[]\n  isHandlerKey?: boolean\n}\n\nexport interface IfNode extends Node {\n  type: NodeTypes.IF\n  branches: IfBranchNode[]\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\n}\n\nexport interface IfBranchNode extends Node {\n  type: NodeTypes.IF_BRANCH\n  condition: ExpressionNode | undefined // else\n  children: TemplateChildNode[]\n  userKey?: AttributeNode | DirectiveNode\n  isTemplateIf?: boolean\n}\n\nexport interface ForNode extends Node {\n  type: NodeTypes.FOR\n  source: ExpressionNode\n  valueAlias: ExpressionNode | undefined\n  keyAlias: ExpressionNode | undefined\n  objectIndexAlias: ExpressionNode | undefined\n  parseResult: ForParseResult\n  children: TemplateChildNode[]\n  codegenNode?: ForCodegenNode\n}\n\nexport interface ForParseResult {\n  source: ExpressionNode\n  value: ExpressionNode | undefined\n  key: ExpressionNode | undefined\n  index: ExpressionNode | undefined\n  finalized: boolean\n}\n\nexport interface TextCallNode extends Node {\n  type: NodeTypes.TEXT_CALL\n  content: TextNode | InterpolationNode | CompoundExpressionNode\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\n}\n\nexport type TemplateTextChildNode =\n  | TextNode\n  | InterpolationNode\n  | CompoundExpressionNode\n\nexport interface VNodeCall extends Node {\n  type: NodeTypes.VNODE_CALL\n  tag: string | symbol | CallExpression\n  props: PropsExpression | undefined\n  children:\n    | TemplateChildNode[] // multiple children\n    | TemplateTextChildNode // single text child\n    | SlotsExpression // component slots\n    | ForRenderListExpression // v-for fragment call\n    | SimpleExpressionNode // hoisted\n    | CacheExpression // cached\n    | undefined\n  patchFlag: PatchFlags | undefined\n  dynamicProps: string | SimpleExpressionNode | undefined\n  directives: DirectiveArguments | undefined\n  isBlock: boolean\n  disableTracking: boolean\n  isComponent: boolean\n}\n\n// JS Node Types ---------------------------------------------------------------\n\n// We also include a number of JavaScript AST nodes for code generation.\n// The AST is an intentionally minimal subset just to meet the exact needs of\n// Vue render function generation.\n\nexport type JSChildNode =\n  | VNodeCall\n  | CallExpression\n  | ObjectExpression\n  | ArrayExpression\n  | ExpressionNode\n  | FunctionExpression\n  | ConditionalExpression\n  | CacheExpression\n  | AssignmentExpression\n  | SequenceExpression\n\nexport interface CallExpression extends Node {\n  type: NodeTypes.JS_CALL_EXPRESSION\n  callee: string | symbol\n  arguments: (\n    | string\n    | symbol\n    | JSChildNode\n    | SSRCodegenNode\n    | TemplateChildNode\n    | TemplateChildNode[]\n  )[]\n}\n\nexport interface ObjectExpression extends Node {\n  type: NodeTypes.JS_OBJECT_EXPRESSION\n  properties: Array<Property>\n}\n\nexport interface Property extends Node {\n  type: NodeTypes.JS_PROPERTY\n  key: ExpressionNode\n  value: JSChildNode\n}\n\nexport interface ArrayExpression extends Node {\n  type: NodeTypes.JS_ARRAY_EXPRESSION\n  elements: Array<string | Node>\n}\n\nexport interface FunctionExpression extends Node {\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\n  body?: BlockStatement | IfStatement\n  newline: boolean\n  /**\n   * This flag is for codegen to determine whether it needs to generate the\n   * withScopeId() wrapper\n   */\n  isSlot: boolean\n  /**\n   * __COMPAT__ only, indicates a slot function that should be excluded from\n   * the legacy $scopedSlots instance property.\n   */\n  isNonScopedSlot?: boolean\n}\n\nexport interface ConditionalExpression extends Node {\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\n  test: JSChildNode\n  consequent: JSChildNode\n  alternate: JSChildNode\n  newline: boolean\n}\n\nexport interface CacheExpression extends Node {\n  type: NodeTypes.JS_CACHE_EXPRESSION\n  index: number\n  value: JSChildNode\n  needPauseTracking: boolean\n  inVOnce: boolean\n  needArraySpread: boolean\n}\n\nexport interface MemoExpression extends CallExpression {\n  callee: typeof WITH_MEMO\n  arguments: [ExpressionNode, MemoFactory, string, string]\n}\n\ninterface MemoFactory extends FunctionExpression {\n  returns: BlockCodegenNode\n}\n\n// SSR-specific Node Types -----------------------------------------------------\n\nexport type SSRCodegenNode =\n  | BlockStatement\n  | TemplateLiteral\n  | IfStatement\n  | AssignmentExpression\n  | ReturnStatement\n  | SequenceExpression\n\nexport interface BlockStatement extends Node {\n  type: NodeTypes.JS_BLOCK_STATEMENT\n  body: (JSChildNode | IfStatement)[]\n}\n\nexport interface TemplateLiteral extends Node {\n  type: NodeTypes.JS_TEMPLATE_LITERAL\n  elements: (string | JSChildNode)[]\n}\n\nexport interface IfStatement extends Node {\n  type: NodeTypes.JS_IF_STATEMENT\n  test: ExpressionNode\n  consequent: BlockStatement\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\n}\n\nexport interface AssignmentExpression extends Node {\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\n  left: SimpleExpressionNode\n  right: JSChildNode\n}\n\nexport interface SequenceExpression extends Node {\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\n  expressions: JSChildNode[]\n}\n\nexport interface ReturnStatement extends Node {\n  type: NodeTypes.JS_RETURN_STATEMENT\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\n}\n\n// Codegen Node Types ----------------------------------------------------------\n\nexport interface DirectiveArguments extends ArrayExpression {\n  elements: DirectiveArgumentNode[]\n}\n\nexport interface DirectiveArgumentNode extends ArrayExpression {\n  elements: // dir, exp, arg, modifiers\n  | [string]\n    | [string, ExpressionNode]\n    | [string, ExpressionNode, ExpressionNode]\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\n}\n\n// renderSlot(...)\nexport interface RenderSlotCall extends CallExpression {\n  callee: typeof RENDER_SLOT\n  arguments: // $slots, name, props, fallback\n  | [string, string | ExpressionNode]\n    | [string, string | ExpressionNode, PropsExpression]\n    | [\n        string,\n        string | ExpressionNode,\n        PropsExpression | '{}',\n        TemplateChildNode[],\n      ]\n}\n\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\n\n// { foo: () => [...] }\nexport interface SlotsObjectExpression extends ObjectExpression {\n  properties: SlotsObjectProperty[]\n}\n\nexport interface SlotsObjectProperty extends Property {\n  value: SlotFunctionExpression\n}\n\nexport interface SlotFunctionExpression extends FunctionExpression {\n  returns: TemplateChildNode[] | CacheExpression\n}\n\n// createSlots({ ... }, [\n//    foo ? () => [] : undefined,\n//    renderList(list, i => () => [i])\n// ])\nexport interface DynamicSlotsExpression extends CallExpression {\n  callee: typeof CREATE_SLOTS\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\n}\n\nexport interface DynamicSlotEntries extends ArrayExpression {\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\n}\n\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\n  consequent: DynamicSlotNode\n  alternate: DynamicSlotNode | SimpleExpressionNode\n}\n\nexport interface ListDynamicSlotNode extends CallExpression {\n  callee: typeof RENDER_LIST\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\n}\n\nexport interface ListDynamicSlotIterator extends FunctionExpression {\n  returns: DynamicSlotNode\n}\n\nexport interface DynamicSlotNode extends ObjectExpression {\n  properties: [Property, DynamicSlotFnProperty]\n}\n\nexport interface DynamicSlotFnProperty extends Property {\n  value: SlotFunctionExpression\n}\n\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\n\nexport interface IfConditionalExpression extends ConditionalExpression {\n  consequent: BlockCodegenNode | MemoExpression\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\n}\n\nexport interface ForCodegenNode extends VNodeCall {\n  isBlock: true\n  tag: typeof FRAGMENT\n  props: undefined\n  children: ForRenderListExpression\n  patchFlag: PatchFlags\n  disableTracking: boolean\n}\n\nexport interface ForRenderListExpression extends CallExpression {\n  callee: typeof RENDER_LIST\n  arguments: [ExpressionNode, ForIteratorExpression]\n}\n\nexport interface ForIteratorExpression extends FunctionExpression {\n  returns?: BlockCodegenNode\n}\n\n// AST Utilities ---------------------------------------------------------------\n\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nexport const locStub: SourceLocation = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: '',\n}\n\nexport function createRoot(\n  children: TemplateChildNode[],\n  source = '',\n): RootNode {\n  return {\n    type: NodeTypes.ROOT,\n    source,\n    children,\n    helpers: new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: [],\n    temps: 0,\n    codegenNode: undefined,\n    loc: locStub,\n  }\n}\n\nexport function createVNodeCall(\n  context: TransformContext | null,\n  tag: VNodeCall['tag'],\n  props?: VNodeCall['props'],\n  children?: VNodeCall['children'],\n  patchFlag?: VNodeCall['patchFlag'],\n  dynamicProps?: VNodeCall['dynamicProps'],\n  directives?: VNodeCall['directives'],\n  isBlock: VNodeCall['isBlock'] = false,\n  disableTracking: VNodeCall['disableTracking'] = false,\n  isComponent: VNodeCall['isComponent'] = false,\n  loc: SourceLocation = locStub,\n): VNodeCall {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK)\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES)\n    }\n  }\n\n  return {\n    type: NodeTypes.VNODE_CALL,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc,\n  }\n}\n\nexport function createArrayExpression(\n  elements: ArrayExpression['elements'],\n  loc: SourceLocation = locStub,\n): ArrayExpression {\n  return {\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\n    loc,\n    elements,\n  }\n}\n\nexport function createObjectExpression(\n  properties: ObjectExpression['properties'],\n  loc: SourceLocation = locStub,\n): ObjectExpression {\n  return {\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\n    loc,\n    properties,\n  }\n}\n\nexport function createObjectProperty(\n  key: Property['key'] | string,\n  value: Property['value'],\n): Property {\n  return {\n    type: NodeTypes.JS_PROPERTY,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value,\n  }\n}\n\nexport function createSimpleExpression(\n  content: SimpleExpressionNode['content'],\n  isStatic: SimpleExpressionNode['isStatic'] = false,\n  loc: SourceLocation = locStub,\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT,\n): SimpleExpressionNode {\n  return {\n    type: NodeTypes.SIMPLE_EXPRESSION,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType,\n  }\n}\n\nexport function createInterpolation(\n  content: InterpolationNode['content'] | string,\n  loc: SourceLocation,\n): InterpolationNode {\n  return {\n    type: NodeTypes.INTERPOLATION,\n    loc,\n    content: isString(content)\n      ? createSimpleExpression(content, false, loc)\n      : content,\n  }\n}\n\nexport function createCompoundExpression(\n  children: CompoundExpressionNode['children'],\n  loc: SourceLocation = locStub,\n): CompoundExpressionNode {\n  return {\n    type: NodeTypes.COMPOUND_EXPRESSION,\n    loc,\n    children,\n  }\n}\n\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\n  ? RenderSlotCall\n  : CallExpression\n\nexport function createCallExpression<T extends CallExpression['callee']>(\n  callee: T,\n  args: CallExpression['arguments'] = [],\n  loc: SourceLocation = locStub,\n): InferCodegenNodeType<T> {\n  return {\n    type: NodeTypes.JS_CALL_EXPRESSION,\n    loc,\n    callee,\n    arguments: args,\n  } as InferCodegenNodeType<T>\n}\n\nexport function createFunctionExpression(\n  params: FunctionExpression['params'],\n  returns: FunctionExpression['returns'] = undefined,\n  newline: boolean = false,\n  isSlot: boolean = false,\n  loc: SourceLocation = locStub,\n): FunctionExpression {\n  return {\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc,\n  }\n}\n\nexport function createConditionalExpression(\n  test: ConditionalExpression['test'],\n  consequent: ConditionalExpression['consequent'],\n  alternate: ConditionalExpression['alternate'],\n  newline = true,\n): ConditionalExpression {\n  return {\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub,\n  }\n}\n\nexport function createCacheExpression(\n  index: number,\n  value: JSChildNode,\n  needPauseTracking: boolean = false,\n  inVOnce: boolean = false,\n): CacheExpression {\n  return {\n    type: NodeTypes.JS_CACHE_EXPRESSION,\n    index,\n    value,\n    needPauseTracking: needPauseTracking,\n    inVOnce,\n    needArraySpread: false,\n    loc: locStub,\n  }\n}\n\nexport function createBlockStatement(\n  body: BlockStatement['body'],\n): BlockStatement {\n  return {\n    type: NodeTypes.JS_BLOCK_STATEMENT,\n    body,\n    loc: locStub,\n  }\n}\n\nexport function createTemplateLiteral(\n  elements: TemplateLiteral['elements'],\n): TemplateLiteral {\n  return {\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\n    elements,\n    loc: locStub,\n  }\n}\n\nexport function createIfStatement(\n  test: IfStatement['test'],\n  consequent: IfStatement['consequent'],\n  alternate?: IfStatement['alternate'],\n): IfStatement {\n  return {\n    type: NodeTypes.JS_IF_STATEMENT,\n    test,\n    consequent,\n    alternate,\n    loc: locStub,\n  }\n}\n\nexport function createAssignmentExpression(\n  left: AssignmentExpression['left'],\n  right: AssignmentExpression['right'],\n): AssignmentExpression {\n  return {\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\n    left,\n    right,\n    loc: locStub,\n  }\n}\n\nexport function createSequenceExpression(\n  expressions: SequenceExpression['expressions'],\n): SequenceExpression {\n  return {\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\n    expressions,\n    loc: locStub,\n  }\n}\n\nexport function createReturnStatement(\n  returns: ReturnStatement['returns'],\n): ReturnStatement {\n  return {\n    type: NodeTypes.JS_RETURN_STATEMENT,\n    returns,\n    loc: locStub,\n  }\n}\n\nexport function getVNodeHelper(\n  ssr: boolean,\n  isComponent: boolean,\n): typeof CREATE_VNODE | typeof CREATE_ELEMENT_VNODE {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\n}\n\nexport function getVNodeBlockHelper(\n  ssr: boolean,\n  isComponent: boolean,\n): typeof CREATE_BLOCK | typeof CREATE_ELEMENT_BLOCK {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\n}\n\nexport function convertToBlock(\n  node: VNodeCall,\n  { helper, removeHelper, inSSR }: TransformContext,\n): void {\n  if (!node.isBlock) {\n    node.isBlock = true\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\n    helper(OPEN_BLOCK)\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\n  }\n}\n", "import type { SourceLocation } from './ast'\n\nexport interface CompilerError extends SyntaxError {\n  code: number | string\n  loc?: SourceLocation\n}\n\nexport interface CoreCompilerError extends CompilerError {\n  code: ErrorCodes\n}\n\nexport function defaultOnError(error: CompilerError): never {\n  throw error\n}\n\nexport function defaultOnWarn(msg: CompilerError): void {\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\n}\n\ntype InferCompilerError<T> = T extends ErrorCodes\n  ? CoreCompilerError\n  : CompilerError\n\nexport function createCompilerError<T extends number>(\n  code: T,\n  loc?: SourceLocation,\n  messages?: { [code: number]: string },\n  additionalMessage?: string,\n): InferCompilerError<T> {\n  const msg =\n    __DEV__ || !__BROWSER__\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\n      : `https://vuejs.org/error-reference/#compiler-${code}`\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\n  error.code = code\n  error.loc = loc\n  return error\n}\n\nexport enum ErrorCodes {\n  // parse errors\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\n  CDATA_IN_HTML_CONTENT,\n  DUPLICATE_ATTRIBUTE,\n  END_TAG_WITH_ATTRIBUTES,\n  END_TAG_WITH_TRAILING_SOLIDUS,\n  EOF_BEFORE_TAG_NAME,\n  EOF_IN_CDATA,\n  EOF_IN_COMMENT,\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\n  EOF_IN_TAG,\n  INCORRECTLY_CLOSED_COMMENT,\n  INCORRECTLY_OPENED_COMMENT,\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\n  MISSING_ATTRIBUTE_VALUE,\n  MISSING_END_TAG_NAME,\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\n  NESTED_COMMENT,\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\n  UNEXPECTED_NULL_CHARACTER,\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\n  UNEXPECTED_SOLIDUS_IN_TAG,\n\n  // Vue-specific parse errors\n  X_INVALID_END_TAG,\n  X_MISSING_END_TAG,\n  X_MISSING_INTERPOLATION_END,\n  X_MISSING_DIRECTIVE_NAME,\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\n\n  // transform errors\n  X_V_IF_NO_EXPRESSION,\n  X_V_IF_SAME_KEY,\n  X_V_ELSE_NO_ADJACENT_IF,\n  X_V_FOR_NO_EXPRESSION,\n  X_V_FOR_MALFORMED_EXPRESSION,\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\n  X_V_BIND_NO_EXPRESSION,\n  X_V_ON_NO_EXPRESSION,\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\n  X_V_SLOT_MIXED_SLOT_USAGE,\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\n  X_V_SLOT_MISPLACED,\n  X_V_MODEL_NO_EXPRESSION,\n  X_V_MODEL_MALFORMED_EXPRESSION,\n  X_V_MODEL_ON_SCOPE_VARIABLE,\n  X_V_MODEL_ON_PROPS,\n  X_INVALID_EXPRESSION,\n  X_KEEP_ALIVE_INVALID_CHILDREN,\n\n  // generic errors\n  X_PREFIX_ID_NOT_SUPPORTED,\n  X_MODULE_MODE_NOT_SUPPORTED,\n  X_CACHE_HANDLER_NOT_SUPPORTED,\n  X_SCOPE_ID_NOT_SUPPORTED,\n  X_VNODE_HOOKS,\n\n  // placed here to preserve order for the current minor\n  // TODO adjust order in 3.5\n  X_V_BIND_INVALID_SAME_NAME_ARGUMENT,\n\n  // Special value for higher-order compilers to pick up the last code\n  // to avoid collision of error codes. This should always be kept as the last\n  // item.\n  __EXTEND_POINT__,\n}\n\nexport const errorMessages: Record<ErrorCodes, string> = {\n  // parse errors\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\n    'CDATA section is allowed only in XML context.',\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\n    'Unexpected EOF in script.',\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\n    'Whitespace was expected.',\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\n    \"Attribute name cannot start with '='.\",\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\n    \"'<?' is allowed only in XML context.\",\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null character.`,\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\n\n  // Vue-specific parse errors\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\n    'Interpolation end sign was not found.',\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\n    'End bracket for dynamic directive argument was not found. ' +\n    'Note that dynamic directive argument cannot contain spaces.',\n  [ErrorCodes.X_MISSING_DIRECTIVE_NAME]: 'Legal directive name was expected.',\n\n  // transform errors\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\n  [ErrorCodes.X_V_BIND_INVALID_SAME_NAME_ARGUMENT]: `v-bind with same-name shorthand only allows static argument.`,\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\n    `Mixed v-slot usage on both the component and nested <template>. ` +\n    `When there are multiple named slots, all slots should use <template> ` +\n    `syntax to avoid scope ambiguity.`,\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\n    `Extraneous children found when component already has explicitly named ` +\n    `default slot. These children will be ignored.`,\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [ErrorCodes.X_V_MODEL_ON_PROPS]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\n  [ErrorCodes.X_VNODE_HOOKS]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n\n  // generic errors\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\n\n  // just to fulfill types\n  [ErrorCodes.__EXTEND_POINT__]: ``,\n}\n", null, null, null, null, "/**\n * This Tokenizer is adapted from htmlparser2 under the MIT License listed at\n * https://github.com/fb55/htmlparser2/blob/master/LICENSE\n\nCopyright 2010, 2011, Chris Winberry <chris@winberry.net>. All rights reserved.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n */\n\nimport { ErrorCodes } from './errors'\nimport type { ElementNode, Position } from './ast'\n\n/**\n * Note: entities is a non-browser-build-only dependency.\n * In the browser, we use an HTML element to do the decoding.\n * Make sure all imports from entities are only used in non-browser branches\n * so that it can be properly treeshaken.\n */\nimport {\n  DecodingMode,\n  EntityDecoder,\n  fromCodePoint,\n  htmlDecodeTree,\n} from 'entities/lib/decode.js'\n\nexport enum ParseMode {\n  BASE,\n  HTML,\n  SFC,\n}\n\nexport enum CharCodes {\n  Tab = 0x9, // \"\\t\"\n  NewLine = 0xa, // \"\\n\"\n  FormFeed = 0xc, // \"\\f\"\n  CarriageReturn = 0xd, // \"\\r\"\n  Space = 0x20, // \" \"\n  ExclamationMark = 0x21, // \"!\"\n  Number = 0x23, // \"#\"\n  Amp = 0x26, // \"&\"\n  SingleQuote = 0x27, // \"'\"\n  DoubleQuote = 0x22, // '\"'\n  GraveAccent = 96, // \"`\"\n  Dash = 0x2d, // \"-\"\n  Slash = 0x2f, // \"/\"\n  Zero = 0x30, // \"0\"\n  Nine = 0x39, // \"9\"\n  Semi = 0x3b, // \";\"\n  Lt = 0x3c, // \"<\"\n  Eq = 0x3d, // \"=\"\n  Gt = 0x3e, // \">\"\n  Questionmark = 0x3f, // \"?\"\n  UpperA = 0x41, // \"A\"\n  LowerA = 0x61, // \"a\"\n  UpperF = 0x46, // \"F\"\n  LowerF = 0x66, // \"f\"\n  UpperZ = 0x5a, // \"Z\"\n  LowerZ = 0x7a, // \"z\"\n  LowerX = 0x78, // \"x\"\n  LowerV = 0x76, // \"v\"\n  Dot = 0x2e, // \".\"\n  Colon = 0x3a, // \":\"\n  At = 0x40, // \"@\"\n  LeftSquare = 91, // \"[\"\n  RightSquare = 93, // \"]\"\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]) // \"{{\"\nconst defaultDelimitersClose = new Uint8Array([125, 125]) // \"}}\"\n\n/** All the states the tokenizer can be in. */\nexport enum State {\n  Text = 1,\n\n  // interpolation\n  InterpolationOpen,\n  Interpolation,\n  InterpolationClose,\n\n  // Tags\n  BeforeTagName, // After <\n  InTagName,\n  InSelfClosingTag,\n  BeforeClosingTagName,\n  InClosingTagName,\n  AfterClosingTagName,\n\n  // Attrs\n  BeforeAttrName,\n  InAttrName,\n  InDirName,\n  InDirArg,\n  InDirDynamicArg,\n  InDirModifier,\n  AfterAttrName,\n  BeforeAttrValue,\n  InAttrValueDq, // \"\n  InAttrValueSq, // '\n  InAttrValueNq,\n\n  // Declarations\n  BeforeDeclaration, // !\n  InDeclaration,\n\n  // Processing instructions\n  InProcessingInstruction, // ?\n\n  // Comments & CDATA\n  BeforeComment,\n  CDATASequence,\n  InSpecialComment,\n  InCommentLike,\n\n  // Special tags\n  BeforeSpecialS, // Decide if we deal with `<script` or `<style`\n  BeforeSpecialT, // Decide if we deal with `<title` or `<textarea`\n  SpecialStartSequence,\n  InRCDATA,\n\n  InEntity,\n\n  InSFCRootTagName,\n}\n\n/**\n * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a\n * tag name.\n */\nfunction isTagStartChar(c: number): boolean {\n  return (\n    (c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n    (c >= CharCodes.UpperA && c <= CharCodes.UpperZ)\n  )\n}\n\nexport function isWhitespace(c: number): boolean {\n  return (\n    c === CharCodes.Space ||\n    c === CharCodes.NewLine ||\n    c === CharCodes.Tab ||\n    c === CharCodes.FormFeed ||\n    c === CharCodes.CarriageReturn\n  )\n}\n\nfunction isEndOfTagSection(c: number): boolean {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c)\n}\n\nexport function toCharCodes(str: string): Uint8Array {\n  const ret = new Uint8Array(str.length)\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i)\n  }\n  return ret\n}\n\nexport enum QuoteType {\n  NoValue = 0,\n  Unquoted = 1,\n  Single = 2,\n  Double = 3,\n}\n\nexport interface Callbacks {\n  ontext(start: number, endIndex: number): void\n  ontextentity(char: string, start: number, endIndex: number): void\n\n  oninterpolation(start: number, endIndex: number): void\n\n  onopentagname(start: number, endIndex: number): void\n  onopentagend(endIndex: number): void\n  onselfclosingtag(endIndex: number): void\n  onclosetag(start: number, endIndex: number): void\n\n  onattribdata(start: number, endIndex: number): void\n  onattribentity(char: string, start: number, end: number): void\n  onattribend(quote: QuoteType, endIndex: number): void\n  onattribname(start: number, endIndex: number): void\n  onattribnameend(endIndex: number): void\n\n  ondirname(start: number, endIndex: number): void\n  ondirarg(start: number, endIndex: number): void\n  ondirmodifier(start: number, endIndex: number): void\n\n  oncomment(start: number, endIndex: number): void\n  oncdata(start: number, endIndex: number): void\n\n  onprocessinginstruction(start: number, endIndex: number): void\n  // ondeclaration(start: number, endIndex: number): void\n  onend(): void\n  onerr(code: ErrorCodes, index: number): void\n}\n\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nexport const Sequences: {\n  Cdata: Uint8Array\n  CdataEnd: Uint8Array\n  CommentEnd: Uint8Array\n  ScriptEnd: Uint8Array\n  StyleEnd: Uint8Array\n  TitleEnd: Uint8Array\n  TextareaEnd: Uint8Array\n} = {\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n  TextareaEnd: new Uint8Array([\n    0x3c, 0x2f, 116, 101, 120, 116, 97, 114, 101, 97,\n  ]), // `</textarea\n}\n\nexport default class Tokenizer {\n  /** The current state the tokenizer is in. */\n  public state: State = State.Text\n  /** The read buffer. */\n  private buffer = ''\n  /** The beginning of the section that is currently being read. */\n  public sectionStart = 0\n  /** The index within the buffer that we are currently looking at. */\n  private index = 0\n  /** The start of the last entity. */\n  private entityStart = 0\n  /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n  private baseState = State.Text\n  /** For special parsing behavior inside of script and style tags. */\n  public inRCDATA = false\n  /** For disabling RCDATA tags handling */\n  public inXML = false\n  /** For disabling interpolation parsing in v-pre */\n  public inVPre = false\n  /** Record newline positions for fast line / column calculation */\n  private newlines: number[] = []\n\n  private readonly entityDecoder?: EntityDecoder\n\n  public mode: ParseMode = ParseMode.BASE\n  public get inSFCRoot(): boolean {\n    return this.mode === ParseMode.SFC && this.stack.length === 0\n  }\n\n  constructor(\n    private readonly stack: ElementNode[],\n    private readonly cbs: Callbacks,\n  ) {\n    if (!__BROWSER__) {\n      this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) =>\n        this.emitCodePoint(cp, consumed),\n      )\n    }\n  }\n\n  public reset(): void {\n    this.state = State.Text\n    this.mode = ParseMode.BASE\n    this.buffer = ''\n    this.sectionStart = 0\n    this.index = 0\n    this.baseState = State.Text\n    this.inRCDATA = false\n    this.currentSequence = undefined!\n    this.newlines.length = 0\n    this.delimiterOpen = defaultDelimitersOpen\n    this.delimiterClose = defaultDelimitersClose\n  }\n\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  public getPos(index: number): Position {\n    let line = 1\n    let column = index + 1\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i]\n      if (index > newlineIndex) {\n        line = i + 2\n        column = index - newlineIndex\n        break\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index,\n    }\n  }\n\n  private peek() {\n    return this.buffer.charCodeAt(this.index + 1)\n  }\n\n  private stateText(c: number): void {\n    if (c === CharCodes.Lt) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index)\n      }\n      this.state = State.BeforeTagName\n      this.sectionStart = this.index\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\n      this.startEntity()\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = State.InterpolationOpen\n      this.delimiterIndex = 0\n      this.stateInterpolationOpen(c)\n    }\n  }\n\n  public delimiterOpen: Uint8Array = defaultDelimitersOpen\n  public delimiterClose: Uint8Array = defaultDelimitersClose\n  private delimiterIndex = -1\n\n  private stateInterpolationOpen(c: number): void {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start)\n        }\n        this.state = State.Interpolation\n        this.sectionStart = start\n      } else {\n        this.delimiterIndex++\n      }\n    } else if (this.inRCDATA) {\n      this.state = State.InRCDATA\n      this.stateInRCDATA(c)\n    } else {\n      this.state = State.Text\n      this.stateText(c)\n    }\n  }\n\n  private stateInterpolation(c: number): void {\n    if (c === this.delimiterClose[0]) {\n      this.state = State.InterpolationClose\n      this.delimiterIndex = 0\n      this.stateInterpolationClose(c)\n    }\n  }\n\n  private stateInterpolationClose(c: number) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1)\n        if (this.inRCDATA) {\n          this.state = State.InRCDATA\n        } else {\n          this.state = State.Text\n        }\n        this.sectionStart = this.index + 1\n      } else {\n        this.delimiterIndex++\n      }\n    } else {\n      this.state = State.Interpolation\n      this.stateInterpolation(c)\n    }\n  }\n\n  public currentSequence: Uint8Array = undefined!\n  private sequenceIndex = 0\n  private stateSpecialStartSequence(c: number): void {\n    const isEnd = this.sequenceIndex === this.currentSequence.length\n    const isMatch = isEnd\n      ? // If we are at the end of the sequence, make sure the tag name has ended\n        isEndOfTagSection(c)\n      : // Otherwise, do a case-insensitive comparison\n        (c | 0x20) === this.currentSequence[this.sequenceIndex]\n\n    if (!isMatch) {\n      this.inRCDATA = false\n    } else if (!isEnd) {\n      this.sequenceIndex++\n      return\n    }\n\n    this.sequenceIndex = 0\n    this.state = State.InTagName\n    this.stateInTagName(c)\n  }\n\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  private stateInRCDATA(c: number): void {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length\n\n        if (this.sectionStart < endOfText) {\n          // Spoof the index so that reported locations match up.\n          const actualIndex = this.index\n          this.index = endOfText\n          this.cbs.ontext(this.sectionStart, endOfText)\n          this.index = actualIndex\n        }\n\n        this.sectionStart = endOfText + 2 // Skip over the `</`\n        this.stateInClosingTagName(c)\n        this.inRCDATA = false\n        return // We are done; skip the rest of the function.\n      }\n\n      this.sequenceIndex = 0\n    }\n\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1\n    } else if (this.sequenceIndex === 0) {\n      if (\n        this.currentSequence === Sequences.TitleEnd ||\n        (this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot)\n      ) {\n        // We have to parse entities in <title> and <textarea> tags.\n        if (!__BROWSER__ && c === CharCodes.Amp) {\n          this.startEntity()\n        } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n          // We also need to handle interpolation\n          this.state = State.InterpolationOpen\n          this.delimiterIndex = 0\n          this.stateInterpolationOpen(c)\n        }\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\n        // Outside of <title> and <textarea> tags, we can fast-forward.\n        this.sequenceIndex = 1\n      }\n    } else {\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n      this.sequenceIndex = Number(c === CharCodes.Lt)\n    }\n  }\n\n  private stateCDATASequence(c: number): void {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = State.InCommentLike\n        this.currentSequence = Sequences.CdataEnd\n        this.sequenceIndex = 0\n        this.sectionStart = this.index + 1\n      }\n    } else {\n      this.sequenceIndex = 0\n      this.state = State.InDeclaration\n      this.stateInDeclaration(c) // Reconsume the character\n    }\n  }\n\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  private fastForwardTo(c: number): boolean {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index)\n      if (cc === CharCodes.NewLine) {\n        this.newlines.push(this.index)\n      }\n      if (cc === c) {\n        return true\n      }\n    }\n\n    /*\n     * We increment the index at the end of the `parse` loop,\n     * so set it to `buffer.length - 1` here.\n     *\n     * TODO: Refactor `parse` to increment index before calling states.\n     */\n    this.index = this.buffer.length - 1\n\n    return false\n  }\n\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  private stateInCommentLike(c: number): void {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2)\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2)\n        }\n\n        this.sequenceIndex = 0\n        this.sectionStart = this.index + 1\n        this.state = State.Text\n      }\n    } else if (this.sequenceIndex === 0) {\n      // Fast-forward to the first character of the sequence\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      // Allow long sequences, eg. --->, ]]]>\n      this.sequenceIndex = 0\n    }\n  }\n\n  private startSpecial(sequence: Uint8Array, offset: number) {\n    this.enterRCDATA(sequence, offset)\n    this.state = State.SpecialStartSequence\n  }\n\n  public enterRCDATA(sequence: Uint8Array, offset: number): void {\n    this.inRCDATA = true\n    this.currentSequence = sequence\n    this.sequenceIndex = offset\n  }\n\n  private stateBeforeTagName(c: number): void {\n    if (c === CharCodes.ExclamationMark) {\n      this.state = State.BeforeDeclaration\n      this.sectionStart = this.index + 1\n    } else if (c === CharCodes.Questionmark) {\n      this.state = State.InProcessingInstruction\n      this.sectionStart = this.index + 1\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index\n      if (this.mode === ParseMode.BASE) {\n        // no special tags in base mode\n        this.state = State.InTagName\n      } else if (this.inSFCRoot) {\n        // SFC mode + root level\n        // - everything except <template> is RAWTEXT\n        // - <template> with lang other than html is also RAWTEXT\n        this.state = State.InSFCRootTagName\n      } else if (!this.inXML) {\n        // HTML mode\n        // - <script>, <style> RAWTEXT\n        // - <title>, <textarea> RCDATA\n        if (c === 116 /* t */) {\n          this.state = State.BeforeSpecialT\n        } else {\n          this.state =\n            c === 115 /* s */ ? State.BeforeSpecialS : State.InTagName\n        }\n      } else {\n        this.state = State.InTagName\n      }\n    } else if (c === CharCodes.Slash) {\n      this.state = State.BeforeClosingTagName\n    } else {\n      this.state = State.Text\n      this.stateText(c)\n    }\n  }\n  private stateInTagName(c: number): void {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c)\n    }\n  }\n  private stateInSFCRootTagName(c: number): void {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index)\n      if (tag !== 'template') {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0)\n      }\n      this.handleTagName(c)\n    }\n  }\n  private handleTagName(c: number) {\n    this.cbs.onopentagname(this.sectionStart, this.index)\n    this.sectionStart = -1\n    this.state = State.BeforeAttrName\n    this.stateBeforeAttrName(c)\n  }\n  private stateBeforeClosingTagName(c: number): void {\n    if (isWhitespace(c)) {\n      // Ignore\n    } else if (c === CharCodes.Gt) {\n      if (__DEV__ || !__BROWSER__) {\n        this.cbs.onerr(ErrorCodes.MISSING_END_TAG_NAME, this.index)\n      }\n      this.state = State.Text\n      // Ignore\n      this.sectionStart = this.index + 1\n    } else {\n      this.state = isTagStartChar(c)\n        ? State.InClosingTagName\n        : State.InSpecialComment\n      this.sectionStart = this.index\n    }\n  }\n  private stateInClosingTagName(c: number): void {\n    if (c === CharCodes.Gt || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index)\n      this.sectionStart = -1\n      this.state = State.AfterClosingTagName\n      this.stateAfterClosingTagName(c)\n    }\n  }\n  private stateAfterClosingTagName(c: number): void {\n    // Skip everything until \">\"\n    if (c === CharCodes.Gt) {\n      this.state = State.Text\n      this.sectionStart = this.index + 1\n    }\n  }\n  private stateBeforeAttrName(c: number): void {\n    if (c === CharCodes.Gt) {\n      this.cbs.onopentagend(this.index)\n      if (this.inRCDATA) {\n        this.state = State.InRCDATA\n      } else {\n        this.state = State.Text\n      }\n      this.sectionStart = this.index + 1\n    } else if (c === CharCodes.Slash) {\n      this.state = State.InSelfClosingTag\n      if ((__DEV__ || !__BROWSER__) && this.peek() !== CharCodes.Gt) {\n        this.cbs.onerr(ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG, this.index)\n      }\n    } else if (c === CharCodes.Lt && this.peek() === CharCodes.Slash) {\n      // special handling for </ appearing in open tag state\n      // this is different from standard HTML parsing but makes practical sense\n      // especially for parsing intermediate input state in IDEs.\n      this.cbs.onopentagend(this.index)\n      this.state = State.BeforeTagName\n      this.sectionStart = this.index\n    } else if (!isWhitespace(c)) {\n      if ((__DEV__ || !__BROWSER__) && c === CharCodes.Eq) {\n        this.cbs.onerr(\n          ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\n          this.index,\n        )\n      }\n      this.handleAttrStart(c)\n    }\n  }\n  private handleAttrStart(c: number) {\n    if (c === CharCodes.LowerV && this.peek() === CharCodes.Dash) {\n      this.state = State.InDirName\n      this.sectionStart = this.index\n    } else if (\n      c === CharCodes.Dot ||\n      c === CharCodes.Colon ||\n      c === CharCodes.At ||\n      c === CharCodes.Number\n    ) {\n      this.cbs.ondirname(this.index, this.index + 1)\n      this.state = State.InDirArg\n      this.sectionStart = this.index + 1\n    } else {\n      this.state = State.InAttrName\n      this.sectionStart = this.index\n    }\n  }\n  private stateInSelfClosingTag(c: number): void {\n    if (c === CharCodes.Gt) {\n      this.cbs.onselfclosingtag(this.index)\n      this.state = State.Text\n      this.sectionStart = this.index + 1\n      this.inRCDATA = false // Reset special state, in case of self-closing special tags\n    } else if (!isWhitespace(c)) {\n      this.state = State.BeforeAttrName\n      this.stateBeforeAttrName(c)\n    }\n  }\n  private stateInAttrName(c: number): void {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index)\n      this.handleAttrNameEnd(c)\n    } else if (\n      (__DEV__ || !__BROWSER__) &&\n      (c === CharCodes.DoubleQuote ||\n        c === CharCodes.SingleQuote ||\n        c === CharCodes.Lt)\n    ) {\n      this.cbs.onerr(\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\n        this.index,\n      )\n    }\n  }\n  private stateInDirName(c: number): void {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index)\n      this.handleAttrNameEnd(c)\n    } else if (c === CharCodes.Colon) {\n      this.cbs.ondirname(this.sectionStart, this.index)\n      this.state = State.InDirArg\n      this.sectionStart = this.index + 1\n    } else if (c === CharCodes.Dot) {\n      this.cbs.ondirname(this.sectionStart, this.index)\n      this.state = State.InDirModifier\n      this.sectionStart = this.index + 1\n    }\n  }\n  private stateInDirArg(c: number): void {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index)\n      this.handleAttrNameEnd(c)\n    } else if (c === CharCodes.LeftSquare) {\n      this.state = State.InDirDynamicArg\n    } else if (c === CharCodes.Dot) {\n      this.cbs.ondirarg(this.sectionStart, this.index)\n      this.state = State.InDirModifier\n      this.sectionStart = this.index + 1\n    }\n  }\n  private stateInDynamicDirArg(c: number): void {\n    if (c === CharCodes.RightSquare) {\n      this.state = State.InDirArg\n    } else if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1)\n      this.handleAttrNameEnd(c)\n      if (__DEV__ || !__BROWSER__) {\n        this.cbs.onerr(\n          ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\n          this.index,\n        )\n      }\n    }\n  }\n  private stateInDirModifier(c: number): void {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index)\n      this.handleAttrNameEnd(c)\n    } else if (c === CharCodes.Dot) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index)\n      this.sectionStart = this.index + 1\n    }\n  }\n  private handleAttrNameEnd(c: number): void {\n    this.sectionStart = this.index\n    this.state = State.AfterAttrName\n    this.cbs.onattribnameend(this.index)\n    this.stateAfterAttrName(c)\n  }\n  private stateAfterAttrName(c: number): void {\n    if (c === CharCodes.Eq) {\n      this.state = State.BeforeAttrValue\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart)\n      this.sectionStart = -1\n      this.state = State.BeforeAttrName\n      this.stateBeforeAttrName(c)\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart)\n      this.handleAttrStart(c)\n    }\n  }\n  private stateBeforeAttrValue(c: number): void {\n    if (c === CharCodes.DoubleQuote) {\n      this.state = State.InAttrValueDq\n      this.sectionStart = this.index + 1\n    } else if (c === CharCodes.SingleQuote) {\n      this.state = State.InAttrValueSq\n      this.sectionStart = this.index + 1\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index\n      this.state = State.InAttrValueNq\n      this.stateInAttrValueNoQuotes(c) // Reconsume token\n    }\n  }\n  private handleInAttrValue(c: number, quote: number) {\n    if (c === quote || (__BROWSER__ && this.fastForwardTo(quote))) {\n      this.cbs.onattribdata(this.sectionStart, this.index)\n      this.sectionStart = -1\n      this.cbs.onattribend(\n        quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single,\n        this.index + 1,\n      )\n      this.state = State.BeforeAttrName\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\n      this.startEntity()\n    }\n  }\n  private stateInAttrValueDoubleQuotes(c: number): void {\n    this.handleInAttrValue(c, CharCodes.DoubleQuote)\n  }\n  private stateInAttrValueSingleQuotes(c: number): void {\n    this.handleInAttrValue(c, CharCodes.SingleQuote)\n  }\n  private stateInAttrValueNoQuotes(c: number): void {\n    if (isWhitespace(c) || c === CharCodes.Gt) {\n      this.cbs.onattribdata(this.sectionStart, this.index)\n      this.sectionStart = -1\n      this.cbs.onattribend(QuoteType.Unquoted, this.index)\n      this.state = State.BeforeAttrName\n      this.stateBeforeAttrName(c)\n    } else if (\n      ((__DEV__ || !__BROWSER__) && c === CharCodes.DoubleQuote) ||\n      c === CharCodes.SingleQuote ||\n      c === CharCodes.Lt ||\n      c === CharCodes.Eq ||\n      c === CharCodes.GraveAccent\n    ) {\n      this.cbs.onerr(\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\n        this.index,\n      )\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\n      this.startEntity()\n    }\n  }\n  private stateBeforeDeclaration(c: number): void {\n    if (c === CharCodes.LeftSquare) {\n      this.state = State.CDATASequence\n      this.sequenceIndex = 0\n    } else {\n      this.state =\n        c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration\n    }\n  }\n  private stateInDeclaration(c: number): void {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      // this.cbs.ondeclaration(this.sectionStart, this.index)\n      this.state = State.Text\n      this.sectionStart = this.index + 1\n    }\n  }\n  private stateInProcessingInstruction(c: number): void {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index)\n      this.state = State.Text\n      this.sectionStart = this.index + 1\n    }\n  }\n  private stateBeforeComment(c: number): void {\n    if (c === CharCodes.Dash) {\n      this.state = State.InCommentLike\n      this.currentSequence = Sequences.CommentEnd\n      // Allow short comments (eg. <!-->)\n      this.sequenceIndex = 2\n      this.sectionStart = this.index + 1\n    } else {\n      this.state = State.InDeclaration\n    }\n  }\n  private stateInSpecialComment(c: number): void {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.oncomment(this.sectionStart, this.index)\n      this.state = State.Text\n      this.sectionStart = this.index + 1\n    }\n  }\n  private stateBeforeSpecialS(c: number): void {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4)\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4)\n    } else {\n      this.state = State.InTagName\n      this.stateInTagName(c) // Consume the token again\n    }\n  }\n  private stateBeforeSpecialT(c: number): void {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4)\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4)\n    } else {\n      this.state = State.InTagName\n      this.stateInTagName(c) // Consume the token again\n    }\n  }\n\n  private startEntity() {\n    if (!__BROWSER__) {\n      this.baseState = this.state\n      this.state = State.InEntity\n      this.entityStart = this.index\n      this.entityDecoder!.startEntity(\n        this.baseState === State.Text || this.baseState === State.InRCDATA\n          ? DecodingMode.Legacy\n          : DecodingMode.Attribute,\n      )\n    }\n  }\n\n  private stateInEntity(): void {\n    if (!__BROWSER__) {\n      const length = this.entityDecoder!.write(this.buffer, this.index)\n\n      // If `length` is positive, we are done with the entity.\n      if (length >= 0) {\n        this.state = this.baseState\n\n        if (length === 0) {\n          this.index = this.entityStart\n        }\n      } else {\n        // Mark buffer as consumed.\n        this.index = this.buffer.length - 1\n      }\n    }\n  }\n\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  public parse(input: string): void {\n    this.buffer = input\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index)\n      if (c === CharCodes.NewLine) {\n        this.newlines.push(this.index)\n      }\n      switch (this.state) {\n        case State.Text: {\n          this.stateText(c)\n          break\n        }\n        case State.InterpolationOpen: {\n          this.stateInterpolationOpen(c)\n          break\n        }\n        case State.Interpolation: {\n          this.stateInterpolation(c)\n          break\n        }\n        case State.InterpolationClose: {\n          this.stateInterpolationClose(c)\n          break\n        }\n        case State.SpecialStartSequence: {\n          this.stateSpecialStartSequence(c)\n          break\n        }\n        case State.InRCDATA: {\n          this.stateInRCDATA(c)\n          break\n        }\n        case State.CDATASequence: {\n          this.stateCDATASequence(c)\n          break\n        }\n        case State.InAttrValueDq: {\n          this.stateInAttrValueDoubleQuotes(c)\n          break\n        }\n        case State.InAttrName: {\n          this.stateInAttrName(c)\n          break\n        }\n        case State.InDirName: {\n          this.stateInDirName(c)\n          break\n        }\n        case State.InDirArg: {\n          this.stateInDirArg(c)\n          break\n        }\n        case State.InDirDynamicArg: {\n          this.stateInDynamicDirArg(c)\n          break\n        }\n        case State.InDirModifier: {\n          this.stateInDirModifier(c)\n          break\n        }\n        case State.InCommentLike: {\n          this.stateInCommentLike(c)\n          break\n        }\n        case State.InSpecialComment: {\n          this.stateInSpecialComment(c)\n          break\n        }\n        case State.BeforeAttrName: {\n          this.stateBeforeAttrName(c)\n          break\n        }\n        case State.InTagName: {\n          this.stateInTagName(c)\n          break\n        }\n        case State.InSFCRootTagName: {\n          this.stateInSFCRootTagName(c)\n          break\n        }\n        case State.InClosingTagName: {\n          this.stateInClosingTagName(c)\n          break\n        }\n        case State.BeforeTagName: {\n          this.stateBeforeTagName(c)\n          break\n        }\n        case State.AfterAttrName: {\n          this.stateAfterAttrName(c)\n          break\n        }\n        case State.InAttrValueSq: {\n          this.stateInAttrValueSingleQuotes(c)\n          break\n        }\n        case State.BeforeAttrValue: {\n          this.stateBeforeAttrValue(c)\n          break\n        }\n        case State.BeforeClosingTagName: {\n          this.stateBeforeClosingTagName(c)\n          break\n        }\n        case State.AfterClosingTagName: {\n          this.stateAfterClosingTagName(c)\n          break\n        }\n        case State.BeforeSpecialS: {\n          this.stateBeforeSpecialS(c)\n          break\n        }\n        case State.BeforeSpecialT: {\n          this.stateBeforeSpecialT(c)\n          break\n        }\n        case State.InAttrValueNq: {\n          this.stateInAttrValueNoQuotes(c)\n          break\n        }\n        case State.InSelfClosingTag: {\n          this.stateInSelfClosingTag(c)\n          break\n        }\n        case State.InDeclaration: {\n          this.stateInDeclaration(c)\n          break\n        }\n        case State.BeforeDeclaration: {\n          this.stateBeforeDeclaration(c)\n          break\n        }\n        case State.BeforeComment: {\n          this.stateBeforeComment(c)\n          break\n        }\n        case State.InProcessingInstruction: {\n          this.stateInProcessingInstruction(c)\n          break\n        }\n        case State.InEntity: {\n          this.stateInEntity()\n          break\n        }\n      }\n      this.index++\n    }\n    this.cleanup()\n    this.finish()\n  }\n\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  private cleanup() {\n    // If we are inside of text or attributes, emit what we already have.\n    if (this.sectionStart !== this.index) {\n      if (\n        this.state === State.Text ||\n        (this.state === State.InRCDATA && this.sequenceIndex === 0)\n      ) {\n        this.cbs.ontext(this.sectionStart, this.index)\n        this.sectionStart = this.index\n      } else if (\n        this.state === State.InAttrValueDq ||\n        this.state === State.InAttrValueSq ||\n        this.state === State.InAttrValueNq\n      ) {\n        this.cbs.onattribdata(this.sectionStart, this.index)\n        this.sectionStart = this.index\n      }\n    }\n  }\n\n  private finish() {\n    if (!__BROWSER__ && this.state === State.InEntity) {\n      this.entityDecoder!.end()\n      this.state = this.baseState\n    }\n\n    this.handleTrailingData()\n\n    this.cbs.onend()\n  }\n\n  /** Handle any trailing data. */\n  private handleTrailingData() {\n    const endIndex = this.buffer.length\n\n    // If there is no remaining data, we are done.\n    if (this.sectionStart >= endIndex) {\n      return\n    }\n\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex)\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex)\n      }\n    } else if (\n      this.state === State.InTagName ||\n      this.state === State.BeforeAttrName ||\n      this.state === State.BeforeAttrValue ||\n      this.state === State.AfterAttrName ||\n      this.state === State.InAttrName ||\n      this.state === State.InDirName ||\n      this.state === State.InDirArg ||\n      this.state === State.InDirDynamicArg ||\n      this.state === State.InDirModifier ||\n      this.state === State.InAttrValueSq ||\n      this.state === State.InAttrValueDq ||\n      this.state === State.InAttrValueNq ||\n      this.state === State.InClosingTagName\n    ) {\n      /*\n       * If we are currently in an opening or closing tag, us not calling the\n       * respective callback signals that the tag should be ignored.\n       */\n    } else {\n      this.cbs.ontext(this.sectionStart, endIndex)\n    }\n  }\n\n  private emitCodePoint(cp: number, consumed: number): void {\n    if (!__BROWSER__) {\n      if (this.baseState !== State.Text && this.baseState !== State.InRCDATA) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart)\n        }\n        this.sectionStart = this.entityStart + consumed\n        this.index = this.sectionStart - 1\n\n        this.cbs.onattribentity(\n          fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart,\n        )\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart)\n        }\n        this.sectionStart = this.entityStart + consumed\n        this.index = this.sectionStart - 1\n\n        this.cbs.ontextentity(\n          fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart,\n        )\n      }\n    }\n  }\n}\n", "import {\n  type BlockCodegenNode,\n  type CacheExpression,\n  type CallExpression,\n  type DirectiveNode,\n  type ElementNode,\n  ElementTypes,\n  type ExpressionNode,\n  type IfBranchNode,\n  type InterpolationNode,\n  type JSChildNode,\n  type MemoExpression,\n  NodeTypes,\n  type ObjectExpression,\n  type Position,\n  type Property,\n  type RenderSlotCall,\n  type RootNode,\n  type SimpleExpressionNode,\n  type SlotOutletNode,\n  type TemplateChildNode,\n  type TemplateNode,\n  type TextNode,\n  type VNodeCall,\n  createCallExpression,\n  createObjectExpression,\n} from './ast'\nimport type { TransformContext } from './transform'\nimport {\n  BASE_TRANSITION,\n  GUARD_REACTIVE_PROPS,\n  KEEP_ALIVE,\n  MERGE_PROPS,\n  NORMALIZE_PROPS,\n  SUSPENSE,\n  TELEPORT,\n  TO_HANDLERS,\n  WITH_MEMO,\n} from './runtimeHelpers'\nimport { NOOP, isObject, isString } from '@vue/shared'\nimport type { PropsExpression } from './transforms/transformElement'\nimport { parseExpression } from '@babel/parser'\nimport type { Expression, Node } from '@babel/types'\nimport { unwrapTSNode } from './babelUtils'\n\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\n\nexport function isCoreComponent(tag: string): symbol | void {\n  switch (tag) {\n    case 'Teleport':\n    case 'teleport':\n      return TELEPORT\n    case 'Suspense':\n    case 'suspense':\n      return SUSPENSE\n    case 'KeepAlive':\n    case 'keep-alive':\n      return KEEP_ALIVE\n    case 'BaseTransition':\n    case 'base-transition':\n      return BASE_TRANSITION\n  }\n}\n\nconst nonIdentifierRE = /^\\d|[^\\$\\w\\xA0-\\uFFFF]/\nexport const isSimpleIdentifier = (name: string): boolean =>\n  !nonIdentifierRE.test(name)\n\nenum MemberExpLexState {\n  inMemberExp,\n  inBrackets,\n  inParens,\n  inString,\n}\n\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\n\nconst getExpSource = (exp: ExpressionNode): string =>\n  exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : exp.loc.source\n\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nexport const isMemberExpressionBrowser = (exp: ExpressionNode): boolean => {\n  // remove whitespaces around . or [ first\n  const path = getExpSource(exp)\n    .trim()\n    .replace(whitespaceRE, s => s.trim())\n\n  let state = MemberExpLexState.inMemberExp\n  let stateStack: MemberExpLexState[] = []\n  let currentOpenBracketCount = 0\n  let currentOpenParensCount = 0\n  let currentStringType: \"'\" | '\"' | '`' | null = null\n\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i)\n    switch (state) {\n      case MemberExpLexState.inMemberExp:\n        if (char === '[') {\n          stateStack.push(state)\n          state = MemberExpLexState.inBrackets\n          currentOpenBracketCount++\n        } else if (char === '(') {\n          stateStack.push(state)\n          state = MemberExpLexState.inParens\n          currentOpenParensCount++\n        } else if (\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\n        ) {\n          return false\n        }\n        break\n      case MemberExpLexState.inBrackets:\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state)\n          state = MemberExpLexState.inString\n          currentStringType = char\n        } else if (char === `[`) {\n          currentOpenBracketCount++\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop()!\n          }\n        }\n        break\n      case MemberExpLexState.inParens:\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state)\n          state = MemberExpLexState.inString\n          currentStringType = char\n        } else if (char === `(`) {\n          currentOpenParensCount++\n        } else if (char === `)`) {\n          // if the exp ends as a call then it should not be considered valid\n          if (i === path.length - 1) {\n            return false\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop()!\n          }\n        }\n        break\n      case MemberExpLexState.inString:\n        if (char === currentStringType) {\n          state = stateStack.pop()!\n          currentStringType = null\n        }\n        break\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount\n}\n\nexport const isMemberExpressionNode: (\n  exp: ExpressionNode,\n  context: TransformContext,\n) => boolean = __BROWSER__\n  ? (NOOP as any)\n  : (exp, context) => {\n      try {\n        let ret: Node =\n          exp.ast ||\n          parseExpression(getExpSource(exp), {\n            plugins: context.expressionPlugins\n              ? [...context.expressionPlugins, 'typescript']\n              : ['typescript'],\n          })\n        ret = unwrapTSNode(ret) as Expression\n        return (\n          ret.type === 'MemberExpression' ||\n          ret.type === 'OptionalMemberExpression' ||\n          (ret.type === 'Identifier' && ret.name !== 'undefined')\n        )\n      } catch (e) {\n        return false\n      }\n    }\n\nexport const isMemberExpression: (\n  exp: ExpressionNode,\n  context: TransformContext,\n) => boolean = __BROWSER__ ? isMemberExpressionBrowser : isMemberExpressionNode\n\nconst fnExpRE =\n  /^\\s*(async\\s*)?(\\([^)]*?\\)|[\\w$_]+)\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/\n\nexport const isFnExpressionBrowser: (exp: ExpressionNode) => boolean = exp =>\n  fnExpRE.test(getExpSource(exp))\n\nexport const isFnExpressionNode: (\n  exp: ExpressionNode,\n  context: TransformContext,\n) => boolean = __BROWSER__\n  ? (NOOP as any)\n  : (exp, context) => {\n      try {\n        let ret: Node =\n          exp.ast ||\n          parseExpression(getExpSource(exp), {\n            plugins: context.expressionPlugins\n              ? [...context.expressionPlugins, 'typescript']\n              : ['typescript'],\n          })\n        // parser may parse the exp as statements when it contains semicolons\n        if (ret.type === 'Program') {\n          ret = ret.body[0]\n          if (ret.type === 'ExpressionStatement') {\n            ret = ret.expression\n          }\n        }\n        ret = unwrapTSNode(ret) as Expression\n        return (\n          ret.type === 'FunctionExpression' ||\n          ret.type === 'ArrowFunctionExpression'\n        )\n      } catch (e) {\n        return false\n      }\n    }\n\nexport const isFnExpression: (\n  exp: ExpressionNode,\n  context: TransformContext,\n) => boolean = __BROWSER__ ? isFnExpressionBrowser : isFnExpressionNode\n\nexport function advancePositionWithClone(\n  pos: Position,\n  source: string,\n  numberOfCharacters: number = source.length,\n): Position {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column,\n    },\n    source,\n    numberOfCharacters,\n  )\n}\n\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nexport function advancePositionWithMutation(\n  pos: Position,\n  source: string,\n  numberOfCharacters: number = source.length,\n): Position {\n  let linesCount = 0\n  let lastNewLinePos = -1\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\n      linesCount++\n      lastNewLinePos = i\n    }\n  }\n\n  pos.offset += numberOfCharacters\n  pos.line += linesCount\n  pos.column =\n    lastNewLinePos === -1\n      ? pos.column + numberOfCharacters\n      : numberOfCharacters - lastNewLinePos\n\n  return pos\n}\n\nexport function assert(condition: boolean, msg?: string): void {\n  /* v8 ignore next 3 */\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`)\n  }\n}\n\nexport function findDir(\n  node: ElementNode,\n  name: string | RegExp,\n  allowEmpty: boolean = false,\n): DirectiveNode | undefined {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (\n      p.type === NodeTypes.DIRECTIVE &&\n      (allowEmpty || p.exp) &&\n      (isString(name) ? p.name === name : name.test(p.name))\n    ) {\n      return p\n    }\n  }\n}\n\nexport function findProp(\n  node: ElementNode,\n  name: string,\n  dynamicOnly: boolean = false,\n  allowEmpty: boolean = false,\n): ElementNode['props'][0] | undefined {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (dynamicOnly) continue\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p\n      }\n    } else if (\n      p.name === 'bind' &&\n      (p.exp || allowEmpty) &&\n      isStaticArgOf(p.arg, name)\n    ) {\n      return p\n    }\n  }\n}\n\nexport function isStaticArgOf(\n  arg: DirectiveNode['arg'],\n  name: string,\n): boolean {\n  return !!(arg && isStaticExp(arg) && arg.content === name)\n}\n\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\n  return node.props.some(\n    p =>\n      p.type === NodeTypes.DIRECTIVE &&\n      p.name === 'bind' &&\n      (!p.arg || // v-bind=\"obj\"\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\n        !p.arg.isStatic), // v-bind:[foo]\n  )\n}\n\nexport function isText(\n  node: TemplateChildNode,\n): node is TextNode | InterpolationNode {\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\n}\n\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\n}\n\nexport function isTemplateNode(\n  node: RootNode | TemplateChildNode,\n): node is TemplateNode {\n  return (\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\n  )\n}\n\nexport function isSlotOutlet(\n  node: RootNode | TemplateChildNode,\n): node is SlotOutletNode {\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\n}\n\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\n\nfunction getUnnormalizedProps(\n  props: PropsExpression | '{}',\n  callPath: CallExpression[] = [],\n): [PropsExpression | '{}', CallExpression[]] {\n  if (\n    props &&\n    !isString(props) &&\n    props.type === NodeTypes.JS_CALL_EXPRESSION\n  ) {\n    const callee = props.callee\n    if (!isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0] as PropsExpression,\n        callPath.concat(props),\n      )\n    }\n  }\n  return [props, callPath]\n}\nexport function injectProp(\n  node: VNodeCall | RenderSlotCall,\n  prop: Property,\n  context: TransformContext,\n): void {\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\n  /**\n   * 1. mergeProps(...)\n   * 2. toHandlers(...)\n   * 3. normalizeProps(...)\n   * 4. normalizeProps(guardReactiveProps(...))\n   *\n   * we need to get the real props before normalization\n   */\n  let props =\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\n  let callPath: CallExpression[] = []\n  let parentCall: CallExpression | undefined\n  if (\n    props &&\n    !isString(props) &&\n    props.type === NodeTypes.JS_CALL_EXPRESSION\n  ) {\n    const ret = getUnnormalizedProps(props)\n    props = ret[0]\n    callPath = ret[1]\n    parentCall = callPath[callPath.length - 1]\n  }\n\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop])\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    const first = props.arguments[0] as string | JSChildNode\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n      // #6631\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop)\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        // #2366\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props,\n        ])\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]))\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props)\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop)\n    }\n    propsWithInjection = props\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props,\n    ])\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n    // the `guardReactiveProps` will no longer be needed\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2]\n    }\n  }\n  if (node.type === NodeTypes.VNODE_CALL) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection\n    } else {\n      node.props = propsWithInjection\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection\n    } else {\n      node.arguments[2] = propsWithInjection\n    }\n  }\n}\n\n// check existing key to avoid overriding user provided keys\nfunction hasProp(prop: Property, props: ObjectExpression) {\n  let result = false\n  if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\n    const propKeyName = prop.key.content\n    result = props.properties.some(\n      p =>\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\n        p.key.content === propKeyName,\n    )\n  }\n  return result\n}\n\nexport function toValidAssetId(\n  name: string,\n  type: 'component' | 'directive' | 'filter',\n): string {\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString()\n  })}`\n}\n\n// Check if a node contains expressions that reference current context scope ids\nexport function hasScopeRef(\n  node:\n    | TemplateChildNode\n    | IfBranchNode\n    | ExpressionNode\n    | CacheExpression\n    | undefined,\n  ids: TransformContext['identifiers'],\n): boolean {\n  if (!node || Object.keys(ids).length === 0) {\n    return false\n  }\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i]\n        if (\n          p.type === NodeTypes.DIRECTIVE &&\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\n        ) {\n          return true\n        }\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.FOR:\n      if (hasScopeRef(node.source, ids)) {\n        return true\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.IF:\n      return node.branches.some(b => hasScopeRef(b, ids))\n    case NodeTypes.IF_BRANCH:\n      if (hasScopeRef(node.condition, ids)) {\n        return true\n      }\n      return node.children.some(c => hasScopeRef(c, ids))\n    case NodeTypes.SIMPLE_EXPRESSION:\n      return (\n        !node.isStatic &&\n        isSimpleIdentifier(node.content) &&\n        !!ids[node.content]\n      )\n    case NodeTypes.COMPOUND_EXPRESSION:\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\n    case NodeTypes.INTERPOLATION:\n    case NodeTypes.TEXT_CALL:\n      return hasScopeRef(node.content, ids)\n    case NodeTypes.TEXT:\n    case NodeTypes.COMMENT:\n    case NodeTypes.JS_CACHE_EXPRESSION:\n      return false\n    default:\n      if (__DEV__) {\n        const exhaustiveCheck: never = node\n        exhaustiveCheck\n      }\n      return false\n  }\n}\n\nexport function getMemoedVNodeCall(\n  node: BlockCodegenNode | MemoExpression,\n): VNodeCall | RenderSlotCall {\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns as VNodeCall\n  } else {\n    return node\n  }\n}\n\nexport const forAliasRE: RegExp = /([\\s\\S]*?)\\s+(?:in|of)\\s+(\\S[\\s\\S]*)/\n", "// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => Promise<void>} AsyncHandler */\n\nclass AsyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {AsyncHandler} enter\n\t * @param {AsyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {AsyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {AsyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync visit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<BaseNode>}\n */\nasync function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n\nexport { asyncWalk, walk };\n", "// should only use types from @babel/types\n// do not import runtime methods\nimport type {\n  BlockStatement,\n  ForInStatement,\n  ForOfStatement,\n  ForStatement,\n  Function,\n  Identifier,\n  Node,\n  ObjectProperty,\n  Program,\n} from '@babel/types'\nimport { walk } from 'estree-walker'\n\n/**\n * Return value indicates whether the AST walked can be a constant\n */\nexport function walkIdentifiers(\n  root: Node,\n  onIdentifier: (\n    node: Identifier,\n    parent: Node | null,\n    parentStack: Node[],\n    isReference: boolean,\n    isLocal: boolean,\n  ) => void,\n  includeAll = false,\n  parentStack: Node[] = [],\n  knownIds: Record<string, number> = Object.create(null),\n): void {\n  if (__BROWSER__) {\n    return\n  }\n\n  const rootExp =\n    root.type === 'Program'\n      ? root.body[0].type === 'ExpressionStatement' && root.body[0].expression\n      : root\n\n  walk(root, {\n    enter(node: Node & { scopeIds?: Set<string> }, parent: Node | null) {\n      parent && parentStack.push(parent)\n      if (\n        parent &&\n        parent.type.startsWith('TS') &&\n        !TS_NODE_TYPES.includes(parent.type)\n      ) {\n        return this.skip()\n      }\n      if (node.type === 'Identifier') {\n        const isLocal = !!knownIds[node.name]\n        const isRefed = isReferencedIdentifier(node, parent, parentStack)\n        if (includeAll || (isRefed && !isLocal)) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal)\n        }\n      } else if (\n        node.type === 'ObjectProperty' &&\n        // eslint-disable-next-line no-restricted-syntax\n        parent?.type === 'ObjectPattern'\n      ) {\n        // mark property in destructure pattern\n        ;(node as any).inPattern = true\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach(id => markKnownIds(id, knownIds))\n        } else {\n          // walk function expressions and add its arguments to known identifiers\n          // so that we don't prefix them\n          walkFunctionParams(node, id =>\n            markScopeIdentifier(node, id, knownIds),\n          )\n        }\n      } else if (node.type === 'BlockStatement') {\n        if (node.scopeIds) {\n          node.scopeIds.forEach(id => markKnownIds(id, knownIds))\n        } else {\n          // #3445 record block-level local variables\n          walkBlockDeclarations(node, id =>\n            markScopeIdentifier(node, id, knownIds),\n          )\n        }\n      } else if (node.type === 'CatchClause' && node.param) {\n        for (const id of extractIdentifiers(node.param)) {\n          markScopeIdentifier(node, id, knownIds)\n        }\n      } else if (isForStatement(node)) {\n        walkForStatement(node, false, id =>\n          markScopeIdentifier(node, id, knownIds),\n        )\n      }\n    },\n    leave(node: Node & { scopeIds?: Set<string> }, parent: Node | null) {\n      parent && parentStack.pop()\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--\n          if (knownIds[id] === 0) {\n            delete knownIds[id]\n          }\n        }\n      }\n    },\n  })\n}\n\nexport function isReferencedIdentifier(\n  id: Identifier,\n  parent: Node | null,\n  parentStack: Node[],\n): boolean {\n  if (__BROWSER__) {\n    return false\n  }\n\n  if (!parent) {\n    return true\n  }\n\n  // is a special keyword but parsed as identifier\n  if (id.name === 'arguments') {\n    return false\n  }\n\n  if (isReferenced(id, parent)) {\n    return true\n  }\n\n  // babel's isReferenced check returns false for ids being assigned to, so we\n  // need to cover those cases here\n  switch (parent.type) {\n    case 'AssignmentExpression':\n    case 'AssignmentPattern':\n      return true\n    case 'ObjectPattern':\n    case 'ArrayPattern':\n      return isInDestructureAssignment(parent, parentStack)\n  }\n\n  return false\n}\n\nexport function isInDestructureAssignment(\n  parent: Node,\n  parentStack: Node[],\n): boolean {\n  if (\n    parent &&\n    (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')\n  ) {\n    let i = parentStack.length\n    while (i--) {\n      const p = parentStack[i]\n      if (p.type === 'AssignmentExpression') {\n        return true\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n        break\n      }\n    }\n  }\n  return false\n}\n\nexport function isInNewExpression(parentStack: Node[]): boolean {\n  let i = parentStack.length\n  while (i--) {\n    const p = parentStack[i]\n    if (p.type === 'NewExpression') {\n      return true\n    } else if (p.type !== 'MemberExpression') {\n      break\n    }\n  }\n  return false\n}\n\nexport function walkFunctionParams(\n  node: Function,\n  onIdent: (id: Identifier) => void,\n): void {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id)\n    }\n  }\n}\n\nexport function walkBlockDeclarations(\n  block: BlockStatement | Program,\n  onIdent: (node: Identifier) => void,\n): void {\n  for (const stmt of block.body) {\n    if (stmt.type === 'VariableDeclaration') {\n      if (stmt.declare) continue\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id)\n        }\n      }\n    } else if (\n      stmt.type === 'FunctionDeclaration' ||\n      stmt.type === 'ClassDeclaration'\n    ) {\n      if (stmt.declare || !stmt.id) continue\n      onIdent(stmt.id)\n    } else if (isForStatement(stmt)) {\n      walkForStatement(stmt, true, onIdent)\n    }\n  }\n}\n\nfunction isForStatement(\n  stmt: Node,\n): stmt is ForStatement | ForOfStatement | ForInStatement {\n  return (\n    stmt.type === 'ForOfStatement' ||\n    stmt.type === 'ForInStatement' ||\n    stmt.type === 'ForStatement'\n  )\n}\n\nfunction walkForStatement(\n  stmt: ForStatement | ForOfStatement | ForInStatement,\n  isVar: boolean,\n  onIdent: (id: Identifier) => void,\n) {\n  const variable = stmt.type === 'ForStatement' ? stmt.init : stmt.left\n  if (\n    variable &&\n    variable.type === 'VariableDeclaration' &&\n    (variable.kind === 'var' ? isVar : !isVar)\n  ) {\n    for (const decl of variable.declarations) {\n      for (const id of extractIdentifiers(decl.id)) {\n        onIdent(id)\n      }\n    }\n  }\n}\n\nexport function extractIdentifiers(\n  param: Node,\n  nodes: Identifier[] = [],\n): Identifier[] {\n  switch (param.type) {\n    case 'Identifier':\n      nodes.push(param)\n      break\n\n    case 'MemberExpression':\n      let object: any = param\n      while (object.type === 'MemberExpression') {\n        object = object.object\n      }\n      nodes.push(object)\n      break\n\n    case 'ObjectPattern':\n      for (const prop of param.properties) {\n        if (prop.type === 'RestElement') {\n          extractIdentifiers(prop.argument, nodes)\n        } else {\n          extractIdentifiers(prop.value, nodes)\n        }\n      }\n      break\n\n    case 'ArrayPattern':\n      param.elements.forEach(element => {\n        if (element) extractIdentifiers(element, nodes)\n      })\n      break\n\n    case 'RestElement':\n      extractIdentifiers(param.argument, nodes)\n      break\n\n    case 'AssignmentPattern':\n      extractIdentifiers(param.left, nodes)\n      break\n  }\n\n  return nodes\n}\n\nfunction markKnownIds(name: string, knownIds: Record<string, number>) {\n  if (name in knownIds) {\n    knownIds[name]++\n  } else {\n    knownIds[name] = 1\n  }\n}\n\nfunction markScopeIdentifier(\n  node: Node & { scopeIds?: Set<string> },\n  child: Identifier,\n  knownIds: Record<string, number>,\n) {\n  const { name } = child\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return\n  }\n  markKnownIds(name, knownIds)\n  ;(node.scopeIds || (node.scopeIds = new Set())).add(name)\n}\n\nexport const isFunctionType = (node: Node): node is Function => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type)\n}\n\nexport const isStaticProperty = (node: Node): node is ObjectProperty =>\n  node &&\n  (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\n  !node.computed\n\nexport const isStaticPropertyKey = (node: Node, parent: Node): boolean =>\n  isStaticProperty(parent) && parent.key === node\n\n/**\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\n * To avoid runtime dependency on @babel/types (which includes process references)\n * This file should not change very often in babel but we may need to keep it\n * up-to-date from time to time.\n *\n * https://github.com/babel/babel/blob/main/LICENSE\n *\n */\nfunction isReferenced(node: Node, parent: Node, grandparent?: Node): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case 'MemberExpression':\n    case 'OptionalMemberExpression':\n      if (parent.property === node) {\n        return !!parent.computed\n      }\n      return parent.object === node\n\n    case 'JSXMemberExpression':\n      return parent.object === node\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case 'VariableDeclarator':\n      return parent.init === node\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case 'ArrowFunctionExpression':\n      return parent.body === node\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case 'PrivateName':\n      return false\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case 'ClassMethod':\n    case 'ClassPrivateMethod':\n    case 'ObjectMethod':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n      return false\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case 'ObjectProperty':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== 'ObjectPattern'\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case 'ClassProperty':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n      return true\n    case 'ClassPrivateProperty':\n      return parent.key !== node\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case 'ClassDeclaration':\n    case 'ClassExpression':\n      return parent.superClass === node\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case 'AssignmentExpression':\n      return parent.right === node\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case 'AssignmentPattern':\n      return parent.right === node\n\n    // no: NODE: for (;;) {}\n    case 'LabeledStatement':\n      return false\n\n    // no: try {} catch (NODE) {}\n    case 'CatchClause':\n      return false\n\n    // no: function foo(...NODE) {}\n    case 'RestElement':\n      return false\n\n    case 'BreakStatement':\n    case 'ContinueStatement':\n      return false\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case 'FunctionDeclaration':\n    case 'FunctionExpression':\n      return false\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case 'ExportNamespaceSpecifier':\n    case 'ExportDefaultSpecifier':\n      return false\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case 'ExportSpecifier':\n      // @ts-expect-error\n      // eslint-disable-next-line no-restricted-syntax\n      if (grandparent?.source) {\n        return false\n      }\n      return parent.local === node\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case 'ImportDefaultSpecifier':\n    case 'ImportNamespaceSpecifier':\n    case 'ImportSpecifier':\n      return false\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case 'ImportAttribute':\n      return false\n\n    // no: <div NODE=\"foo\" />\n    case 'JSXAttribute':\n      return false\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case 'ObjectPattern':\n    case 'ArrayPattern':\n      return false\n\n    // no: new.NODE\n    // no: NODE.target\n    case 'MetaProperty':\n      return false\n\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case 'ObjectTypeProperty':\n      return parent.key !== node\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case 'TSEnumMember':\n      return parent.id !== node\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case 'TSPropertySignature':\n      if (parent.key === node) {\n        return !!parent.computed\n      }\n\n      return true\n  }\n\n  return true\n}\n\nexport const TS_NODE_TYPES: string[] = [\n  'TSAsExpression', // foo as number\n  'TSTypeAssertion', // (<number>foo)\n  'TSNonNullExpression', // foo!\n  'TSInstantiationExpression', // foo<string>\n  'TSSatisfiesExpression', // foo satisfies T\n]\n\nexport function unwrapTSNode(node: Node): Node {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode((node as any).expression)\n  } else {\n    return node\n  }\n}\n", "import {\n  type AttributeNode,\n  ConstantTypes,\n  type DirectiveNode,\n  type ElementNode,\n  ElementTypes,\n  type ForParseResult,\n  Namespaces,\n  NodeTypes,\n  type RootNode,\n  type SimpleExpressionNode,\n  type SourceLocation,\n  type TemplateChildNode,\n  createRoot,\n  createSimpleExpression,\n} from './ast'\nimport type { ParserOptions } from './options'\nimport Tokenizer, {\n  CharCodes,\n  ParseMode,\n  QuoteType,\n  Sequences,\n  State,\n  isWhitespace,\n  toCharCodes,\n} from './tokenizer'\nimport {\n  type CompilerCompatOptions,\n  CompilerDeprecationTypes,\n  checkCompatEnabled,\n  isCompatEnabled,\n  warnDeprecation,\n} from './compat/compatConfig'\nimport { NO, extend } from '@vue/shared'\nimport {\n  ErrorCodes,\n  createCompilerError,\n  defaultOnError,\n  defaultOnWarn,\n} from './errors'\nimport {\n  forAliasRE,\n  isCoreComponent,\n  isSimpleIdentifier,\n  isStaticArgOf,\n} from './utils'\nimport { decodeHTML } from 'entities/lib/decode.js'\nimport {\n  type ParserOptions as BabelOptions,\n  parse,\n  parseExpression,\n} from '@babel/parser'\n\ntype OptionalOptions =\n  | 'decodeEntities'\n  | 'whitespace'\n  | 'isNativeTag'\n  | 'isBuiltInComponent'\n  | 'expressionPlugins'\n  | keyof CompilerCompatOptions\n\nexport type MergedParserOptions = Omit<\n  Required<ParserOptions>,\n  OptionalOptions\n> &\n  Pick<ParserOptions, OptionalOptions>\n\nexport const defaultParserOptions: MergedParserOptions = {\n  parseMode: 'base',\n  ns: Namespaces.HTML,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => Namespaces.HTML,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isIgnoreNewlineTag: NO,\n  isCustomElement: NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: __DEV__,\n  prefixIdentifiers: false,\n}\n\nlet currentOptions: MergedParserOptions = defaultParserOptions\nlet currentRoot: RootNode | null = null\n\n// parser state\nlet currentInput = ''\nlet currentOpenTag: ElementNode | null = null\nlet currentProp: AttributeNode | DirectiveNode | null = null\nlet currentAttrValue = ''\nlet currentAttrStartIndex = -1\nlet currentAttrEndIndex = -1\nlet inPre = 0\nlet inVPre = false\nlet currentVPreBoundary: ElementNode | null = null\nconst stack: ElementNode[] = []\n\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end)\n  },\n\n  ontextentity(char, start, end) {\n    onText(char, start, end)\n  },\n\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end)\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length\n    let innerEnd = end - tokenizer.delimiterClose.length\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--\n    }\n    let exp = getSlice(innerStart, innerEnd)\n    // decode entities for backwards compat\n    if (exp.includes('&')) {\n      if (__BROWSER__) {\n        exp = currentOptions.decodeEntities!(exp, false)\n      } else {\n        exp = decodeHTML(exp)\n      }\n    }\n    addNode({\n      type: NodeTypes.INTERPOLATION,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end),\n    })\n  },\n\n  onopentagname(start, end) {\n    const name = getSlice(start, end)\n    currentOpenTag = {\n      type: NodeTypes.ELEMENT,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: ElementTypes.ELEMENT, // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: undefined,\n    }\n  },\n\n  onopentagend(end) {\n    endOpenTag(end)\n  },\n\n  onclosetag(start, end) {\n    const name = getSlice(start, end)\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i]\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true\n          if (i > 0) {\n            emitError(ErrorCodes.X_MISSING_END_TAG, stack[0].loc.start.offset)\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift()!\n            onCloseTag(el, end, j < i)\n          }\n          break\n        }\n      }\n      if (!found) {\n        emitError(ErrorCodes.X_INVALID_END_TAG, backTrack(start, CharCodes.Lt))\n      }\n    }\n  },\n\n  onselfclosingtag(end) {\n    const name = currentOpenTag!.tag\n    currentOpenTag!.isSelfClosing = true\n    endOpenTag(end)\n    if (stack[0] && stack[0].tag === name) {\n      onCloseTag(stack.shift()!, end)\n    }\n  },\n\n  onattribname(start, end) {\n    // plain attribute\n    currentProp = {\n      type: NodeTypes.ATTRIBUTE,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: undefined,\n      loc: getLoc(start),\n    }\n  },\n\n  ondirname(start, end) {\n    const raw = getSlice(start, end)\n    const name =\n      raw === '.' || raw === ':'\n        ? 'bind'\n        : raw === '@'\n          ? 'on'\n          : raw === '#'\n            ? 'slot'\n            : raw.slice(2)\n\n    if (!inVPre && name === '') {\n      emitError(ErrorCodes.X_MISSING_DIRECTIVE_NAME, start)\n    }\n\n    if (inVPre || name === '') {\n      currentProp = {\n        type: NodeTypes.ATTRIBUTE,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: undefined,\n        loc: getLoc(start),\n      }\n    } else {\n      currentProp = {\n        type: NodeTypes.DIRECTIVE,\n        name,\n        rawName: raw,\n        exp: undefined,\n        arg: undefined,\n        modifiers: raw === '.' ? [createSimpleExpression('prop')] : [],\n        loc: getLoc(start),\n      }\n      if (name === 'pre') {\n        inVPre = tokenizer.inVPre = true\n        currentVPreBoundary = currentOpenTag\n        // convert dirs before this one to attributes\n        const props = currentOpenTag!.props\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === NodeTypes.DIRECTIVE) {\n            props[i] = dirToAttr(props[i] as DirectiveNode)\n          }\n        }\n      }\n    }\n  },\n\n  ondirarg(start, end) {\n    if (start === end) return\n    const arg = getSlice(start, end)\n    if (inVPre) {\n      ;(currentProp as AttributeNode).name += arg\n      setLocEnd((currentProp as AttributeNode).nameLoc, end)\n    } else {\n      const isStatic = arg[0] !== `[`\n      ;(currentProp as DirectiveNode).arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? ConstantTypes.CAN_STRINGIFY : ConstantTypes.NOT_CONSTANT,\n      )\n    }\n  },\n\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end)\n    if (inVPre) {\n      ;(currentProp as AttributeNode).name += '.' + mod\n      setLocEnd((currentProp as AttributeNode).nameLoc, end)\n    } else if ((currentProp as DirectiveNode).name === 'slot') {\n      // slot has no modifiers, special case for edge cases like\n      // https://github.com/vuejs/language-tools/issues/2710\n      const arg = (currentProp as DirectiveNode).arg\n      if (arg) {\n        ;(arg as SimpleExpressionNode).content += '.' + mod\n        setLocEnd(arg.loc, end)\n      }\n    } else {\n      const exp = createSimpleExpression(mod, true, getLoc(start, end))\n      ;(currentProp as DirectiveNode).modifiers.push(exp)\n    }\n  },\n\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end)\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start\n    currentAttrEndIndex = end\n  },\n\n  onattribentity(char, start, end) {\n    currentAttrValue += char\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start\n    currentAttrEndIndex = end\n  },\n\n  onattribnameend(end) {\n    const start = currentProp!.loc.start.offset\n    const name = getSlice(start, end)\n    if (currentProp!.type === NodeTypes.DIRECTIVE) {\n      currentProp!.rawName = name\n    }\n    // check duplicate attrs\n    if (\n      currentOpenTag!.props.some(\n        p => (p.type === NodeTypes.DIRECTIVE ? p.rawName : p.name) === name,\n      )\n    ) {\n      emitError(ErrorCodes.DUPLICATE_ATTRIBUTE, start)\n    }\n  },\n\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      // finalize end pos\n      setLocEnd(currentProp.loc, end)\n\n      if (quote !== QuoteType.NoValue) {\n        if (__BROWSER__ && currentAttrValue.includes('&')) {\n          currentAttrValue = currentOptions.decodeEntities!(\n            currentAttrValue,\n            true,\n          )\n        }\n\n        if (currentProp.type === NodeTypes.ATTRIBUTE) {\n          // assign value\n\n          // condense whitespaces in class\n          if (currentProp!.name === 'class') {\n            currentAttrValue = condense(currentAttrValue).trim()\n          }\n\n          if (quote === QuoteType.Unquoted && !currentAttrValue) {\n            emitError(ErrorCodes.MISSING_ATTRIBUTE_VALUE, end)\n          }\n\n          currentProp!.value = {\n            type: NodeTypes.TEXT,\n            content: currentAttrValue,\n            loc:\n              quote === QuoteType.Unquoted\n                ? getLoc(currentAttrStartIndex, currentAttrEndIndex)\n                : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1),\n          }\n          if (\n            tokenizer.inSFCRoot &&\n            currentOpenTag.tag === 'template' &&\n            currentProp.name === 'lang' &&\n            currentAttrValue &&\n            currentAttrValue !== 'html'\n          ) {\n            // SFC root template with preprocessor lang, force tokenizer to\n            // RCDATA mode\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0)\n          }\n        } else {\n          // directive\n          let expParseMode = ExpParseMode.Normal\n          if (!__BROWSER__) {\n            if (currentProp.name === 'for') {\n              expParseMode = ExpParseMode.Skip\n            } else if (currentProp.name === 'slot') {\n              expParseMode = ExpParseMode.Params\n            } else if (\n              currentProp.name === 'on' &&\n              currentAttrValue.includes(';')\n            ) {\n              expParseMode = ExpParseMode.Statements\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            ConstantTypes.NOT_CONSTANT,\n            expParseMode,\n          )\n          if (currentProp.name === 'for') {\n            currentProp.forParseResult = parseForExpression(currentProp.exp)\n          }\n          // 2.x compat v-bind:foo.sync -> v-model:foo\n          let syncIndex = -1\n          if (\n            __COMPAT__ &&\n            currentProp.name === 'bind' &&\n            (syncIndex = currentProp.modifiers.findIndex(\n              mod => mod.content === 'sync',\n            )) > -1 &&\n            checkCompatEnabled(\n              CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\n              currentOptions,\n              currentProp.loc,\n              currentProp.rawName,\n            )\n          ) {\n            currentProp.name = 'model'\n            currentProp.modifiers.splice(syncIndex, 1)\n          }\n        }\n      }\n      if (\n        currentProp.type !== NodeTypes.DIRECTIVE ||\n        currentProp.name !== 'pre'\n      ) {\n        currentOpenTag.props.push(currentProp)\n      }\n    }\n    currentAttrValue = ''\n    currentAttrStartIndex = currentAttrEndIndex = -1\n  },\n\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: NodeTypes.COMMENT,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3),\n      })\n    }\n  },\n\n  onend() {\n    const end = currentInput.length\n    // EOF ERRORS\n    if ((__DEV__ || !__BROWSER__) && tokenizer.state !== State.Text) {\n      switch (tokenizer.state) {\n        case State.BeforeTagName:\n        case State.BeforeClosingTagName:\n          emitError(ErrorCodes.EOF_BEFORE_TAG_NAME, end)\n          break\n        case State.Interpolation:\n        case State.InterpolationClose:\n          emitError(\n            ErrorCodes.X_MISSING_INTERPOLATION_END,\n            tokenizer.sectionStart,\n          )\n          break\n        case State.InCommentLike:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(ErrorCodes.EOF_IN_CDATA, end)\n          } else {\n            emitError(ErrorCodes.EOF_IN_COMMENT, end)\n          }\n          break\n        case State.InTagName:\n        case State.InSelfClosingTag:\n        case State.InClosingTagName:\n        case State.BeforeAttrName:\n        case State.InAttrName:\n        case State.InDirName:\n        case State.InDirArg:\n        case State.InDirDynamicArg:\n        case State.InDirModifier:\n        case State.AfterAttrName:\n        case State.BeforeAttrValue:\n        case State.InAttrValueDq: // \"\n        case State.InAttrValueSq: // '\n        case State.InAttrValueNq:\n          emitError(ErrorCodes.EOF_IN_TAG, end)\n          break\n        default:\n          // console.log(tokenizer.state)\n          break\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1)\n      emitError(ErrorCodes.X_MISSING_END_TAG, stack[index].loc.start.offset)\n    }\n  },\n\n  oncdata(start, end) {\n    if (stack[0].ns !== Namespaces.HTML) {\n      onText(getSlice(start, end), start, end)\n    } else {\n      emitError(ErrorCodes.CDATA_IN_HTML_CONTENT, start - 9)\n    }\n  },\n\n  onprocessinginstruction(start) {\n    // ignore as we do not have runtime handling for this, only check error\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === Namespaces.HTML) {\n      emitError(\n        ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\n        start - 1,\n      )\n    }\n  },\n})\n\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\nconst stripParensRE = /^\\(|\\)$/g\n\nfunction parseForExpression(\n  input: SimpleExpressionNode,\n): ForParseResult | undefined {\n  const loc = input.loc\n  const exp = input.content\n  const inMatch = exp.match(forAliasRE)\n  if (!inMatch) return\n\n  const [, LHS, RHS] = inMatch\n\n  const createAliasExpression = (\n    content: string,\n    offset: number,\n    asParam = false,\n  ) => {\n    const start = loc.start.offset + offset\n    const end = start + content.length\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      ConstantTypes.NOT_CONSTANT,\n      asParam ? ExpParseMode.Params : ExpParseMode.Normal,\n    )\n  }\n\n  const result: ForParseResult = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: undefined,\n    key: undefined,\n    index: undefined,\n    finalized: false,\n  }\n\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\n  const trimmedOffset = LHS.indexOf(valueContent)\n\n  const iteratorMatch = valueContent.match(forIteratorRE)\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\n\n    const keyContent = iteratorMatch[1].trim()\n    let keyOffset: number | undefined\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\n      result.key = createAliasExpression(keyContent, keyOffset, true)\n    }\n\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim()\n\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key\n              ? keyOffset! + keyContent.length\n              : trimmedOffset + valueContent.length,\n          ),\n          true,\n        )\n      }\n    }\n  }\n\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true)\n  }\n\n  return result\n}\n\nfunction getSlice(start: number, end: number) {\n  return currentInput.slice(start, end)\n}\n\nfunction endOpenTag(end: number) {\n  if (tokenizer.inSFCRoot) {\n    // in SFC mode, generate locations for root-level tags' inner content.\n    currentOpenTag!.innerLoc = getLoc(end + 1, end + 1)\n  }\n  addNode(currentOpenTag!)\n  const { tag, ns } = currentOpenTag!\n  if (ns === Namespaces.HTML && currentOptions.isPreTag(tag)) {\n    inPre++\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag!, end)\n  } else {\n    stack.unshift(currentOpenTag!)\n    if (ns === Namespaces.SVG || ns === Namespaces.MATH_ML) {\n      tokenizer.inXML = true\n    }\n  }\n  currentOpenTag = null\n}\n\nfunction onText(content: string, start: number, end: number) {\n  if (__BROWSER__) {\n    const tag = stack[0] && stack[0].tag\n    if (tag !== 'script' && tag !== 'style' && content.includes('&')) {\n      content = currentOptions.decodeEntities!(content, false)\n    }\n  }\n  const parent = stack[0] || currentRoot\n  const lastNode = parent.children[parent.children.length - 1]\n  if (lastNode && lastNode.type === NodeTypes.TEXT) {\n    // merge\n    lastNode.content += content\n    setLocEnd(lastNode.loc, end)\n  } else {\n    parent.children.push({\n      type: NodeTypes.TEXT,\n      content,\n      loc: getLoc(start, end),\n    })\n  }\n}\n\nfunction onCloseTag(el: ElementNode, end: number, isImplied = false) {\n  // attach end position\n  if (isImplied) {\n    // implied close, end should be backtracked to close\n    setLocEnd(el.loc, backTrack(end, CharCodes.Lt))\n  } else {\n    setLocEnd(el.loc, lookAhead(end, CharCodes.Gt) + 1)\n  }\n\n  if (tokenizer.inSFCRoot) {\n    // SFC root tag, resolve inner end\n    if (el.children.length) {\n      el.innerLoc!.end = extend({}, el.children[el.children.length - 1].loc.end)\n    } else {\n      el.innerLoc!.end = extend({}, el.innerLoc!.start)\n    }\n    el.innerLoc!.source = getSlice(\n      el.innerLoc!.start.offset,\n      el.innerLoc!.end.offset,\n    )\n  }\n\n  // refine element type\n  const { tag, ns, children } = el\n  if (!inVPre) {\n    if (tag === 'slot') {\n      el.tagType = ElementTypes.SLOT\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = ElementTypes.TEMPLATE\n    } else if (isComponent(el)) {\n      el.tagType = ElementTypes.COMPONENT\n    }\n  }\n\n  // whitespace management\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(children, tag)\n  }\n\n  if (ns === Namespaces.HTML && currentOptions.isIgnoreNewlineTag(tag)) {\n    // remove leading newline for <textarea> and <pre> per html spec\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inbody\n    const first = children[0]\n    if (first && first.type === NodeTypes.TEXT) {\n      first.content = first.content.replace(/^\\r?\\n/, '')\n    }\n  }\n\n  if (ns === Namespaces.HTML && currentOptions.isPreTag(tag)) {\n    inPre--\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false\n    currentVPreBoundary = null\n  }\n  if (\n    tokenizer.inXML &&\n    (stack[0] ? stack[0].ns : currentOptions.ns) === Namespaces.HTML\n  ) {\n    tokenizer.inXML = false\n  }\n\n  // 2.x compat / deprecation checks\n  if (__COMPAT__) {\n    const props = el.props\n    if (\n      __DEV__ &&\n      isCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\n        currentOptions,\n      )\n    ) {\n      let hasIf = false\n      let hasFor = false\n      for (let i = 0; i < props.length; i++) {\n        const p = props[i]\n        if (p.type === NodeTypes.DIRECTIVE) {\n          if (p.name === 'if') {\n            hasIf = true\n          } else if (p.name === 'for') {\n            hasFor = true\n          }\n        }\n        if (hasIf && hasFor) {\n          warnDeprecation(\n            CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\n            currentOptions,\n            el.loc,\n          )\n          break\n        }\n      }\n    }\n\n    if (\n      !tokenizer.inSFCRoot &&\n      isCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\n        currentOptions,\n      ) &&\n      el.tag === 'template' &&\n      !isFragmentTemplate(el)\n    ) {\n      __DEV__ &&\n        warnDeprecation(\n          CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\n          currentOptions,\n          el.loc,\n        )\n      // unwrap\n      const parent = stack[0] || currentRoot\n      const index = parent.children.indexOf(el)\n      parent.children.splice(index, 1, ...el.children)\n    }\n\n    const inlineTemplateProp = props.find(\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template',\n    ) as AttributeNode\n    if (\n      inlineTemplateProp &&\n      checkCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\n        currentOptions,\n        inlineTemplateProp.loc,\n      ) &&\n      el.children.length\n    ) {\n      inlineTemplateProp.value = {\n        type: NodeTypes.TEXT,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset,\n        ),\n        loc: inlineTemplateProp.loc,\n      }\n    }\n  }\n}\n\nfunction lookAhead(index: number, c: number) {\n  let i = index\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++\n  return i\n}\n\nfunction backTrack(index: number, c: number) {\n  let i = index\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--\n  return i\n}\n\nconst specialTemplateDir = new Set(['if', 'else', 'else-if', 'for', 'slot'])\nfunction isFragmentTemplate({ tag, props }: ElementNode): boolean {\n  if (tag === 'template') {\n    for (let i = 0; i < props.length; i++) {\n      if (\n        props[i].type === NodeTypes.DIRECTIVE &&\n        specialTemplateDir.has((props[i] as DirectiveNode).name)\n      ) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction isComponent({ tag, props }: ElementNode): boolean {\n  if (currentOptions.isCustomElement(tag)) {\n    return false\n  }\n  if (\n    tag === 'component' ||\n    isUpperCase(tag.charCodeAt(0)) ||\n    isCoreComponent(tag) ||\n    (currentOptions.isBuiltInComponent &&\n      currentOptions.isBuiltInComponent(tag)) ||\n    (currentOptions.isNativeTag && !currentOptions.isNativeTag(tag))\n  ) {\n    return true\n  }\n  // at this point the tag should be a native tag, but check for potential \"is\"\n  // casting\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (p.name === 'is' && p.value) {\n        if (p.value.content.startsWith('vue:')) {\n          return true\n        } else if (\n          __COMPAT__ &&\n          checkCompatEnabled(\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n            currentOptions,\n            p.loc,\n          )\n        ) {\n          return true\n        }\n      }\n    } else if (\n      __COMPAT__ &&\n      // :is on plain element - only treat as component in compat mode\n      p.name === 'bind' &&\n      isStaticArgOf(p.arg, 'is') &&\n      checkCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n        currentOptions,\n        p.loc,\n      )\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction isUpperCase(c: number) {\n  return c > 64 && c < 91\n}\n\nconst windowsNewlineRE = /\\r\\n/g\nfunction condenseWhitespace(\n  nodes: TemplateChildNode[],\n  tag?: string,\n): TemplateChildNode[] {\n  const shouldCondense = currentOptions.whitespace !== 'preserve'\n  let removedWhitespace = false\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i]\n    if (node.type === NodeTypes.TEXT) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = nodes[i - 1] && nodes[i - 1].type\n          const next = nodes[i + 1] && nodes[i + 1].type\n          // Remove if:\n          // - the whitespace is the first or last node, or:\n          // - (condense mode) the whitespace is between two comments, or:\n          // - (condense mode) the whitespace is between comment and element, or:\n          // - (condense mode) the whitespace is between two elements AND contains newline\n          if (\n            !prev ||\n            !next ||\n            (shouldCondense &&\n              ((prev === NodeTypes.COMMENT &&\n                (next === NodeTypes.COMMENT || next === NodeTypes.ELEMENT)) ||\n                (prev === NodeTypes.ELEMENT &&\n                  (next === NodeTypes.COMMENT ||\n                    (next === NodeTypes.ELEMENT &&\n                      hasNewlineChar(node.content))))))\n          ) {\n            removedWhitespace = true\n            nodes[i] = null as any\n          } else {\n            // Otherwise, the whitespace is condensed into a single space\n            node.content = ' '\n          }\n        } else if (shouldCondense) {\n          // in condense mode, consecutive whitespaces in text are condensed\n          // down to a single space.\n          node.content = condense(node.content)\n        }\n      } else {\n        // #6410 normalize windows newlines in <pre>:\n        // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\n        // in the DOM\n        node.content = node.content.replace(windowsNewlineRE, '\\n')\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\n}\n\nfunction isAllWhitespace(str: string) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction hasNewlineChar(str: string) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i)\n    if (c === CharCodes.NewLine || c === CharCodes.CarriageReturn) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction condense(str: string) {\n  let ret = ''\n  let prevCharIsWhitespace = false\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += ' '\n        prevCharIsWhitespace = true\n      }\n    } else {\n      ret += str[i]\n      prevCharIsWhitespace = false\n    }\n  }\n  return ret\n}\n\nfunction addNode(node: TemplateChildNode) {\n  ;(stack[0] || currentRoot).children.push(node)\n}\n\nfunction getLoc(start: number, end?: number): SourceLocation {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end),\n  }\n}\n\nexport function cloneLoc(loc: SourceLocation): SourceLocation {\n  return getLoc(loc.start.offset, loc.end.offset)\n}\n\nfunction setLocEnd(loc: SourceLocation, end: number) {\n  loc.end = tokenizer.getPos(end)\n  loc.source = getSlice(loc.start.offset, end)\n}\n\nfunction dirToAttr(dir: DirectiveNode): AttributeNode {\n  const attr: AttributeNode = {\n    type: NodeTypes.ATTRIBUTE,\n    name: dir.rawName!,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName!.length,\n    ),\n    value: undefined,\n    loc: dir.loc,\n  }\n  if (dir.exp) {\n    // account for quotes\n    const loc = dir.exp.loc\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--\n      loc.start.column--\n      loc.end.offset++\n      loc.end.column++\n    }\n    attr.value = {\n      type: NodeTypes.TEXT,\n      content: (dir.exp as SimpleExpressionNode).content,\n      loc,\n    }\n  }\n  return attr\n}\n\nenum ExpParseMode {\n  Normal,\n  Params,\n  Statements,\n  Skip,\n}\n\nfunction createExp(\n  content: SimpleExpressionNode['content'],\n  isStatic: SimpleExpressionNode['isStatic'] = false,\n  loc: SourceLocation,\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT,\n  parseMode = ExpParseMode.Normal,\n) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType)\n  if (\n    !__BROWSER__ &&\n    !isStatic &&\n    currentOptions.prefixIdentifiers &&\n    parseMode !== ExpParseMode.Skip &&\n    content.trim()\n  ) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null // fast path\n      return exp\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins\n      const options: BabelOptions = {\n        plugins: plugins ? [...plugins, 'typescript'] : ['typescript'],\n      }\n      if (parseMode === ExpParseMode.Statements) {\n        // v-on with multi-inline-statements, pad 1 char\n        exp.ast = parse(` ${content} `, options).program\n      } else if (parseMode === ExpParseMode.Params) {\n        exp.ast = parseExpression(`(${content})=>{}`, options)\n      } else {\n        // normal exp, wrap with parens\n        exp.ast = parseExpression(`(${content})`, options)\n      }\n    } catch (e: any) {\n      exp.ast = false // indicate an error\n      emitError(ErrorCodes.X_INVALID_EXPRESSION, loc.start.offset, e.message)\n    }\n  }\n  return exp\n}\n\nfunction emitError(code: ErrorCodes, index: number, message?: string) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), undefined, message),\n  )\n}\n\nfunction reset() {\n  tokenizer.reset()\n  currentOpenTag = null\n  currentProp = null\n  currentAttrValue = ''\n  currentAttrStartIndex = -1\n  currentAttrEndIndex = -1\n  stack.length = 0\n}\n\nexport function baseParse(input: string, options?: ParserOptions): RootNode {\n  reset()\n  currentInput = input\n  currentOptions = extend({}, defaultParserOptions)\n\n  if (options) {\n    let key: keyof ParserOptions\n    for (key in options) {\n      if (options[key] != null) {\n        // @ts-expect-error\n        currentOptions[key] = options[key]\n      }\n    }\n  }\n\n  if (__DEV__) {\n    if (!__BROWSER__ && currentOptions.decodeEntities) {\n      console.warn(\n        `[@vue/compiler-core] decodeEntities option is passed but will be ` +\n          `ignored in non-browser builds.`,\n      )\n    } else if (__BROWSER__ && !currentOptions.decodeEntities) {\n      throw new Error(\n        `[@vue/compiler-core] decodeEntities option is required in browser builds.`,\n      )\n    }\n  }\n\n  tokenizer.mode =\n    currentOptions.parseMode === 'html'\n      ? ParseMode.HTML\n      : currentOptions.parseMode === 'sfc'\n        ? ParseMode.SFC\n        : ParseMode.BASE\n\n  tokenizer.inXML =\n    currentOptions.ns === Namespaces.SVG ||\n    currentOptions.ns === Namespaces.MATH_ML\n\n  const delimiters = options && options.delimiters\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0])\n    tokenizer.delimiterClose = toCharCodes(delimiters[1])\n  }\n\n  const root = (currentRoot = createRoot([], input))\n  tokenizer.parse(currentInput)\n  root.loc = getLoc(0, input.length)\n  root.children = condenseWhitespace(root.children)\n  currentRoot = null\n  return root\n}\n", "import {\n  type CacheExpression,\n  type CallExpression,\n  type ComponentNode,\n  ConstantTypes,\n  ElementTypes,\n  type ExpressionNode,\n  type JSChildNode,\n  NodeTypes,\n  type ParentNode,\n  type PlainElementNode,\n  type RootNode,\n  type SimpleExpressionNode,\n  type SlotFunctionExpression,\n  type TemplateChildNode,\n  type TemplateNode,\n  type TextCallNode,\n  type VNodeCall,\n  createArrayExpression,\n  getVNodeBlockHelper,\n  getVNodeHelper,\n} from '../ast'\nimport type { TransformContext } from '../transform'\nimport { PatchFlags, isArray, isString, isSymbol } from '@vue/shared'\nimport { findDir, isSlotOutlet } from '../utils'\nimport {\n  GUARD_REACTIVE_PROPS,\n  NORMALIZE_CLASS,\n  NORMALIZE_PROPS,\n  NORMALIZE_STYLE,\n  OPEN_BLOCK,\n} from '../runtimeHelpers'\n\nexport function cacheStatic(root: RootNode, context: TransformContext): void {\n  walk(\n    root,\n    undefined,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0]),\n  )\n}\n\nexport function isSingleElementRoot(\n  root: RootNode,\n  child: TemplateChildNode,\n): child is PlainElementNode | ComponentNode | TemplateNode {\n  const { children } = root\n  return (\n    children.length === 1 &&\n    child.type === NodeTypes.ELEMENT &&\n    !isSlotOutlet(child)\n  )\n}\n\nfunction walk(\n  node: ParentNode,\n  parent: ParentNode | undefined,\n  context: TransformContext,\n  doNotHoistNode: boolean = false,\n  inFor = false,\n) {\n  const { children } = node\n  const toCache: (PlainElementNode | TextCallNode)[] = []\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    // only plain elements & text calls are eligible for caching.\n    if (\n      child.type === NodeTypes.ELEMENT &&\n      child.tagType === ElementTypes.ELEMENT\n    ) {\n      const constantType = doNotHoistNode\n        ? ConstantTypes.NOT_CONSTANT\n        : getConstantType(child, context)\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\n        if (constantType >= ConstantTypes.CAN_CACHE) {\n          ;(child.codegenNode as VNodeCall).patchFlag = PatchFlags.CACHED\n          toCache.push(child)\n          continue\n        }\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        const codegenNode = child.codegenNode!\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\n          const flag = codegenNode.patchFlag\n          if (\n            (flag === undefined ||\n              flag === PatchFlags.NEED_PATCH ||\n              flag === PatchFlags.TEXT) &&\n            getGeneratedPropsConstantType(child, context) >=\n              ConstantTypes.CAN_CACHE\n          ) {\n            const props = getNodeProps(child)\n            if (props) {\n              codegenNode.props = context.hoist(props)\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\n          }\n        }\n      }\n    } else if (child.type === NodeTypes.TEXT_CALL) {\n      const constantType = doNotHoistNode\n        ? ConstantTypes.NOT_CONSTANT\n        : getConstantType(child, context)\n      if (constantType >= ConstantTypes.CAN_CACHE) {\n        toCache.push(child)\n        continue\n      }\n    }\n\n    // walk further\n    if (child.type === NodeTypes.ELEMENT) {\n      const isComponent = child.tagType === ElementTypes.COMPONENT\n      if (isComponent) {\n        context.scopes.vSlot++\n      }\n      walk(child, node, context, false, inFor)\n      if (isComponent) {\n        context.scopes.vSlot--\n      }\n    } else if (child.type === NodeTypes.FOR) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child, node, context, child.children.length === 1, true)\n    } else if (child.type === NodeTypes.IF) {\n      for (let i = 0; i < child.branches.length; i++) {\n        // Do not hoist v-if single child because it has to be a block\n        walk(\n          child.branches[i],\n          node,\n          context,\n          child.branches[i].children.length === 1,\n          inFor,\n        )\n      }\n    }\n  }\n\n  let cachedAsArray = false\n  if (toCache.length === children.length && node.type === NodeTypes.ELEMENT) {\n    if (\n      node.tagType === ElementTypes.ELEMENT &&\n      node.codegenNode &&\n      node.codegenNode.type === NodeTypes.VNODE_CALL &&\n      isArray(node.codegenNode.children)\n    ) {\n      // all children were hoisted - the entire children array is cacheable.\n      node.codegenNode.children = getCacheExpression(\n        createArrayExpression(node.codegenNode.children),\n      )\n      cachedAsArray = true\n    } else if (\n      node.tagType === ElementTypes.COMPONENT &&\n      node.codegenNode &&\n      node.codegenNode.type === NodeTypes.VNODE_CALL &&\n      node.codegenNode.children &&\n      !isArray(node.codegenNode.children) &&\n      node.codegenNode.children.type === NodeTypes.JS_OBJECT_EXPRESSION\n    ) {\n      // default slot\n      const slot = getSlotNode(node.codegenNode, 'default')\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns as TemplateChildNode[]),\n        )\n        cachedAsArray = true\n      }\n    } else if (\n      node.tagType === ElementTypes.TEMPLATE &&\n      parent &&\n      parent.type === NodeTypes.ELEMENT &&\n      parent.tagType === ElementTypes.COMPONENT &&\n      parent.codegenNode &&\n      parent.codegenNode.type === NodeTypes.VNODE_CALL &&\n      parent.codegenNode.children &&\n      !isArray(parent.codegenNode.children) &&\n      parent.codegenNode.children.type === NodeTypes.JS_OBJECT_EXPRESSION\n    ) {\n      // named <template> slot\n      const slotName = findDir(node, 'slot', true)\n      const slot =\n        slotName &&\n        slotName.arg &&\n        getSlotNode(parent.codegenNode, slotName.arg)\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns as TemplateChildNode[]),\n        )\n        cachedAsArray = true\n      }\n    }\n  }\n\n  if (!cachedAsArray) {\n    for (const child of toCache) {\n      child.codegenNode = context.cache(child.codegenNode!)\n    }\n  }\n\n  function getCacheExpression(value: JSChildNode): CacheExpression {\n    const exp = context.cache(value)\n    // #6978, #7138, #7114\n    // a cached children array inside v-for can caused HMR errors since\n    // it might be mutated when mounting the first item\n    if (inFor && context.hmr) {\n      exp.needArraySpread = true\n    }\n    return exp\n  }\n\n  function getSlotNode(\n    node: VNodeCall,\n    name: string | ExpressionNode,\n  ): SlotFunctionExpression | undefined {\n    if (\n      node.children &&\n      !isArray(node.children) &&\n      node.children.type === NodeTypes.JS_OBJECT_EXPRESSION\n    ) {\n      const slot = node.children.properties.find(\n        p => p.key === name || (p.key as SimpleExpressionNode).content === name,\n      )\n      return slot && slot.value\n    }\n  }\n\n  if (toCache.length && context.transformHoist) {\n    context.transformHoist(children, context, node)\n  }\n}\n\nexport function getConstantType(\n  node: TemplateChildNode | SimpleExpressionNode | CacheExpression,\n  context: TransformContext,\n): ConstantTypes {\n  const { constantCache } = context\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      if (node.tagType !== ElementTypes.ELEMENT) {\n        return ConstantTypes.NOT_CONSTANT\n      }\n      const cached = constantCache.get(node)\n      if (cached !== undefined) {\n        return cached\n      }\n      const codegenNode = node.codegenNode!\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\n        return ConstantTypes.NOT_CONSTANT\n      }\n      if (\n        codegenNode.isBlock &&\n        node.tag !== 'svg' &&\n        node.tag !== 'foreignObject' &&\n        node.tag !== 'math'\n      ) {\n        return ConstantTypes.NOT_CONSTANT\n      }\n      if (codegenNode.patchFlag === undefined) {\n        let returnType = ConstantTypes.CAN_STRINGIFY\n\n        // Element itself has no patch flag. However we still need to check:\n\n        // 1. Even for a node with no patch flag, it is possible for it to contain\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\n        // injected keys or cached event handlers. Therefore we need to always\n        // check the codegenNode's props to be sure.\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n          return ConstantTypes.NOT_CONSTANT\n        }\n        if (generatedPropsType < returnType) {\n          returnType = generatedPropsType\n        }\n\n        // 2. its children.\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context)\n          if (childType === ConstantTypes.NOT_CONSTANT) {\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n            return ConstantTypes.NOT_CONSTANT\n          }\n          if (childType < returnType) {\n            returnType = childType\n          }\n        }\n\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n        // type, check if any of the props can cause the type to be lowered\n        // we can skip can_patch because it's guaranteed by the absence of a\n        // patchFlag.\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i]\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\n              const expType = getConstantType(p.exp, context)\n              if (expType === ConstantTypes.NOT_CONSTANT) {\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n                return ConstantTypes.NOT_CONSTANT\n              }\n              if (expType < returnType) {\n                returnType = expType\n              }\n            }\n          }\n        }\n\n        // only svg/foreignObject could be block here, however if they are\n        // static then they don't need to be blocks since there will be no\n        // nested updates.\n        if (codegenNode.isBlock) {\n          // except set custom directives.\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i]\n            if (p.type === NodeTypes.DIRECTIVE) {\n              constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n              return ConstantTypes.NOT_CONSTANT\n            }\n          }\n\n          context.removeHelper(OPEN_BLOCK)\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent),\n          )\n          codegenNode.isBlock = false\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\n        }\n\n        constantCache.set(node, returnType)\n        return returnType\n      } else {\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\n        return ConstantTypes.NOT_CONSTANT\n      }\n    case NodeTypes.TEXT:\n    case NodeTypes.COMMENT:\n      return ConstantTypes.CAN_STRINGIFY\n    case NodeTypes.IF:\n    case NodeTypes.FOR:\n    case NodeTypes.IF_BRANCH:\n      return ConstantTypes.NOT_CONSTANT\n    case NodeTypes.INTERPOLATION:\n    case NodeTypes.TEXT_CALL:\n      return getConstantType(node.content, context)\n    case NodeTypes.SIMPLE_EXPRESSION:\n      return node.constType\n    case NodeTypes.COMPOUND_EXPRESSION:\n      let returnType = ConstantTypes.CAN_STRINGIFY\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i]\n        if (isString(child) || isSymbol(child)) {\n          continue\n        }\n        const childType = getConstantType(child, context)\n        if (childType === ConstantTypes.NOT_CONSTANT) {\n          return ConstantTypes.NOT_CONSTANT\n        } else if (childType < returnType) {\n          returnType = childType\n        }\n      }\n      return returnType\n    case NodeTypes.JS_CACHE_EXPRESSION:\n      return ConstantTypes.CAN_CACHE\n    default:\n      if (__DEV__) {\n        const exhaustiveCheck: never = node\n        exhaustiveCheck\n      }\n      return ConstantTypes.NOT_CONSTANT\n  }\n}\n\nconst allowHoistedHelperSet = new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS,\n])\n\nfunction getConstantTypeOfHelperCall(\n  value: CallExpression,\n  context: TransformContext,\n): ConstantTypes {\n  if (\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\n    !isString(value.callee) &&\n    allowHoistedHelperSet.has(value.callee)\n  ) {\n    const arg = value.arguments[0] as JSChildNode\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n      return getConstantType(arg, context)\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n      return getConstantTypeOfHelperCall(arg, context)\n    }\n  }\n  return ConstantTypes.NOT_CONSTANT\n}\n\nfunction getGeneratedPropsConstantType(\n  node: PlainElementNode,\n  context: TransformContext,\n): ConstantTypes {\n  let returnType = ConstantTypes.CAN_STRINGIFY\n  const props = getNodeProps(node)\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n    const { properties } = props\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i]\n      const keyType = getConstantType(key, context)\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\n        return keyType\n      }\n      if (keyType < returnType) {\n        returnType = keyType\n      }\n      let valueType: ConstantTypes\n      if (value.type === NodeTypes.SIMPLE_EXPRESSION) {\n        valueType = getConstantType(value, context)\n      } else if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\n        // some helper calls can be hoisted,\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n        // in this case we need to respect the ConstantType of the helper's arguments\n        valueType = getConstantTypeOfHelperCall(value, context)\n      } else {\n        valueType = ConstantTypes.NOT_CONSTANT\n      }\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\n        return valueType\n      }\n      if (valueType < returnType) {\n        returnType = valueType\n      }\n    }\n  }\n  return returnType\n}\n\nfunction getNodeProps(node: PlainElementNode) {\n  const codegenNode = node.codegenNode!\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\n    return codegenNode.props\n  }\n}\n", "import type { TransformOptions } from './options'\nimport {\n  type ArrayExpression,\n  type CacheExpression,\n  ConstantTypes,\n  type DirectiveNode,\n  type ElementNode,\n  ElementTypes,\n  type ExpressionNode,\n  type JSChildNode,\n  NodeTypes,\n  type ParentNode,\n  type Property,\n  type RootNode,\n  type SimpleExpressionNode,\n  type TemplateChildNode,\n  type TemplateLiteral,\n  convertToBlock,\n  createCacheExpression,\n  createSimpleExpression,\n  createVNodeCall,\n} from './ast'\nimport {\n  EMPTY_OBJ,\n  NOOP,\n  PatchFlags,\n  camelize,\n  capitalize,\n  isArray,\n  isString,\n} from '@vue/shared'\nimport { defaultOnError, defaultOnWarn } from './errors'\nimport {\n  CREATE_COMMENT,\n  FRAGMENT,\n  TO_DISPLAY_STRING,\n  helperNameMap,\n} from './runtimeHelpers'\nimport { isVSlot } from './utils'\nimport { cacheStatic, isSingleElementRoot } from './transforms/cacheStatic'\nimport type { CompilerCompatOptions } from './compat/compatConfig'\n\n// There are two types of transforms:\n//\n// - NodeTransform:\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\n//   replace or remove the node being processed.\nexport type NodeTransform = (\n  node: RootNode | TemplateChildNode,\n  context: TransformContext,\n) => void | (() => void) | (() => void)[]\n\n// - DirectiveTransform:\n//   Transforms that handles a single directive attribute on an element.\n//   It translates the raw directive into actual props for the VNode.\nexport type DirectiveTransform = (\n  dir: DirectiveNode,\n  node: ElementNode,\n  context: TransformContext,\n  // a platform specific compiler can import the base transform and augment\n  // it by passing in this optional argument.\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult,\n) => DirectiveTransformResult\n\nexport interface DirectiveTransformResult {\n  props: Property[]\n  needRuntime?: boolean | symbol\n  ssrTagParts?: TemplateLiteral['elements']\n}\n\n// A structural directive transform is technically also a NodeTransform;\n// Only v-if and v-for fall into this category.\nexport type StructuralDirectiveTransform = (\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n) => void | (() => void)\n\nexport interface ImportItem {\n  exp: string | ExpressionNode\n  path: string\n}\n\nexport interface TransformContext\n  extends Required<Omit<TransformOptions, keyof CompilerCompatOptions>>,\n    CompilerCompatOptions {\n  selfName: string | null\n  root: RootNode\n  helpers: Map<symbol, number>\n  components: Set<string>\n  directives: Set<string>\n  hoists: (JSChildNode | null)[]\n  imports: ImportItem[]\n  temps: number\n  cached: (CacheExpression | null)[]\n  identifiers: { [name: string]: number | undefined }\n  scopes: {\n    vFor: number\n    vSlot: number\n    vPre: number\n    vOnce: number\n  }\n  parent: ParentNode | null\n  // we could use a stack but in practice we've only ever needed two layers up\n  // so this is more efficient\n  grandParent: ParentNode | null\n  childIndex: number\n  currentNode: RootNode | TemplateChildNode | null\n  inVOnce: boolean\n  helper<T extends symbol>(name: T): T\n  removeHelper<T extends symbol>(name: T): void\n  helperString(name: symbol): string\n  replaceNode(node: TemplateChildNode): void\n  removeNode(node?: TemplateChildNode): void\n  onNodeRemoved(): void\n  addIdentifiers(exp: ExpressionNode | string): void\n  removeIdentifiers(exp: ExpressionNode | string): void\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\n  cache(exp: JSChildNode, isVNode?: boolean, inVOnce?: boolean): CacheExpression\n  constantCache: WeakMap<TemplateChildNode, ConstantTypes>\n\n  // 2.x Compat only\n  filters?: Set<string>\n}\n\nexport function createTransformContext(\n  root: RootNode,\n  {\n    filename = '',\n    prefixIdentifiers = false,\n    hoistStatic = false,\n    hmr = false,\n    cacheHandlers = false,\n    nodeTransforms = [],\n    directiveTransforms = {},\n    transformHoist = null,\n    isBuiltInComponent = NOOP,\n    isCustomElement = NOOP,\n    expressionPlugins = [],\n    scopeId = null,\n    slotted = true,\n    ssr = false,\n    inSSR = false,\n    ssrCssVars = ``,\n    bindingMetadata = EMPTY_OBJ,\n    inline = false,\n    isTS = false,\n    onError = defaultOnError,\n    onWarn = defaultOnWarn,\n    compatConfig,\n  }: TransformOptions,\n): TransformContext {\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\n  const context: TransformContext = {\n    // options\n    filename,\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n\n    // state\n    root,\n    helpers: new Map(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    imports: [],\n    cached: [],\n    constantCache: new WeakMap(),\n    temps: 0,\n    identifiers: Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0,\n    },\n    parent: null,\n    grandParent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0\n      context.helpers.set(name, count + 1)\n      return name\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name)\n      if (count) {\n        const currentCount = count - 1\n        if (!currentCount) {\n          context.helpers.delete(name)\n        } else {\n          context.helpers.set(name, currentCount)\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`\n    },\n    replaceNode(node) {\n      /* v8 ignore start */\n      if (__DEV__) {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`)\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`)\n        }\n      }\n      /* v8 ignore stop */\n      context.parent!.children[context.childIndex] = context.currentNode = node\n    },\n    removeNode(node) {\n      /* v8 ignore next 3 */\n      if (__DEV__ && !context.parent) {\n        throw new Error(`Cannot remove root node.`)\n      }\n      const list = context.parent!.children\n      const removalIndex = node\n        ? list.indexOf(node)\n        : context.currentNode\n          ? context.childIndex\n          : -1\n      /* v8 ignore next 3 */\n      if (__DEV__ && removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`)\n      }\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null\n        context.onNodeRemoved()\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--\n          context.onNodeRemoved()\n        }\n      }\n      context.parent!.children.splice(removalIndex, 1)\n    },\n    onNodeRemoved: NOOP,\n    addIdentifiers(exp) {\n      // identifier tracking only happens in non-browser builds.\n      if (!__BROWSER__) {\n        if (isString(exp)) {\n          addId(exp)\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId)\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          addId(exp.content)\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      if (!__BROWSER__) {\n        if (isString(exp)) {\n          removeId(exp)\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId)\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          removeId(exp.content)\n        }\n      }\n    },\n    hoist(exp) {\n      if (isString(exp)) exp = createSimpleExpression(exp)\n      context.hoists.push(exp)\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        ConstantTypes.CAN_CACHE,\n      )\n      identifier.hoisted = exp\n      return identifier\n    },\n    cache(exp, isVNode = false, inVOnce = false) {\n      const cacheExp = createCacheExpression(\n        context.cached.length,\n        exp,\n        isVNode,\n        inVOnce,\n      )\n      context.cached.push(cacheExp)\n      return cacheExp\n    },\n  }\n\n  if (__COMPAT__) {\n    context.filters = new Set()\n  }\n\n  function addId(id: string) {\n    const { identifiers } = context\n    if (identifiers[id] === undefined) {\n      identifiers[id] = 0\n    }\n    identifiers[id]!++\n  }\n\n  function removeId(id: string) {\n    context.identifiers[id]!--\n  }\n\n  return context\n}\n\nexport function transform(root: RootNode, options: TransformOptions): void {\n  const context = createTransformContext(root, options)\n  traverseNode(root, context)\n  if (options.hoistStatic) {\n    cacheStatic(root, context)\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context)\n  }\n  // finalize meta information\n  root.helpers = new Set([...context.helpers.keys()])\n  root.components = [...context.components]\n  root.directives = [...context.directives]\n  root.imports = context.imports\n  root.hoists = context.hoists\n  root.temps = context.temps\n  root.cached = context.cached\n  root.transformed = true\n\n  if (__COMPAT__) {\n    root.filters = [...context.filters!]\n  }\n}\n\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\n  const { helper } = context\n  const { children } = root\n  if (children.length === 1) {\n    const child = children[0]\n    // if the single child is an element, turn it into a block.\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      const codegenNode = child.codegenNode\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\n        convertToBlock(codegenNode, context)\n      }\n      root.codegenNode = codegenNode\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\n    // check if the fragment actually contains a single valid child with\n    // the rest being comments\n    if (\n      __DEV__ &&\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\n    ) {\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\n    }\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      undefined,\n      root.children,\n      patchFlag,\n      undefined,\n      undefined,\n      true,\n      undefined,\n      false /* isComponent */,\n    )\n  } else {\n    // no children = noop. codegen will return null.\n  }\n}\n\nexport function traverseChildren(\n  parent: ParentNode,\n  context: TransformContext,\n): void {\n  let i = 0\n  const nodeRemoved = () => {\n    i--\n  }\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i]\n    if (isString(child)) continue\n    context.grandParent = context.parent\n    context.parent = parent\n    context.childIndex = i\n    context.onNodeRemoved = nodeRemoved\n    traverseNode(child, context)\n  }\n}\n\nexport function traverseNode(\n  node: RootNode | TemplateChildNode,\n  context: TransformContext,\n): void {\n  context.currentNode = node\n  // apply transform plugins\n  const { nodeTransforms } = context\n  const exitFns = []\n  for (let i = 0; i < nodeTransforms.length; i++) {\n    const onExit = nodeTransforms[i](node, context)\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push(...onExit)\n      } else {\n        exitFns.push(onExit)\n      }\n    }\n    if (!context.currentNode) {\n      // node was removed\n      return\n    } else {\n      // node may have been replaced\n      node = context.currentNode\n    }\n  }\n\n  switch (node.type) {\n    case NodeTypes.COMMENT:\n      if (!context.ssr) {\n        // inject import for the Comment symbol, which is needed for creating\n        // comment nodes with `createVNode`\n        context.helper(CREATE_COMMENT)\n      }\n      break\n    case NodeTypes.INTERPOLATION:\n      // no need to traverse, but we need to inject toString helper\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING)\n      }\n      break\n\n    // for container types, further traverse downwards\n    case NodeTypes.IF:\n      for (let i = 0; i < node.branches.length; i++) {\n        traverseNode(node.branches[i], context)\n      }\n      break\n    case NodeTypes.IF_BRANCH:\n    case NodeTypes.FOR:\n    case NodeTypes.ELEMENT:\n    case NodeTypes.ROOT:\n      traverseChildren(node, context)\n      break\n  }\n\n  // exit transforms\n  context.currentNode = node\n  let i = exitFns.length\n  while (i--) {\n    exitFns[i]()\n  }\n}\n\nexport function createStructuralDirectiveTransform(\n  name: string | RegExp,\n  fn: StructuralDirectiveTransform,\n): NodeTransform {\n  const matches = isString(name)\n    ? (n: string) => n === name\n    : (n: string) => name.test(n)\n\n  return (node, context) => {\n    if (node.type === NodeTypes.ELEMENT) {\n      const { props } = node\n      // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\n        return\n      }\n      const exitFns = []\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i]\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1)\n          i--\n          const onExit = fn(node, prop, context)\n          if (onExit) exitFns.push(onExit)\n        }\n      }\n      return exitFns\n    }\n  }\n}\n", "import type { CodegenOptions } from './options'\nimport {\n  type ArrayExpression,\n  type AssignmentExpression,\n  type CacheExpression,\n  type CallExpression,\n  type CommentNode,\n  type CompoundExpressionNode,\n  type ConditionalExpression,\n  type ExpressionNode,\n  type FunctionExpression,\n  type IfStatement,\n  type InterpolationNode,\n  type JSChildNode,\n  NodeTypes,\n  type ObjectExpression,\n  type Position,\n  type ReturnStatement,\n  type RootNode,\n  type SSRCodegenNode,\n  type SequenceExpression,\n  type SimpleExpressionNode,\n  type TemplateChildNode,\n  type TemplateLiteral,\n  type TextNode,\n  type VNodeCall,\n  getVNodeBlockHelper,\n  getVNodeHelper,\n  locStub,\n} from './ast'\nimport { SourceMapGenerator } from 'source-map-js'\nimport {\n  advancePositionWithMutation,\n  assert,\n  isSimpleIdentifier,\n  toValidAssetId,\n} from './utils'\nimport {\n  PatchFlagNames,\n  type PatchFlags,\n  isArray,\n  isString,\n  isSymbol,\n} from '@vue/shared'\nimport {\n  CREATE_COMMENT,\n  CREATE_ELEMENT_VNODE,\n  CREATE_STATIC,\n  CREATE_TEXT,\n  CREATE_VNODE,\n  OPEN_BLOCK,\n  RESOLVE_COMPONENT,\n  RESOLVE_DIRECTIVE,\n  RESOLVE_FILTER,\n  SET_BLOCK_TRACKING,\n  TO_DISPLAY_STRING,\n  WITH_CTX,\n  WITH_DIRECTIVES,\n  helperNameMap,\n} from './runtimeHelpers'\nimport type { ImportItem } from './transform'\n\n/**\n * The `SourceMapGenerator` type from `source-map-js` is a bit incomplete as it\n * misses `toJSON()`. We also need to add types for internal properties which we\n * need to access for better performance.\n *\n * Since TS 5.3, dts generation starts to strangely include broken triple slash\n * references for source-map-js, so we are inlining all source map related types\n * here to to workaround that.\n */\nexport interface CodegenSourceMapGenerator {\n  setSourceContent(sourceFile: string, sourceContent: string): void\n  // SourceMapGenerator has this method but the types do not include it\n  toJSON(): RawSourceMap\n  _sources: Set<string>\n  _names: Set<string>\n  _mappings: {\n    add(mapping: MappingItem): void\n  }\n}\n\nexport interface RawSourceMap {\n  file?: string\n  sourceRoot?: string\n  version: string\n  sources: string[]\n  names: string[]\n  sourcesContent?: string[]\n  mappings: string\n}\n\ninterface MappingItem {\n  source: string\n  generatedLine: number\n  generatedColumn: number\n  originalLine: number\n  originalColumn: number\n  name: string | null\n}\n\nconst PURE_ANNOTATION = `/*@__PURE__*/`\n\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\n\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\n\nexport interface CodegenResult {\n  code: string\n  preamble: string\n  ast: RootNode\n  map?: RawSourceMap\n}\n\nenum NewlineType {\n  Start = 0,\n  End = -1,\n  None = -2,\n  Unknown = -3,\n}\n\nexport interface CodegenContext\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\n  source: string\n  code: string\n  line: number\n  column: number\n  offset: number\n  indentLevel: number\n  pure: boolean\n  map?: CodegenSourceMapGenerator\n  helper(key: symbol): string\n  push(code: string, newlineIndex?: number, node?: CodegenNode): void\n  indent(): void\n  deindent(withoutNewLine?: boolean): void\n  newline(): void\n}\n\nfunction createCodegenContext(\n  ast: RootNode,\n  {\n    mode = 'function',\n    prefixIdentifiers = mode === 'module',\n    sourceMap = false,\n    filename = `template.vue.html`,\n    scopeId = null,\n    optimizeImports = false,\n    runtimeGlobalName = `Vue`,\n    runtimeModuleName = `vue`,\n    ssrRuntimeModuleName = 'vue/server-renderer',\n    ssr = false,\n    isTS = false,\n    inSSR = false,\n  }: CodegenOptions,\n): CodegenContext {\n  const context: CodegenContext = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: undefined,\n    helper(key) {\n      return `_${helperNameMap[key]}`\n    },\n    push(code, newlineIndex = NewlineType.None, node) {\n      context.code += code\n      if (!__BROWSER__ && context.map) {\n        if (node) {\n          let name\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, '')\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content\n            }\n          }\n          addMapping(node.loc.start, name)\n        }\n        if (newlineIndex === NewlineType.Unknown) {\n          // multiple newlines, full iteration\n          advancePositionWithMutation(context, code)\n        } else {\n          // fast paths\n          context.offset += code.length\n          if (newlineIndex === NewlineType.None) {\n            // no newlines; fast path to avoid newline detection\n            if (__TEST__ && code.includes('\\n')) {\n              throw new Error(\n                `CodegenContext.push() called newlineIndex: none, but contains` +\n                  `newlines: ${code.replace(/\\n/g, '\\\\n')}`,\n              )\n            }\n            context.column += code.length\n          } else {\n            // single newline at known index\n            if (newlineIndex === NewlineType.End) {\n              newlineIndex = code.length - 1\n            }\n            if (\n              __TEST__ &&\n              (code.charAt(newlineIndex) !== '\\n' ||\n                code.slice(0, newlineIndex).includes('\\n') ||\n                code.slice(newlineIndex + 1).includes('\\n'))\n            ) {\n              throw new Error(\n                `CodegenContext.push() called with newlineIndex: ${newlineIndex} ` +\n                  `but does not conform: ${code.replace(/\\n/g, '\\\\n')}`,\n              )\n            }\n            context.line++\n            context.column = code.length - newlineIndex\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end)\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel)\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel\n      } else {\n        newline(--context.indentLevel)\n      }\n    },\n    newline() {\n      newline(context.indentLevel)\n    },\n  }\n\n  function newline(n: number) {\n    context.push('\\n' + `  `.repeat(n), NewlineType.Start)\n  }\n\n  function addMapping(loc: Position, name: string | null = null) {\n    // we use the private property to directly add the mapping\n    // because the addMapping() implementation in source-map-js has a bunch of\n    // unnecessary arg and validation checks that are pure overhead in our case.\n    const { _names, _mappings } = context.map!\n    if (name !== null && !_names.has(name)) _names.add(name)\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1, // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      name,\n    })\n  }\n\n  if (!__BROWSER__ && sourceMap) {\n    // lazy require source-map implementation, only in non-browser builds\n    context.map =\n      new SourceMapGenerator() as unknown as CodegenSourceMapGenerator\n    context.map.setSourceContent(filename, context.source)\n    context.map._sources.add(filename)\n  }\n\n  return context\n}\n\nexport function generate(\n  ast: RootNode,\n  options: CodegenOptions & {\n    onContextCreated?: (context: CodegenContext) => void\n  } = {},\n): CodegenResult {\n  const context = createCodegenContext(ast, options)\n  if (options.onContextCreated) options.onContextCreated(context)\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr,\n  } = context\n\n  const helpers = Array.from(ast.helpers)\n  const hasHelpers = helpers.length > 0\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\n  const isSetupInlined = !__BROWSER__ && !!options.inline\n\n  // preambles\n  // in setup() inline mode, the preamble is generated in a sub context\n  // and returned separately.\n  const preambleContext = isSetupInlined\n    ? createCodegenContext(ast, options)\n    : context\n  if (!__BROWSER__ && mode === 'module') {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\n  } else {\n    genFunctionPreamble(ast, preambleContext)\n  }\n  // enter render function\n  const functionName = ssr ? `ssrRender` : `render`\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\n    // binding optimization args\n    args.push('$props', '$setup', '$data', '$options')\n  }\n  const signature =\n    !__BROWSER__ && options.isTS\n      ? args.map(arg => `${arg}: any`).join(',')\n      : args.join(', ')\n\n  if (isSetupInlined) {\n    push(`(${signature}) => {`)\n  } else {\n    push(`function ${functionName}(${signature}) {`)\n  }\n  indent()\n\n  if (useWithBlock) {\n    push(`with (_ctx) {`)\n    indent()\n    // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(', ')} } = _Vue\\n`,\n        NewlineType.End,\n      )\n      newline()\n    }\n  }\n\n  // generate asset resolution statements\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context)\n    if (ast.directives.length || ast.temps > 0) {\n      newline()\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context)\n    if (ast.temps > 0) {\n      newline()\n    }\n  }\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\n    newline()\n    genAssets(ast.filters, 'filter', context)\n    newline()\n  }\n\n  if (ast.temps > 0) {\n    push(`let `)\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\\n`, NewlineType.Start)\n    newline()\n  }\n\n  // generate the VNode tree expression\n  if (!ssr) {\n    push(`return `)\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context)\n  } else {\n    push(`null`)\n  }\n\n  if (useWithBlock) {\n    deindent()\n    push(`}`)\n  }\n\n  deindent()\n  push(`}`)\n\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : undefined,\n  }\n}\n\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName,\n  } = context\n  const VueBinding =\n    !__BROWSER__ && ssr\n      ? `require(${JSON.stringify(runtimeModuleName)})`\n      : runtimeGlobalName\n  // Generate const declaration for helpers\n  // In prefix mode, we place the const declaration at top so it's done\n  // only once; But if we not prefixing, we place the declaration inside the\n  // with block so it doesn't incur the `in` check cost for every helper access.\n  const helpers = Array.from(ast.helpers)\n  if (helpers.length > 0) {\n    if (!__BROWSER__ && prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`,\n        NewlineType.End,\n      )\n    } else {\n      // \"with\" mode.\n      // save Vue in a separate variable to avoid collision\n      push(`const _Vue = ${VueBinding}\\n`, NewlineType.End)\n      // in \"with\" mode, helpers are declared inside the with block to avoid\n      // has check cost, but hoists are lifted out of the function - we need\n      // to provide the helper here.\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC,\n        ]\n          .filter(helper => helpers.includes(helper))\n          .map(aliasHelper)\n          .join(', ')\n        push(`const { ${staticHelpers} } = _Vue\\n`, NewlineType.End)\n      }\n    }\n  }\n  // generate variables for ssr helpers\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\n    // ssr guarantees prefixIdentifier: true\n    push(\n      `const { ${ast.ssrHelpers\n        .map(aliasHelper)\n        .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`,\n      NewlineType.End,\n    )\n  }\n  genHoists(ast.hoists, context)\n  newline()\n  push(`return `)\n}\n\nfunction genModulePreamble(\n  ast: RootNode,\n  context: CodegenContext,\n  genScopeId: boolean,\n  inline?: boolean,\n) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n  } = context\n\n  // generate import statements for helpers\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers)\n    if (optimizeImports) {\n      // when bundled with webpack with code-split, calling an import binding\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\n      // incurring both payload size increase and potential perf overhead.\n      // therefore we assign the imports to variables (which is a constant ~50b\n      // cost per-component instead of scaling with template size)\n      push(\n        `import { ${helpers\n          .map(s => helperNameMap[s])\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`,\n        NewlineType.End,\n      )\n      push(\n        `\\n// Binding optimization for webpack code-split\\nconst ${helpers\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\n          .join(', ')}\\n`,\n        NewlineType.End,\n      )\n    } else {\n      push(\n        `import { ${helpers\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`,\n        NewlineType.End,\n      )\n    }\n  }\n\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\n        .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`,\n      NewlineType.End,\n    )\n  }\n\n  if (ast.imports.length) {\n    genImports(ast.imports, context)\n    newline()\n  }\n\n  genHoists(ast.hoists, context)\n  newline()\n\n  if (!inline) {\n    push(`export `)\n  }\n}\n\nfunction genAssets(\n  assets: string[],\n  type: 'component' | 'directive' | 'filter',\n  { helper, push, newline, isTS }: CodegenContext,\n) {\n  const resolver = helper(\n    __COMPAT__ && type === 'filter'\n      ? RESOLVE_FILTER\n      : type === 'component'\n        ? RESOLVE_COMPONENT\n        : RESOLVE_DIRECTIVE,\n  )\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i]\n    // potential component implicit self-reference inferred from SFC filename\n    const maybeSelfReference = id.endsWith('__self')\n    if (maybeSelfReference) {\n      id = id.slice(0, -6)\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\n        maybeSelfReference ? `, true` : ``\n      })${isTS ? `!` : ``}`,\n    )\n    if (i < assets.length - 1) {\n      newline()\n    }\n  }\n}\n\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\n  if (!hoists.length) {\n    return\n  }\n  context.pure = true\n  const { push, newline } = context\n  newline()\n\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i]\n    if (exp) {\n      push(`const _hoisted_${i + 1} = `)\n      genNode(exp, context)\n      newline()\n    }\n  }\n\n  context.pure = false\n}\n\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\n  if (!importsOptions.length) {\n    return\n  }\n  importsOptions.forEach(imports => {\n    context.push(`import `)\n    genNode(imports.exp, context)\n    context.push(` from '${imports.path}'`)\n    context.newline()\n  })\n}\n\nfunction isText(n: string | CodegenNode) {\n  return (\n    isString(n) ||\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\n    n.type === NodeTypes.TEXT ||\n    n.type === NodeTypes.INTERPOLATION ||\n    n.type === NodeTypes.COMPOUND_EXPRESSION\n  )\n}\n\nfunction genNodeListAsArray(\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\n  context: CodegenContext,\n) {\n  const multilines =\n    nodes.length > 3 ||\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\n  context.push(`[`)\n  multilines && context.indent()\n  genNodeList(nodes, context, multilines)\n  multilines && context.deindent()\n  context.push(`]`)\n}\n\nfunction genNodeList(\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\n  context: CodegenContext,\n  multilines: boolean = false,\n  comma: boolean = true,\n) {\n  const { push, newline } = context\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i]\n    if (isString(node)) {\n      push(node, NewlineType.Unknown)\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context)\n    } else {\n      genNode(node, context)\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(',')\n        newline()\n      } else {\n        comma && push(', ')\n      }\n    }\n  }\n}\n\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\n  if (isString(node)) {\n    context.push(node, NewlineType.Unknown)\n    return\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node))\n    return\n  }\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n    case NodeTypes.IF:\n    case NodeTypes.FOR:\n      __DEV__ &&\n        assert(\n          node.codegenNode != null,\n          `Codegen node is missing for element/if/for node. ` +\n            `Apply appropriate transforms first.`,\n        )\n      genNode(node.codegenNode!, context)\n      break\n    case NodeTypes.TEXT:\n      genText(node, context)\n      break\n    case NodeTypes.SIMPLE_EXPRESSION:\n      genExpression(node, context)\n      break\n    case NodeTypes.INTERPOLATION:\n      genInterpolation(node, context)\n      break\n    case NodeTypes.TEXT_CALL:\n      genNode(node.codegenNode, context)\n      break\n    case NodeTypes.COMPOUND_EXPRESSION:\n      genCompoundExpression(node, context)\n      break\n    case NodeTypes.COMMENT:\n      genComment(node, context)\n      break\n    case NodeTypes.VNODE_CALL:\n      genVNodeCall(node, context)\n      break\n\n    case NodeTypes.JS_CALL_EXPRESSION:\n      genCallExpression(node, context)\n      break\n    case NodeTypes.JS_OBJECT_EXPRESSION:\n      genObjectExpression(node, context)\n      break\n    case NodeTypes.JS_ARRAY_EXPRESSION:\n      genArrayExpression(node, context)\n      break\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\n      genFunctionExpression(node, context)\n      break\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\n      genConditionalExpression(node, context)\n      break\n    case NodeTypes.JS_CACHE_EXPRESSION:\n      genCacheExpression(node, context)\n      break\n    case NodeTypes.JS_BLOCK_STATEMENT:\n      genNodeList(node.body, context, true, false)\n      break\n\n    // SSR only types\n    case NodeTypes.JS_TEMPLATE_LITERAL:\n      !__BROWSER__ && genTemplateLiteral(node, context)\n      break\n    case NodeTypes.JS_IF_STATEMENT:\n      !__BROWSER__ && genIfStatement(node, context)\n      break\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\n      !__BROWSER__ && genAssignmentExpression(node, context)\n      break\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\n      !__BROWSER__ && genSequenceExpression(node, context)\n      break\n    case NodeTypes.JS_RETURN_STATEMENT:\n      !__BROWSER__ && genReturnStatement(node, context)\n      break\n\n    /* v8 ignore start */\n    case NodeTypes.IF_BRANCH:\n      // noop\n      break\n    default:\n      if (__DEV__) {\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\n        // make sure we exhaust all possible types\n        const exhaustiveCheck: never = node\n        return exhaustiveCheck\n      }\n    /* v8 ignore stop */\n  }\n}\n\nfunction genText(\n  node: TextNode | SimpleExpressionNode,\n  context: CodegenContext,\n) {\n  context.push(JSON.stringify(node.content), NewlineType.Unknown, node)\n}\n\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\n  const { content, isStatic } = node\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    NewlineType.Unknown,\n    node,\n  )\n}\n\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\n  const { push, helper, pure } = context\n  if (pure) push(PURE_ANNOTATION)\n  push(`${helper(TO_DISPLAY_STRING)}(`)\n  genNode(node.content, context)\n  push(`)`)\n}\n\nfunction genCompoundExpression(\n  node: CompoundExpressionNode,\n  context: CodegenContext,\n) {\n  for (let i = 0; i < node.children!.length; i++) {\n    const child = node.children![i]\n    if (isString(child)) {\n      context.push(child, NewlineType.Unknown)\n    } else {\n      genNode(child, context)\n    }\n  }\n}\n\nfunction genExpressionAsPropertyKey(\n  node: ExpressionNode,\n  context: CodegenContext,\n) {\n  const { push } = context\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\n    push(`[`)\n    genCompoundExpression(node, context)\n    push(`]`)\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    const text = isSimpleIdentifier(node.content)\n      ? node.content\n      : JSON.stringify(node.content)\n    push(text, NewlineType.None, node)\n  } else {\n    push(`[${node.content}]`, NewlineType.Unknown, node)\n  }\n}\n\nfunction genComment(node: CommentNode, context: CodegenContext) {\n  const { push, helper, pure } = context\n  if (pure) {\n    push(PURE_ANNOTATION)\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    NewlineType.Unknown,\n    node,\n  )\n}\n\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\n  const { push, helper, pure } = context\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n  } = node\n\n  // add dev annotations to patch flags\n  let patchFlagString\n  if (patchFlag) {\n    if (__DEV__) {\n      if (patchFlag < 0) {\n        // special flags (negative and mutually exclusive)\n        patchFlagString = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`\n      } else {\n        // bitwise flags\n        const flagNames = Object.keys(PatchFlagNames)\n          .map(Number)\n          .filter(n => n > 0 && patchFlag & n)\n          .map(n => PatchFlagNames[n as PatchFlags])\n          .join(`, `)\n        patchFlagString = patchFlag + ` /* ${flagNames} */`\n      }\n    } else {\n      patchFlagString = String(patchFlag)\n    }\n  }\n\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`)\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\n  }\n  if (pure) {\n    push(PURE_ANNOTATION)\n  }\n  const callHelper: symbol = isBlock\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\n    : getVNodeHelper(context.inSSR, isComponent)\n  push(helper(callHelper) + `(`, NewlineType.None, node)\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlagString, dynamicProps]),\n    context,\n  )\n  push(`)`)\n  if (isBlock) {\n    push(`)`)\n  }\n  if (directives) {\n    push(`, `)\n    genNode(directives, context)\n    push(`)`)\n  }\n}\n\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\n  let i = args.length\n  while (i--) {\n    if (args[i] != null) break\n  }\n  return args.slice(0, i + 1).map(arg => arg || `null`)\n}\n\n// JavaScript\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\n  const { push, helper, pure } = context\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\n  if (pure) {\n    push(PURE_ANNOTATION)\n  }\n  push(callee + `(`, NewlineType.None, node)\n  genNodeList(node.arguments, context)\n  push(`)`)\n}\n\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\n  const { push, indent, deindent, newline } = context\n  const { properties } = node\n  if (!properties.length) {\n    push(`{}`, NewlineType.None, node)\n    return\n  }\n  const multilines =\n    properties.length > 1 ||\n    ((!__BROWSER__ || __DEV__) &&\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\n  push(multilines ? `{` : `{ `)\n  multilines && indent()\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i]\n    // key\n    genExpressionAsPropertyKey(key, context)\n    push(`: `)\n    // value\n    genNode(value, context)\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(`,`)\n      newline()\n    }\n  }\n  multilines && deindent()\n  push(multilines ? `}` : ` }`)\n}\n\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\n  genNodeListAsArray(node.elements as CodegenNode[], context)\n}\n\nfunction genFunctionExpression(\n  node: FunctionExpression,\n  context: CodegenContext,\n) {\n  const { push, indent, deindent } = context\n  const { params, returns, body, newline, isSlot } = node\n  if (isSlot) {\n    // wrap slot functions with owner context\n    push(`_${helperNameMap[WITH_CTX]}(`)\n  }\n  push(`(`, NewlineType.None, node)\n  if (isArray(params)) {\n    genNodeList(params, context)\n  } else if (params) {\n    genNode(params, context)\n  }\n  push(`) => `)\n  if (newline || body) {\n    push(`{`)\n    indent()\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `)\n    }\n    if (isArray(returns)) {\n      genNodeListAsArray(returns, context)\n    } else {\n      genNode(returns, context)\n    }\n  } else if (body) {\n    genNode(body, context)\n  }\n  if (newline || body) {\n    deindent()\n    push(`}`)\n  }\n  if (isSlot) {\n    if (__COMPAT__ && node.isNonScopedSlot) {\n      push(`, undefined, true`)\n    }\n    push(`)`)\n  }\n}\n\nfunction genConditionalExpression(\n  node: ConditionalExpression,\n  context: CodegenContext,\n) {\n  const { test, consequent, alternate, newline: needNewline } = node\n  const { push, indent, deindent, newline } = context\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\n    const needsParens = !isSimpleIdentifier(test.content)\n    needsParens && push(`(`)\n    genExpression(test, context)\n    needsParens && push(`)`)\n  } else {\n    push(`(`)\n    genNode(test, context)\n    push(`)`)\n  }\n  needNewline && indent()\n  context.indentLevel++\n  needNewline || push(` `)\n  push(`? `)\n  genNode(consequent, context)\n  context.indentLevel--\n  needNewline && newline()\n  needNewline || push(` `)\n  push(`: `)\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\n  if (!isNested) {\n    context.indentLevel++\n  }\n  genNode(alternate, context)\n  if (!isNested) {\n    context.indentLevel--\n  }\n  needNewline && deindent(true /* without newline */)\n}\n\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\n  const { push, helper, indent, deindent, newline } = context\n  const { needPauseTracking, needArraySpread } = node\n  if (needArraySpread) {\n    push(`[...(`)\n  }\n  push(`_cache[${node.index}] || (`)\n  if (needPauseTracking) {\n    indent()\n    push(`${helper(SET_BLOCK_TRACKING)}(-1`)\n    if (node.inVOnce) push(`, true`)\n    push(`),`)\n    newline()\n    push(`(`)\n  }\n  push(`_cache[${node.index}] = `)\n  genNode(node.value, context)\n  if (needPauseTracking) {\n    push(`).cacheIndex = ${node.index},`)\n    newline()\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\n    newline()\n    push(`_cache[${node.index}]`)\n    deindent()\n  }\n  push(`)`)\n  if (needArraySpread) {\n    push(`)]`)\n  }\n}\n\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\n  const { push, indent, deindent } = context\n  push('`')\n  const l = node.elements.length\n  const multilines = l > 3\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i]\n    if (isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'), NewlineType.Unknown)\n    } else {\n      push('${')\n      if (multilines) indent()\n      genNode(e, context)\n      if (multilines) deindent()\n      push('}')\n    }\n  }\n  push('`')\n}\n\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\n  const { push, indent, deindent } = context\n  const { test, consequent, alternate } = node\n  push(`if (`)\n  genNode(test, context)\n  push(`) {`)\n  indent()\n  genNode(consequent, context)\n  deindent()\n  push(`}`)\n  if (alternate) {\n    push(` else `)\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\n      genIfStatement(alternate, context)\n    } else {\n      push(`{`)\n      indent()\n      genNode(alternate, context)\n      deindent()\n      push(`}`)\n    }\n  }\n}\n\nfunction genAssignmentExpression(\n  node: AssignmentExpression,\n  context: CodegenContext,\n) {\n  genNode(node.left, context)\n  context.push(` = `)\n  genNode(node.right, context)\n}\n\nfunction genSequenceExpression(\n  node: SequenceExpression,\n  context: CodegenContext,\n) {\n  context.push(`(`)\n  genNodeList(node.expressions, context)\n  context.push(`)`)\n}\n\nfunction genReturnStatement(\n  { returns }: ReturnStatement,\n  context: CodegenContext,\n) {\n  context.push(`return `)\n  if (isArray(returns)) {\n    genNodeListAsArray(returns, context)\n  } else {\n    genNode(returns, context)\n  }\n}\n", "import type { SimpleExpressionNode } from './ast'\nimport type { TransformContext } from './transform'\nimport { ErrorCodes, createCompilerError } from './errors'\n\n// these keywords should not appear inside expressions, but operators like\n// 'typeof', 'instanceof', and 'in' are allowed\nconst prohibitedKeywordRE = new RegExp(\n  '\\\\b' +\n    (\n      'arguments,await,break,case,catch,class,const,continue,debugger,default,' +\n      'delete,do,else,export,extends,finally,for,function,if,import,let,new,' +\n      'return,super,switch,throw,try,var,void,while,with,yield'\n    )\n      .split(',')\n      .join('\\\\b|\\\\b') +\n    '\\\\b',\n)\n\n// strip strings in expressions\nconst stripStringRE =\n  /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g\n\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nexport function validateBrowserExpression(\n  node: SimpleExpressionNode,\n  context: TransformContext,\n  asParams = false,\n  asRawStatements = false,\n): void {\n  const exp = node.content\n\n  // empty expressions are validated per-directive since some directives\n  // do allow empty expressions.\n  if (!exp.trim()) {\n    return\n  }\n\n  try {\n    new Function(\n      asRawStatements\n        ? ` ${exp} `\n        : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`,\n    )\n  } catch (e: any) {\n    let message = e.message\n    const keywordMatch = exp\n      .replace(stripStringRE, '')\n      .match(prohibitedKeywordRE)\n    if (keywordMatch) {\n      message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`\n    }\n    context.onError(\n      createCompilerError(\n        ErrorCodes.X_INVALID_EXPRESSION,\n        node.loc,\n        undefined,\n        message,\n      ),\n    )\n  }\n}\n", "// - Parse expressions in templates into compound expressions so that each\n//   identifier gets more accurate source-map locations.\n//\n// - Prefix identifiers with `_ctx.` or `$xxx` (for known binding types) so that\n//   they are accessed from the right source\n//\n// - This transform is only applied in non-browser builds because it relies on\n//   an additional JavaScript parser. In the browser, there is no source-map\n//   support and the code is wrapped in `with (this) { ... }`.\nimport type { NodeTransform, TransformContext } from '../transform'\nimport {\n  type CompoundExpressionNode,\n  ConstantTypes,\n  type ExpressionNode,\n  NodeTypes,\n  type SimpleExpressionNode,\n  createCompoundExpression,\n  createSimpleExpression,\n} from '../ast'\nimport {\n  isInDestructureAssignment,\n  isInNewExpression,\n  isStaticProperty,\n  isStaticPropertyKey,\n  walkIdentifiers,\n} from '../babelUtils'\nimport { advancePositionWithClone, findDir, isSimpleIdentifier } from '../utils'\nimport {\n  genPropsAccessExp,\n  hasOwn,\n  isGloballyAllowed,\n  isString,\n  makeMap,\n} from '@vue/shared'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport type {\n  AssignmentExpression,\n  Identifier,\n  Node,\n  UpdateExpression,\n} from '@babel/types'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { parseExpression } from '@babel/parser'\nimport { IS_REF, UNREF } from '../runtimeHelpers'\nimport { BindingTypes } from '../options'\n\nconst isLiteralWhitelisted = /*@__PURE__*/ makeMap('true,false,null,this')\n\nexport const transformExpression: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.INTERPOLATION) {\n    node.content = processExpression(\n      node.content as SimpleExpressionNode,\n      context,\n    )\n  } else if (node.type === NodeTypes.ELEMENT) {\n    // handle directives on element\n    const memo = findDir(node, 'memo')\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i]\n      // do not process for v-on & v-for since they are special handled\n      if (dir.type === NodeTypes.DIRECTIVE && dir.name !== 'for') {\n        const exp = dir.exp\n        const arg = dir.arg\n        // do not process exp if this is v-on:arg - we need special handling\n        // for wrapping inline statements.\n        if (\n          exp &&\n          exp.type === NodeTypes.SIMPLE_EXPRESSION &&\n          !(dir.name === 'on' && arg) &&\n          // key has been processed in transformFor(vMemo + vFor)\n          !(\n            memo &&\n            arg &&\n            arg.type === NodeTypes.SIMPLE_EXPRESSION &&\n            arg.content === 'key'\n          )\n        ) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === 'slot',\n          )\n        }\n        if (arg && arg.type === NodeTypes.SIMPLE_EXPRESSION && !arg.isStatic) {\n          dir.arg = processExpression(arg, context)\n        }\n      }\n    }\n  }\n}\n\ninterface PrefixMeta {\n  prefix?: string\n  isConstant: boolean\n  start: number\n  end: number\n  scopeIds?: Set<string>\n}\n\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !__BROWSER__ check so that it can be\n// tree-shaken from the browser build.\nexport function processExpression(\n  node: SimpleExpressionNode,\n  context: TransformContext,\n  // some expressions like v-slot props & v-for aliases should be parsed as\n  // function params\n  asParams = false,\n  // v-on handler values may contain multiple statements\n  asRawStatements = false,\n  localVars: Record<string, number> = Object.create(context.identifiers),\n): ExpressionNode {\n  if (__BROWSER__) {\n    if (__DEV__) {\n      // simple in-browser validation (same logic in 2.x)\n      validateBrowserExpression(node, context, asParams, asRawStatements)\n    }\n    return node\n  }\n\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node\n  }\n\n  const { inline, bindingMetadata } = context\n  const rewriteIdentifier = (\n    raw: string,\n    parent?: Node | null,\n    id?: Identifier,\n  ) => {\n    const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw]\n    if (inline) {\n      // x = y\n      const isAssignmentLVal =\n        parent && parent.type === 'AssignmentExpression' && parent.left === id\n      // x++\n      const isUpdateArg =\n        parent && parent.type === 'UpdateExpression' && parent.argument === id\n      // ({ x } = y)\n      const isDestructureAssignment =\n        parent && isInDestructureAssignment(parent, parentStack)\n      const isNewExpression = parent && isInNewExpression(parentStack)\n      const wrapWithUnref = (raw: string) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw})`\n        return isNewExpression ? `(${wrapped})` : wrapped\n      }\n\n      if (\n        isConst(type) ||\n        type === BindingTypes.SETUP_REACTIVE_CONST ||\n        localVars[raw]\n      ) {\n        return raw\n      } else if (type === BindingTypes.SETUP_REF) {\n        return `${raw}.value`\n      } else if (type === BindingTypes.SETUP_MAYBE_REF) {\n        // const binding that may or may not be ref\n        // if it's not a ref, then assignments don't make sense -\n        // so we ignore the non-ref assignment case and generate code\n        // that assumes the value to be a ref for more efficiency\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment\n          ? `${raw}.value`\n          : wrapWithUnref(raw)\n      } else if (type === BindingTypes.SETUP_LET) {\n        if (isAssignmentLVal) {\n          // let binding.\n          // this is a bit more tricky as we need to cover the case where\n          // let is a local non-ref value, and we need to replicate the\n          // right hand side value.\n          // x = y --> isRef(x) ? x.value = y : x = y\n          const { right: rVal, operator } = parent as AssignmentExpression\n          const rExp = rawExp.slice(rVal.start! - 1, rVal.end! - 1)\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds,\n            ),\n          )\n          return `${context.helperString(IS_REF)}(${raw})${\n            context.isTS ? ` //@ts-ignore\\n` : ``\n          } ? ${raw}.value ${operator} ${rExpString} : ${raw}`\n        } else if (isUpdateArg) {\n          // make id replace parent in the code range so the raw update operator\n          // is removed\n          id!.start = parent!.start\n          id!.end = parent!.end\n          const { prefix: isPrefix, operator } = parent as UpdateExpression\n          const prefix = isPrefix ? operator : ``\n          const postfix = isPrefix ? `` : operator\n          // let binding.\n          // x++ --> isRef(a) ? a.value++ : a++\n          return `${context.helperString(IS_REF)}(${raw})${\n            context.isTS ? ` //@ts-ignore\\n` : ``\n          } ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`\n        } else if (isDestructureAssignment) {\n          // TODO\n          // let binding in a destructure assignment - it's very tricky to\n          // handle both possible cases here without altering the original\n          // structure of the code, so we just assume it's not a ref here\n          // for now\n          return raw\n        } else {\n          return wrapWithUnref(raw)\n        }\n      } else if (type === BindingTypes.PROPS) {\n        // use __props which is generated by compileScript so in ts mode\n        // it gets correct type\n        return genPropsAccessExp(raw)\n      } else if (type === BindingTypes.PROPS_ALIASED) {\n        // prop with a different local alias (from defineProps() destructure)\n        return genPropsAccessExp(bindingMetadata.__propsAliases![raw])\n      }\n    } else {\n      if (\n        (type && type.startsWith('setup')) ||\n        type === BindingTypes.LITERAL_CONST\n      ) {\n        // setup bindings in non-inline mode\n        return `$setup.${raw}`\n      } else if (type === BindingTypes.PROPS_ALIASED) {\n        return `$props['${bindingMetadata.__propsAliases![raw]}']`\n      } else if (type) {\n        return `$${type}.${raw}`\n      }\n    }\n\n    // fallback to ctx\n    return `_ctx.${raw}`\n  }\n\n  // fast path if expression is a simple identifier.\n  const rawExp = node.content\n\n  let ast = node.ast\n\n  if (ast === false) {\n    // ast being false means it has caused an error already during parse phase\n    return node\n  }\n\n  if (ast === null || (!ast && isSimpleIdentifier(rawExp))) {\n    const isScopeVarReference = context.identifiers[rawExp]\n    const isAllowedGlobal = isGloballyAllowed(rawExp)\n    const isLiteral = isLiteralWhitelisted(rawExp)\n    if (\n      !asParams &&\n      !isScopeVarReference &&\n      !isLiteral &&\n      (!isAllowedGlobal || bindingMetadata[rawExp])\n    ) {\n      // const bindings exposed from setup can be skipped for patching but\n      // cannot be hoisted to module scope\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = ConstantTypes.CAN_SKIP_PATCH\n      }\n      node.content = rewriteIdentifier(rawExp)\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = ConstantTypes.CAN_STRINGIFY\n      } else {\n        node.constType = ConstantTypes.CAN_CACHE\n      }\n    }\n    return node\n  }\n\n  if (!ast) {\n    // exp needs to be parsed differently:\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\n    //    exp, but make sure to pad with spaces for consistent ranges\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\n    const source = asRawStatements\n      ? ` ${rawExp} `\n      : `(${rawExp})${asParams ? `=>{}` : ``}`\n    try {\n      ast = parseExpression(source, {\n        sourceType: 'module',\n        plugins: context.expressionPlugins,\n      })\n    } catch (e: any) {\n      context.onError(\n        createCompilerError(\n          ErrorCodes.X_INVALID_EXPRESSION,\n          node.loc,\n          undefined,\n          e.message,\n        ),\n      )\n      return node\n    }\n  }\n\n  type QualifiedId = Identifier & PrefixMeta\n  const ids: QualifiedId[] = []\n  const parentStack: Node[] = []\n  const knownIds: Record<string, number> = Object.create(context.identifiers)\n\n  walkIdentifiers(\n    ast,\n    (node, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node, parent!)) {\n        return\n      }\n      // v2 wrapped filter call\n      if (__COMPAT__ && node.name.startsWith('_filter_')) {\n        return\n      }\n\n      const needPrefix = isReferenced && canPrefix(node)\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent!) && parent.shorthand) {\n          // property shorthand like { foo }, we need to add the key since\n          // we rewrite the value\n          ;(node as QualifiedId).prefix = `${node.name}: `\n        }\n        node.name = rewriteIdentifier(node.name, parent, node)\n        ids.push(node as QualifiedId)\n      } else {\n        // The identifier is considered constant unless it's pointing to a\n        // local scope variable (a v-for alias, or a v-slot prop)\n        if (\n          !(needPrefix && isLocal) &&\n          (!parent ||\n            (parent.type !== 'CallExpression' &&\n              parent.type !== 'NewExpression' &&\n              parent.type !== 'MemberExpression'))\n        ) {\n          ;(node as QualifiedId).isConstant = true\n        }\n        // also generate sub-expressions for other identifiers for better\n        // source map support. (except for property keys which are static)\n        ids.push(node as QualifiedId)\n      }\n    },\n    true, // invoke on ALL identifiers\n    parentStack,\n    knownIds,\n  )\n\n  // We break up the compound expression into an array of strings and sub\n  // expressions (for identifiers that have been prefixed). In codegen, if\n  // an ExpressionNode has the `.children` property, it will be used instead of\n  // `.content`.\n  const children: CompoundExpressionNode['children'] = []\n  ids.sort((a, b) => a.start - b.start)\n  ids.forEach((id, i) => {\n    // range is offset by -1 due to the wrapping parens when parsed\n    const start = id.start - 1\n    const end = id.end - 1\n    const last = ids[i - 1]\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start)\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``))\n    }\n    const source = rawExp.slice(start, end)\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source,\n        },\n        id.isConstant\n          ? ConstantTypes.CAN_STRINGIFY\n          : ConstantTypes.NOT_CONSTANT,\n      ),\n    )\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end))\n    }\n  })\n\n  let ret\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc)\n    ret.ast = ast\n  } else {\n    ret = node\n    ret.constType = ConstantTypes.CAN_STRINGIFY\n  }\n  ret.identifiers = Object.keys(knownIds)\n  return ret\n}\n\nfunction canPrefix(id: Identifier) {\n  // skip whitelisted globals\n  if (isGloballyAllowed(id.name)) {\n    return false\n  }\n  // special case for webpack compilation\n  if (id.name === 'require') {\n    return false\n  }\n  return true\n}\n\nexport function stringifyExpression(exp: ExpressionNode | string): string {\n  if (isString(exp)) {\n    return exp\n  } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n    return exp.content\n  } else {\n    return (exp.children as (ExpressionNode | string)[])\n      .map(stringifyExpression)\n      .join('')\n  }\n}\n\nfunction isConst(type: unknown) {\n  return (\n    type === BindingTypes.SETUP_CONST || type === BindingTypes.LITERAL_CONST\n  )\n}\n", "import {\n  type NodeTransform,\n  type TransformContext,\n  createStructuralDirectiveTransform,\n  traverseNode,\n} from '../transform'\nimport {\n  type AttributeNode,\n  type BlockCodegenNode,\n  type CacheExpression,\n  ConstantTypes,\n  type DirectiveNode,\n  type ElementNode,\n  ElementTypes,\n  type IfBranchNode,\n  type IfConditionalExpression,\n  type IfNode,\n  type MemoExpression,\n  NodeTypes,\n  type SimpleExpressionNode,\n  convertToBlock,\n  createCallExpression,\n  createConditionalExpression,\n  createObjectExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  createVNodeCall,\n  locStub,\n} from '../ast'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport { processExpression } from './transformExpression'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { cloneLoc } from '../parser'\nimport { CREATE_COMMENT, FRAGMENT } from '../runtimeHelpers'\nimport { findDir, findProp, getMemoedVNodeCall, injectProp } from '../utils'\nimport { PatchFlags } from '@vue/shared'\n\nexport const transformIf: NodeTransform = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      // #1587: We need to dynamically increment the key based on the current\n      // node's sibling nodes, since chained v-if/else branches are\n      // rendered at the same depth\n      const siblings = context.parent!.children\n      let i = siblings.indexOf(ifNode)\n      let key = 0\n      while (i-- >= 0) {\n        const sibling = siblings[i]\n        if (sibling && sibling.type === NodeTypes.IF) {\n          key += sibling.branches.length\n        }\n      }\n\n      // Exit callback. Complete the codegenNode when all children have been\n      // transformed.\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context,\n          ) as IfConditionalExpression\n        } else {\n          // attach this branch's codegen node to the v-if root.\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context,\n          )\n        }\n      }\n    })\n  },\n)\n\n// target-agnostic transform used for both Client and SSR\nexport function processIf(\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n  processCodegen?: (\n    node: IfNode,\n    branch: IfBranchNode,\n    isRoot: boolean,\n  ) => (() => void) | undefined,\n): (() => void) | undefined {\n  if (\n    dir.name !== 'else' &&\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\n  ) {\n    const loc = dir.exp ? dir.exp.loc : node.loc\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc),\n    )\n    dir.exp = createSimpleExpression(`true`, false, loc)\n  }\n\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\n    // dir.exp can only be simple expression because vIf transform is applied\n    // before expression transform.\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\n  }\n\n  if (__DEV__ && __BROWSER__ && dir.exp) {\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\n  }\n\n  if (dir.name === 'if') {\n    const branch = createIfBranch(node, dir)\n    const ifNode: IfNode = {\n      type: NodeTypes.IF,\n      loc: cloneLoc(node.loc),\n      branches: [branch],\n    }\n    context.replaceNode(ifNode)\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true)\n    }\n  } else {\n    // locate the adjacent v-if\n    const siblings = context.parent!.children\n    const comments = []\n    let i = siblings.indexOf(node)\n    while (i-- >= -1) {\n      const sibling = siblings[i]\n      if (sibling && sibling.type === NodeTypes.COMMENT) {\n        context.removeNode(sibling)\n        __DEV__ && comments.unshift(sibling)\n        continue\n      }\n\n      if (\n        sibling &&\n        sibling.type === NodeTypes.TEXT &&\n        !sibling.content.trim().length\n      ) {\n        context.removeNode(sibling)\n        continue\n      }\n\n      if (sibling && sibling.type === NodeTypes.IF) {\n        // Check if v-else was followed by v-else-if\n        if (\n          dir.name === 'else-if' &&\n          sibling.branches[sibling.branches.length - 1].condition === undefined\n        ) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc),\n          )\n        }\n\n        // move the node to the if node's branches\n        context.removeNode()\n        const branch = createIfBranch(node, dir)\n        if (\n          __DEV__ &&\n          comments.length &&\n          // #3619 ignore comments if the v-if is direct child of <transition>\n          !(\n            context.parent &&\n            context.parent.type === NodeTypes.ELEMENT &&\n            (context.parent.tag === 'transition' ||\n              context.parent.tag === 'Transition')\n          )\n        ) {\n          branch.children = [...comments, ...branch.children]\n        }\n\n        // check if user is forcing same key on different branches\n        if (__DEV__ || !__BROWSER__) {\n          const key = branch.userKey\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    ErrorCodes.X_V_IF_SAME_KEY,\n                    branch.userKey!.loc,\n                  ),\n                )\n              }\n            })\n          }\n        }\n\n        sibling.branches.push(branch)\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\n        // since the branch was removed, it will not be traversed.\n        // make sure to traverse here.\n        traverseNode(branch, context)\n        // call on exit\n        if (onExit) onExit()\n        // make sure to reset currentNode after traversal to indicate this\n        // node has been removed.\n        context.currentNode = null\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc),\n        )\n      }\n      break\n    }\n  }\n}\n\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\n  const isTemplateIf = node.tagType === ElementTypes.TEMPLATE\n  return {\n    type: NodeTypes.IF_BRANCH,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf,\n  }\n}\n\nfunction createCodegenNodeForBranch(\n  branch: IfBranchNode,\n  keyIndex: number,\n  context: TransformContext,\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        __DEV__ ? '\"v-if\"' : '\"\"',\n        'true',\n      ]),\n    ) as IfConditionalExpression\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context)\n  }\n}\n\nfunction createChildrenCodegenNode(\n  branch: IfBranchNode,\n  keyIndex: number,\n  context: TransformContext,\n): BlockCodegenNode | MemoExpression {\n  const { helper } = context\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      ConstantTypes.CAN_CACHE,\n    ),\n  )\n  const { children } = branch\n  const firstChild = children[0]\n  const needFragmentWrapper =\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\n      // optimize away nested fragments when child is a ForNode\n      const vnodeCall = firstChild.codegenNode!\n      injectProp(vnodeCall, keyProperty, context)\n      return vnodeCall\n    } else {\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\n      // check if the fragment actually contains a single valid child with\n      // the rest being comments\n      if (\n        __DEV__ &&\n        !branch.isTemplateIf &&\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\n      ) {\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\n      }\n\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag,\n        undefined,\n        undefined,\n        true,\n        false,\n        false /* isComponent */,\n        branch.loc,\n      )\n    }\n  } else {\n    const ret = (firstChild as ElementNode).codegenNode as\n      | BlockCodegenNode\n      | MemoExpression\n    const vnodeCall = getMemoedVNodeCall(ret)\n    // Change createVNode to createBlock.\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\n      convertToBlock(vnodeCall, context)\n    }\n    // inject branch key\n    injectProp(vnodeCall, keyProperty, context)\n    return ret\n  }\n}\n\nfunction isSameKey(\n  a: AttributeNode | DirectiveNode | undefined,\n  b: AttributeNode | DirectiveNode,\n): boolean {\n  if (!a || a.type !== b.type) {\n    return false\n  }\n  if (a.type === NodeTypes.ATTRIBUTE) {\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\n      return false\n    }\n  } else {\n    // directive\n    const exp = a.exp!\n    const branchExp = (b as DirectiveNode).exp!\n    if (exp.type !== branchExp.type) {\n      return false\n    }\n    if (\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\n      exp.content !== (branchExp as SimpleExpressionNode).content\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getParentCondition(\n  node: IfConditionalExpression | CacheExpression,\n): IfConditionalExpression {\n  while (true) {\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\n        node = node.alternate\n      } else {\n        return node\n      }\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\n      node = node.value as IfConditionalExpression\n    }\n  }\n}\n", "import type { DirectiveTransform, TransformContext } from '../transform'\nimport {\n  type DirectiveNode,\n  type ExpressionNode,\n  NodeTypes,\n  type SimpleExpressionNode,\n  createObjectProperty,\n  createSimpleExpression,\n} from '../ast'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport { camelize } from '@vue/shared'\nimport { CAMELIZE } from '../runtimeHelpers'\nimport { processExpression } from './transformExpression'\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\n  const { modifiers, loc } = dir\n  const arg = dir.arg!\n\n  let { exp } = dir\n\n  // handle empty expression\n  if (exp && exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim()) {\n    if (!__BROWSER__) {\n      // #10280 only error against empty expression in non-browser build\n      // because :foo in in-DOM templates will be parsed into :foo=\"\" by the\n      // browser\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc),\n      )\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression('', true, loc)),\n        ],\n      }\n    } else {\n      exp = undefined\n    }\n  }\n\n  // same-name shorthand - :arg is expanded to :arg=\"arg\"\n  if (!exp) {\n    if (arg.type !== NodeTypes.SIMPLE_EXPRESSION || !arg.isStatic) {\n      // only simple expression is allowed for same-name shorthand\n      context.onError(\n        createCompilerError(\n          ErrorCodes.X_V_BIND_INVALID_SAME_NAME_ARGUMENT,\n          arg.loc,\n        ),\n      )\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression('', true, loc)),\n        ],\n      }\n    }\n\n    transformBindShorthand(dir, context)\n    exp = dir.exp!\n  }\n\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\n    arg.children.unshift(`(`)\n    arg.children.push(`) || \"\"`)\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`\n  }\n\n  // .sync is replaced by v-model:arg\n  if (modifiers.some(mod => mod.content === 'camel')) {\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n      if (arg.isStatic) {\n        arg.content = camelize(arg.content)\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\n      arg.children.push(`)`)\n    }\n  }\n\n  if (!context.inSSR) {\n    if (modifiers.some(mod => mod.content === 'prop')) {\n      injectPrefix(arg, '.')\n    }\n    if (modifiers.some(mod => mod.content === 'attr')) {\n      injectPrefix(arg, '^')\n    }\n  }\n\n  return {\n    props: [createObjectProperty(arg, exp)],\n  }\n}\n\nexport const transformBindShorthand = (\n  dir: DirectiveNode,\n  context: TransformContext,\n): void => {\n  const arg = dir.arg!\n\n  const propName = camelize((arg as SimpleExpressionNode).content)\n  dir.exp = createSimpleExpression(propName, false, arg.loc)\n  if (!__BROWSER__) {\n    dir.exp = processExpression(dir.exp, context)\n  }\n}\n\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`)\n    arg.children.push(`)`)\n  }\n}\n", "import {\n  type NodeTransform,\n  type TransformContext,\n  createStructuralDirectiveTransform,\n} from '../transform'\nimport {\n  type BlockCodegenNode,\n  ConstantTypes,\n  type DirectiveNode,\n  type ElementNode,\n  type ExpressionNode,\n  type ForCodegenNode,\n  type ForIteratorExpression,\n  type ForNode,\n  type ForParseResult,\n  type ForRenderListExpression,\n  NodeTypes,\n  type PlainElementNode,\n  type RenderSlotCall,\n  type SimpleExpressionNode,\n  type SlotOutletNode,\n  type VNodeCall,\n  createBlockStatement,\n  createCallExpression,\n  createCompoundExpression,\n  createFunctionExpression,\n  createObjectExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  createVNodeCall,\n  getVNodeBlockHelper,\n  getVNodeHelper,\n} from '../ast'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport {\n  findDir,\n  findProp,\n  injectProp,\n  isSlotOutlet,\n  isTemplateNode,\n} from '../utils'\nimport {\n  FRAGMENT,\n  IS_MEMO_SAME,\n  OPEN_BLOCK,\n  RENDER_LIST,\n} from '../runtimeHelpers'\nimport { processExpression } from './transformExpression'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { PatchFlags } from '@vue/shared'\nimport { transformBindShorthand } from './vBind'\n\nexport const transformFor: NodeTransform = createStructuralDirectiveTransform(\n  'for',\n  (node, dir, context) => {\n    const { helper, removeHelper } = context\n    return processFor(node, dir, context, forNode => {\n      // create the loop render function expression now, and add the\n      // iterator on exit after all children have been traversed\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source,\n      ]) as ForRenderListExpression\n      const isTemplate = isTemplateNode(node)\n      const memo = findDir(node, 'memo')\n      const keyProp = findProp(node, `key`, false, true)\n      const isDirKey = keyProp && keyProp.type === NodeTypes.DIRECTIVE\n      if (isDirKey && !keyProp.exp) {\n        // resolve :key shorthand #10882\n        transformBindShorthand(keyProp, context)\n      }\n      let keyExp =\n        keyProp &&\n        (keyProp.type === NodeTypes.ATTRIBUTE\n          ? keyProp.value\n            ? createSimpleExpression(keyProp.value.content, true)\n            : undefined\n          : keyProp.exp)\n\n      if (memo && keyExp && isDirKey) {\n        if (!__BROWSER__) {\n          keyProp.exp = keyExp = processExpression(\n            keyExp as SimpleExpressionNode,\n            context,\n          )\n        }\n      }\n      const keyProperty =\n        keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null\n\n      if (!__BROWSER__ && isTemplate) {\n        // #2085 / #5288 process :key and v-memo expressions need to be\n        // processed on `<template v-for>`. In this case the node is discarded\n        // and never traversed so its binding expressions won't be processed\n        // by the normal transforms.\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp! as SimpleExpressionNode,\n            context,\n          )\n        }\n        if (keyProperty && keyProp!.type !== NodeTypes.ATTRIBUTE) {\n          keyProperty.value = processExpression(\n            keyProperty.value as SimpleExpressionNode,\n            context,\n          )\n        }\n      }\n\n      const isStableFragment =\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\n      const fragmentFlag = isStableFragment\n        ? PatchFlags.STABLE_FRAGMENT\n        : keyProp\n          ? PatchFlags.KEYED_FRAGMENT\n          : PatchFlags.UNKEYED_FRAGMENT\n\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        undefined,\n        renderExp,\n        fragmentFlag,\n        undefined,\n        undefined,\n        true /* isBlock */,\n        !isStableFragment /* disableTracking */,\n        false /* isComponent */,\n        node.loc,\n      ) as ForCodegenNode\n\n      return () => {\n        // finish the codegen now that all children have been traversed\n        let childBlock: BlockCodegenNode\n        const { children } = forNode\n\n        // check <template v-for> key placement\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\n          node.children.some(c => {\n            if (c.type === NodeTypes.ELEMENT) {\n              const key = findProp(c, 'key')\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\n                    key.loc,\n                  ),\n                )\n                return true\n              }\n            }\n          })\n        }\n\n        const needFragmentWrapper =\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\n        const slotOutlet = isSlotOutlet(node)\n          ? node\n          : isTemplate &&\n              node.children.length === 1 &&\n              isSlotOutlet(node.children[0])\n            ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\n            : null\n\n        if (slotOutlet) {\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\n          if (isTemplate && keyProperty) {\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\n            // we need to inject the key to the renderSlot() call.\n            // the props for renderSlot is passed as the 3rd argument.\n            injectProp(childBlock, keyProperty, context)\n          }\n        } else if (needFragmentWrapper) {\n          // <template v-for=\"...\"> with text or multi-elements\n          // should generate a fragment block for each loop\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\n            node.children,\n            PatchFlags.STABLE_FRAGMENT,\n            undefined,\n            undefined,\n            true,\n            undefined,\n            false /* isComponent */,\n          )\n        } else {\n          // Normal element v-for. Directly use the child's codegenNode\n          // but mark it as a block.\n          childBlock = (children[0] as PlainElementNode)\n            .codegenNode as VNodeCall\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context)\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              // switch from block to vnode\n              removeHelper(OPEN_BLOCK)\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent),\n              )\n            } else {\n              // switch from vnode to block\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent),\n              )\n            }\n          }\n          childBlock.isBlock = !isStableFragment\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK)\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\n          }\n        }\n\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`),\n            ]),\n          )\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\n              ` && ${context.helperString(\n                IS_MEMO_SAME,\n              )}(_cached, _memo)) return _cached`,\n            ]),\n            createCompoundExpression([`const _item = `, childBlock as any]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`),\n          ])\n          renderExp.arguments.push(\n            loop as ForIteratorExpression,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached.length)),\n          )\n          // increment cache count\n          context.cached.push(null)\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true /* force newline */,\n            ) as ForIteratorExpression,\n          )\n        }\n      }\n    })\n  },\n)\n\n// target-agnostic transform used for both Client and SSR\nexport function processFor(\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined,\n) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc),\n    )\n    return\n  }\n\n  const parseResult = dir.forParseResult\n\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc),\n    )\n    return\n  }\n\n  finalizeForParseResult(parseResult, context)\n\n  const { addIdentifiers, removeIdentifiers, scopes } = context\n  const { source, value, key, index } = parseResult\n\n  const forNode: ForNode = {\n    type: NodeTypes.FOR,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node],\n  }\n\n  context.replaceNode(forNode)\n\n  // bookkeeping\n  scopes.vFor++\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    // scope management\n    // inject identifiers to context\n    value && addIdentifiers(value)\n    key && addIdentifiers(key)\n    index && addIdentifiers(index)\n  }\n\n  const onExit = processCodegen && processCodegen(forNode)\n\n  return (): void => {\n    scopes.vFor--\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      value && removeIdentifiers(value)\n      key && removeIdentifiers(key)\n      index && removeIdentifiers(index)\n    }\n    if (onExit) onExit()\n  }\n}\n\nexport function finalizeForParseResult(\n  result: ForParseResult,\n  context: TransformContext,\n): void {\n  if (result.finalized) return\n\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source as SimpleExpressionNode,\n      context,\n    )\n    if (result.key) {\n      result.key = processExpression(\n        result.key as SimpleExpressionNode,\n        context,\n        true,\n      )\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index as SimpleExpressionNode,\n        context,\n        true,\n      )\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value as SimpleExpressionNode,\n        context,\n        true,\n      )\n    }\n  }\n  if (__DEV__ && __BROWSER__) {\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\n    if (result.key) {\n      validateBrowserExpression(\n        result.key as SimpleExpressionNode,\n        context,\n        true,\n      )\n    }\n    if (result.index) {\n      validateBrowserExpression(\n        result.index as SimpleExpressionNode,\n        context,\n        true,\n      )\n    }\n    if (result.value) {\n      validateBrowserExpression(\n        result.value as SimpleExpressionNode,\n        context,\n        true,\n      )\n    }\n  }\n  result.finalized = true\n}\n\nexport function createForLoopParams(\n  { value, key, index }: ForParseResult,\n  memoArgs: ExpressionNode[] = [],\n): ExpressionNode[] {\n  return createParamsList([value, key, index, ...memoArgs])\n}\n\nfunction createParamsList(\n  args: (ExpressionNode | undefined)[],\n): ExpressionNode[] {\n  let i = args.length\n  while (i--) {\n    if (args[i]) break\n  }\n  return args\n    .slice(0, i + 1)\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\n}\n", "import {\n  type CallExpression,\n  type ConditionalExpression,\n  type DirectiveNode,\n  type ElementNode,\n  ElementTypes,\n  type ExpressionNode,\n  type FunctionExpression,\n  NodeTypes,\n  type ObjectExpression,\n  type Property,\n  type SlotsExpression,\n  type SourceLocation,\n  type TemplateChildNode,\n  createArrayExpression,\n  createCallExpression,\n  createConditionalExpression,\n  createFunctionExpression,\n  createObjectExpression,\n  createObjectProperty,\n  createSimpleExpression,\n} from '../ast'\nimport type { NodeTransform, TransformContext } from '../transform'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport {\n  assert,\n  findDir,\n  hasScopeRef,\n  isStaticExp,\n  isTemplateNode,\n  isVSlot,\n} from '../utils'\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\nimport { createForLoopParams, finalizeForParseResult } from './vFor'\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\n\nconst defaultFallback = createSimpleExpression(`undefined`, false)\n\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nexport const trackSlotScopes: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    (node.tagType === ElementTypes.COMPONENT ||\n      node.tagType === ElementTypes.TEMPLATE)\n  ) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    const vSlot = findDir(node, 'slot')\n    if (vSlot) {\n      const slotProps = vSlot.exp\n      if (!__BROWSER__ && context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps)\n      }\n      context.scopes.vSlot++\n      return () => {\n        if (!__BROWSER__ && context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps)\n        }\n        context.scopes.vSlot--\n      }\n    }\n  }\n}\n\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\n  let vFor\n  if (\n    isTemplateNode(node) &&\n    node.props.some(isVSlot) &&\n    (vFor = findDir(node, 'for'))\n  ) {\n    const result = vFor.forParseResult\n    if (result) {\n      finalizeForParseResult(result, context)\n      const { value, key, index } = result\n      const { addIdentifiers, removeIdentifiers } = context\n      value && addIdentifiers(value)\n      key && addIdentifiers(key)\n      index && addIdentifiers(index)\n\n      return () => {\n        value && removeIdentifiers(value)\n        key && removeIdentifiers(key)\n        index && removeIdentifiers(index)\n      }\n    }\n  }\n}\n\nexport type SlotFnBuilder = (\n  slotProps: ExpressionNode | undefined,\n  vFor: DirectiveNode | undefined,\n  slotChildren: TemplateChildNode[],\n  loc: SourceLocation,\n) => FunctionExpression\n\nconst buildClientSlotFn: SlotFnBuilder = (props, _vForExp, children, loc) =>\n  createFunctionExpression(\n    props,\n    children,\n    false /* newline */,\n    true /* isSlot */,\n    children.length ? children[0].loc : loc,\n  )\n\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nexport function buildSlots(\n  node: ElementNode,\n  context: TransformContext,\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn,\n): {\n  slots: SlotsExpression\n  hasDynamicSlots: boolean\n} {\n  context.helper(WITH_CTX)\n\n  const { children, loc } = node\n  const slotsProperties: Property[] = []\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\n\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\n  // with `prefixIdentifiers: true`, this can be further optimized to make\n  // it dynamic only when the slot actually uses the scope variables.\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\n  }\n\n  // 1. Check for slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n  const onComponentSlot = findDir(node, 'slot', true)\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression('default', true),\n        buildSlotFn(exp, undefined, children, loc),\n      ),\n    )\n  }\n\n  // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n  let hasTemplateSlots = false\n  let hasNamedDefaultSlot = false\n  const implicitDefaultChildren: TemplateChildNode[] = []\n  const seenSlotNames = new Set<string>()\n  let conditionalBranchIndex = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i]\n    let slotDir\n\n    if (\n      !isTemplateNode(slotElement) ||\n      !(slotDir = findDir(slotElement, 'slot', true))\n    ) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== NodeTypes.COMMENT) {\n        implicitDefaultChildren.push(slotElement)\n      }\n      continue\n    }\n\n    if (onComponentSlot) {\n      // already has on-component slot - this is incorrect usage.\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc),\n      )\n      break\n    }\n\n    hasTemplateSlots = true\n    const { children: slotChildren, loc: slotLoc } = slotElement\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc,\n    } = slotDir\n\n    // check if name is dynamic.\n    let staticSlotName: string | undefined\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`\n    } else {\n      hasDynamicSlots = true\n    }\n\n    const vFor = findDir(slotElement, 'for')\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc)\n\n    // check if this slot is conditional (v-if/v-for)\n    let vIf: DirectiveNode | undefined\n    let vElse: DirectiveNode | undefined\n    if ((vIf = findDir(slotElement, 'if'))) {\n      hasDynamicSlots = true\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp!,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback,\n        ),\n      )\n    } else if (\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\n    ) {\n      // find adjacent v-if\n      let j = i\n      let prev\n      while (j--) {\n        prev = children[j]\n        if (prev.type !== NodeTypes.COMMENT) {\n          break\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, /^(else-)?if$/)) {\n        __TEST__ && assert(dynamicSlots.length > 0)\n        // attach this slot to previous conditional\n        let conditional = dynamicSlots[\n          dynamicSlots.length - 1\n        ] as ConditionalExpression\n        while (\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\n        ) {\n          conditional = conditional.alternate\n        }\n        conditional.alternate = vElse.exp\n          ? createConditionalExpression(\n              vElse.exp,\n              buildDynamicSlot(\n                slotName,\n                slotFunction,\n                conditionalBranchIndex++,\n              ),\n              defaultFallback,\n            )\n          : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++)\n      } else {\n        context.onError(\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc),\n        )\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true\n      const parseResult = vFor.forParseResult\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context)\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true /* force newline */,\n            ),\n          ]),\n        )\n      } else {\n        context.onError(\n          createCompilerError(\n            ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION,\n            vFor.loc,\n          ),\n        )\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\n              dirLoc,\n            ),\n          )\n          continue\n        }\n        seenSlotNames.add(staticSlotName)\n        if (staticSlotName === 'default') {\n          hasNamedDefaultSlot = true\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\n    }\n  }\n\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (\n      props: ExpressionNode | undefined,\n      children: TemplateChildNode[],\n    ) => {\n      const fn = buildSlotFn(props, undefined, children, loc)\n      if (__COMPAT__ && context.compatConfig) {\n        fn.isNonScopedSlot = true\n      }\n      return createObjectProperty(`default`, fn)\n    }\n\n    if (!hasTemplateSlots) {\n      // implicit default slot (on component)\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\n    } else if (\n      implicitDefaultChildren.length &&\n      // #3766\n      // with whitespace: 'preserve', whitespaces between slots will end up in\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\n    ) {\n      // implicit default slot (mixed with named slots)\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\n            implicitDefaultChildren[0].loc,\n          ),\n        )\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren),\n        )\n      }\n    }\n  }\n\n  const slotFlag = hasDynamicSlots\n    ? SlotFlags.DYNAMIC\n    : hasForwardedSlots(node.children)\n      ? SlotFlags.FORWARDED\n      : SlotFlags.STABLE\n\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\n          false,\n        ),\n      ),\n    ),\n    loc,\n  ) as SlotsExpression\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots),\n    ]) as SlotsExpression\n  }\n\n  return {\n    slots,\n    hasDynamicSlots,\n  }\n}\n\nfunction buildDynamicSlot(\n  name: ExpressionNode,\n  fn: FunctionExpression,\n  index?: number,\n): ObjectExpression {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn),\n  ]\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true)),\n    )\n  }\n  return createObjectExpression(props)\n}\n\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    switch (child.type) {\n      case NodeTypes.ELEMENT:\n        if (\n          child.tagType === ElementTypes.SLOT ||\n          hasForwardedSlots(child.children)\n        ) {\n          return true\n        }\n        break\n      case NodeTypes.IF:\n        if (hasForwardedSlots(child.branches)) return true\n        break\n      case NodeTypes.IF_BRANCH:\n      case NodeTypes.FOR:\n        if (hasForwardedSlots(child.children)) return true\n        break\n      default:\n        break\n    }\n  }\n  return false\n}\n\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\n    return true\n  return node.type === NodeTypes.TEXT\n    ? !!node.content.trim()\n    : isNonWhitespaceContent(node.content)\n}\n", "import type { NodeTransform, TransformContext } from '../transform'\nimport {\n  type ArrayExpression,\n  type CallExpression,\n  type ComponentNode,\n  ConstantTypes,\n  type DirectiveArguments,\n  type DirectiveNode,\n  type ElementNode,\n  ElementTypes,\n  type ExpressionNode,\n  type JSChildNode,\n  NodeTypes,\n  type ObjectExpression,\n  type Property,\n  type TemplateTextChildNode,\n  type VNodeCall,\n  createArrayExpression,\n  createCallExpression,\n  createObjectExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  createVNodeCall,\n} from '../ast'\nimport {\n  PatchFlags,\n  camelize,\n  capitalize,\n  isBuiltInDirective,\n  isObject,\n  isOn,\n  isReservedProp,\n  isSymbol,\n} from '@vue/shared'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport {\n  GUARD_REACTIVE_PROPS,\n  KEEP_ALIVE,\n  MERGE_PROPS,\n  NORMALIZE_CLASS,\n  NORMALIZE_PROPS,\n  NORMALIZE_STYLE,\n  RESOLVE_COMPONENT,\n  RESOLVE_DIRECTIVE,\n  RESOLVE_DYNAMIC_COMPONENT,\n  SUSPENSE,\n  TELEPORT,\n  TO_HANDLERS,\n  UNREF,\n} from '../runtimeHelpers'\nimport {\n  findProp,\n  isCoreComponent,\n  isStaticArgOf,\n  isStaticExp,\n  toValidAssetId,\n} from '../utils'\nimport { buildSlots } from './vSlot'\nimport { getConstantType } from './cacheStatic'\nimport { BindingTypes } from '../options'\nimport {\n  CompilerDeprecationTypes,\n  checkCompatEnabled,\n  isCompatEnabled,\n} from '../compat/compatConfig'\nimport { processExpression } from './transformExpression'\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\n\n// generate a JavaScript AST for this element's codegen\nexport const transformElement: NodeTransform = (node, context) => {\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return function postTransformElement() {\n    node = context.currentNode!\n\n    if (\n      !(\n        node.type === NodeTypes.ELEMENT &&\n        (node.tagType === ElementTypes.ELEMENT ||\n          node.tagType === ElementTypes.COMPONENT)\n      )\n    ) {\n      return\n    }\n\n    const { tag, props } = node\n    const isComponent = node.tagType === ElementTypes.COMPONENT\n\n    // The goal of the transform is to create a codegenNode implementing the\n    // VNodeCall interface.\n    let vnodeTag = isComponent\n      ? resolveComponentType(node as ComponentNode, context)\n      : `\"${tag}\"`\n\n    const isDynamicComponent =\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\n\n    let vnodeProps: VNodeCall['props']\n    let vnodeChildren: VNodeCall['children']\n    let patchFlag: VNodeCall['patchFlag'] | 0 = 0\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\n    let dynamicPropNames: string[] | undefined\n    let vnodeDirectives: VNodeCall['directives']\n\n    let shouldUseBlock =\n      // dynamic component may resolve to plain elements\n      isDynamicComponent ||\n      vnodeTag === TELEPORT ||\n      vnodeTag === SUSPENSE ||\n      (!isComponent &&\n        // <svg> and <foreignObject> must be forced into blocks so that block\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\n        // This is technically web-specific, but splitting the logic out of core\n        // leads to too much unnecessary complexity.\n        (tag === 'svg' || tag === 'foreignObject' || tag === 'math'))\n\n    // props\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        undefined,\n        isComponent,\n        isDynamicComponent,\n      )\n      vnodeProps = propsBuildResult.props\n      patchFlag = propsBuildResult.patchFlag\n      dynamicPropNames = propsBuildResult.dynamicPropNames\n      const directives = propsBuildResult.directives\n      vnodeDirectives =\n        directives && directives.length\n          ? (createArrayExpression(\n              directives.map(dir => buildDirectiveArgs(dir, context)),\n            ) as DirectiveArguments)\n          : undefined\n\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true\n      }\n    }\n\n    // children\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        // Although a built-in component, we compile KeepAlive with raw children\n        // instead of slot functions so that it can be used inside Transition\n        // or other Transition-wrapping HOCs.\n        // To ensure correct updates with block optimizations, we need to:\n        // 1. Force keep-alive into a block. This avoids its children being\n        //    collected by a parent block.\n        shouldUseBlock = true\n        // 2. Force keep-alive to always be updated, since it uses raw children.\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        if (__DEV__ && node.children.length > 1) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\n              start: node.children[0].loc.start,\n              end: node.children[node.children.length - 1].loc.end,\n              source: '',\n            }),\n          )\n        }\n      }\n\n      const shouldBuildAsSlots =\n        isComponent &&\n        // Teleport is not a real component and has dedicated runtime handling\n        vnodeTag !== TELEPORT &&\n        // explained above.\n        vnodeTag !== KEEP_ALIVE\n\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\n        vnodeChildren = slots\n        if (hasDynamicSlots) {\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0]\n        const type = child.type\n        // check for dynamic text children\n        const hasDynamicTextChild =\n          type === NodeTypes.INTERPOLATION ||\n          type === NodeTypes.COMPOUND_EXPRESSION\n        if (\n          hasDynamicTextChild &&\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\n        ) {\n          patchFlag |= PatchFlags.TEXT\n        }\n        // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\n          vnodeChildren = child as TemplateTextChildNode\n        } else {\n          vnodeChildren = node.children\n        }\n      } else {\n        vnodeChildren = node.children\n      }\n    }\n\n    // patchFlag & dynamicPropNames\n    if (dynamicPropNames && dynamicPropNames.length) {\n      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\n    }\n\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      patchFlag === 0 ? undefined : patchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false /* disableTracking */,\n      isComponent,\n      node.loc,\n    )\n  }\n}\n\nexport function resolveComponentType(\n  node: ComponentNode,\n  context: TransformContext,\n  ssr = false,\n): string | symbol | CallExpression {\n  let { tag } = node\n\n  // 1. dynamic component\n  const isExplicitDynamic = isComponentTag(tag)\n  const isProp = findProp(node, 'is', false, true /* allow empty */)\n  if (isProp) {\n    if (\n      isExplicitDynamic ||\n      (__COMPAT__ &&\n        isCompatEnabled(\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n          context,\n        ))\n    ) {\n      let exp: ExpressionNode | undefined\n      if (isProp.type === NodeTypes.ATTRIBUTE) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true)\n      } else {\n        exp = isProp.exp\n        if (!exp) {\n          // #10469 handle :is shorthand\n          exp = createSimpleExpression(`is`, false, isProp.arg!.loc)\n          if (!__BROWSER__) {\n            exp = isProp.exp = processExpression(exp, context)\n          }\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp,\n        ])\n      }\n    } else if (\n      isProp.type === NodeTypes.ATTRIBUTE &&\n      isProp.value!.content.startsWith('vue:')\n    ) {\n      // <button is=\"vue:xxx\">\n      // if not <component>, only is value that starts with \"vue:\" will be\n      // treated as component by the parse phase and reach here, unless it's\n      // compat mode where all is values are considered components\n      tag = isProp.value!.content.slice(4)\n    }\n  }\n\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\n  if (builtIn) {\n    // built-ins are simply fallthroughs / have special handling during ssr\n    // so we don't need to import their runtime equivalents\n    if (!ssr) context.helper(builtIn)\n    return builtIn\n  }\n\n  // 3. user component (from setup bindings)\n  // this is skipped in browser build since browser builds do not perform\n  // binding analysis.\n  if (!__BROWSER__) {\n    const fromSetup = resolveSetupReference(tag, context)\n    if (fromSetup) {\n      return fromSetup\n    }\n    const dotIndex = tag.indexOf('.')\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\n      if (ns) {\n        return ns + tag.slice(dotIndex)\n      }\n    }\n  }\n\n  // 4. Self referencing component (inferred from filename)\n  if (\n    !__BROWSER__ &&\n    context.selfName &&\n    capitalize(camelize(tag)) === context.selfName\n  ) {\n    context.helper(RESOLVE_COMPONENT)\n    // codegen.ts has special check for __self postfix when generating\n    // component imports, which will pass additional `maybeSelfReference` flag\n    // to `resolveComponent`.\n    context.components.add(tag + `__self`)\n    return toValidAssetId(tag, `component`)\n  }\n\n  // 5. user component (resolve)\n  context.helper(RESOLVE_COMPONENT)\n  context.components.add(tag)\n  return toValidAssetId(tag, `component`)\n}\n\nfunction resolveSetupReference(name: string, context: TransformContext) {\n  const bindings = context.bindingMetadata\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return\n  }\n\n  const camelName = camelize(name)\n  const PascalName = capitalize(camelName)\n  const checkType = (type: BindingTypes) => {\n    if (bindings[name] === type) {\n      return name\n    }\n    if (bindings[camelName] === type) {\n      return camelName\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName\n    }\n  }\n\n  const fromConst =\n    checkType(BindingTypes.SETUP_CONST) ||\n    checkType(BindingTypes.SETUP_REACTIVE_CONST) ||\n    checkType(BindingTypes.LITERAL_CONST)\n  if (fromConst) {\n    return context.inline\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\n        fromConst\n      : `$setup[${JSON.stringify(fromConst)}]`\n  }\n\n  const fromMaybeRef =\n    checkType(BindingTypes.SETUP_LET) ||\n    checkType(BindingTypes.SETUP_REF) ||\n    checkType(BindingTypes.SETUP_MAYBE_REF)\n  if (fromMaybeRef) {\n    return context.inline\n      ? // setup scope bindings that may be refs need to be unrefed\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\n  }\n\n  const fromProps = checkType(BindingTypes.PROPS)\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${\n      context.inline ? '__props' : '$props'\n    }[${JSON.stringify(fromProps)}])`\n  }\n}\n\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\n\nexport function buildProps(\n  node: ElementNode,\n  context: TransformContext,\n  props: ElementNode['props'] | undefined = node.props,\n  isComponent: boolean,\n  isDynamicComponent: boolean,\n  ssr = false,\n): {\n  props: PropsExpression | undefined\n  directives: DirectiveNode[]\n  patchFlag: number\n  dynamicPropNames: string[]\n  shouldUseBlock: boolean\n} {\n  const { tag, loc: elementLoc, children } = node\n  let properties: ObjectExpression['properties'] = []\n  const mergeArgs: PropsExpression[] = []\n  const runtimeDirectives: DirectiveNode[] = []\n  const hasChildren = children.length > 0\n  let shouldUseBlock = false\n\n  // patchFlag analysis\n  let patchFlag = 0\n  let hasRef = false\n  let hasClassBinding = false\n  let hasStyleBinding = false\n  let hasHydrationEventBinding = false\n  let hasDynamicKeys = false\n  let hasVnodeHook = false\n  const dynamicPropNames: string[] = []\n\n  const pushMergeArg = (arg?: PropsExpression) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc),\n      )\n      properties = []\n    }\n    if (arg) mergeArgs.push(arg)\n  }\n\n  // mark template ref on v-for\n  const pushRefVForMarker = () => {\n    if (context.scopes.vFor > 0) {\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression('ref_for', true),\n          createSimpleExpression('true'),\n        ),\n      )\n    }\n  }\n\n  const analyzePatchFlag = ({ key, value }: Property) => {\n    if (isStaticExp(key)) {\n      const name = key.content\n      const isEventHandler = isOn(name)\n      if (\n        isEventHandler &&\n        (!isComponent || isDynamicComponent) &&\n        // omit the flag for click handlers because hydration gives click\n        // dedicated fast path.\n        name.toLowerCase() !== 'onclick' &&\n        // omit v-model handlers\n        name !== 'onUpdate:modelValue' &&\n        // omit onVnodeXXX hooks\n        !isReservedProp(name)\n      ) {\n        hasHydrationEventBinding = true\n      }\n\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true\n      }\n\n      if (isEventHandler && value.type === NodeTypes.JS_CALL_EXPRESSION) {\n        // handler wrapped with internal helper e.g. withModifiers(fn)\n        // extract the actual expression\n        value = value.arguments[0] as JSChildNode\n      }\n\n      if (\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\n          getConstantType(value, context) > 0)\n      ) {\n        // skip if the prop is a cached handler or has constant value\n        return\n      }\n\n      if (name === 'ref') {\n        hasRef = true\n      } else if (name === 'class') {\n        hasClassBinding = true\n      } else if (name === 'style') {\n        hasStyleBinding = true\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name)\n      }\n\n      // treat the dynamic class and style binding of the component as dynamic props\n      if (\n        isComponent &&\n        (name === 'class' || name === 'style') &&\n        !dynamicPropNames.includes(name)\n      ) {\n        dynamicPropNames.push(name)\n      }\n    } else {\n      hasDynamicKeys = true\n    }\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    // static attribute\n    const prop = props[i]\n    if (prop.type === NodeTypes.ATTRIBUTE) {\n      const { loc, name, nameLoc, value } = prop\n      let isStatic = true\n      if (name === 'ref') {\n        hasRef = true\n        pushRefVForMarker()\n        // in inline mode there is no setupState object, so we can't use string\n        // keys to set the ref. Instead, we need to transform it to pass the\n        // actual ref instead.\n        if (!__BROWSER__ && value && context.inline) {\n          const binding = context.bindingMetadata[value.content]\n          if (\n            binding === BindingTypes.SETUP_LET ||\n            binding === BindingTypes.SETUP_REF ||\n            binding === BindingTypes.SETUP_MAYBE_REF\n          ) {\n            isStatic = false\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression('ref_key', true),\n                createSimpleExpression(value.content, true, value.loc),\n              ),\n            )\n          }\n        }\n      }\n      // skip is on <component>, or is=\"vue:xxx\"\n      if (\n        name === 'is' &&\n        (isComponentTag(tag) ||\n          (value && value.content.startsWith('vue:')) ||\n          (__COMPAT__ &&\n            isCompatEnabled(\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n              context,\n            )))\n      ) {\n        continue\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : '',\n            isStatic,\n            value ? value.loc : loc,\n          ),\n        ),\n      )\n    } else {\n      // directives\n      const { name, arg, exp, loc, modifiers } = prop\n      const isVBind = name === 'bind'\n      const isVOn = name === 'on'\n\n      // skip v-slot - it is handled by its dedicated transform.\n      if (name === 'slot') {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc),\n          )\n        }\n        continue\n      }\n      // skip v-once/v-memo - they are handled by dedicated transforms.\n      if (name === 'once' || name === 'memo') {\n        continue\n      }\n      // skip v-is and :is on <component>\n      if (\n        name === 'is' ||\n        (isVBind &&\n          isStaticArgOf(arg, 'is') &&\n          (isComponentTag(tag) ||\n            (__COMPAT__ &&\n              isCompatEnabled(\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\n                context,\n              ))))\n      ) {\n        continue\n      }\n      // skip v-on in SSR compilation\n      if (isVOn && ssr) {\n        continue\n      }\n\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        (isVBind && isStaticArgOf(arg, 'key')) ||\n        // inline before-update hooks need to force block so that it is invoked\n        // before children\n        (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))\n      ) {\n        shouldUseBlock = true\n      }\n\n      if (isVBind && isStaticArgOf(arg, 'ref')) {\n        pushRefVForMarker()\n      }\n\n      // special case for v-bind and v-on with no argument\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true\n        if (exp) {\n          if (isVBind) {\n            // #10696 in case a v-bind object contains ref\n            pushRefVForMarker()\n            // have to merge early for compat build check\n            pushMergeArg()\n            if (__COMPAT__) {\n              // 2.x v-bind object order compat\n              if (__DEV__) {\n                const hasOverridableKeys = mergeArgs.some(arg => {\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\n                    return arg.properties.some(({ key }) => {\n                      if (\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\n                        !key.isStatic\n                      ) {\n                        return true\n                      }\n                      return (\n                        key.content !== 'class' &&\n                        key.content !== 'style' &&\n                        !isOn(key.content)\n                      )\n                    })\n                  } else {\n                    // dynamic expression\n                    return true\n                  }\n                })\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\n                    context,\n                    loc,\n                  )\n                }\n              }\n\n              if (\n                isCompatEnabled(\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\n                  context,\n                )\n              ) {\n                mergeArgs.unshift(exp)\n                continue\n              }\n            }\n\n            mergeArgs.push(exp)\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            pushMergeArg({\n              type: NodeTypes.JS_CALL_EXPRESSION,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`],\n            })\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\n              loc,\n            ),\n          )\n        }\n        continue\n      }\n\n      // force hydration for v-bind with .prop modifier\n      if (isVBind && modifiers.some(mod => mod.content === 'prop')) {\n        patchFlag |= PatchFlags.NEED_HYDRATION\n      }\n\n      const directiveTransform = context.directiveTransforms[name]\n      if (directiveTransform) {\n        // has built-in directive transform.\n        const { props, needRuntime } = directiveTransform(prop, node, context)\n        !ssr && props.forEach(analyzePatchFlag)\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props, elementLoc))\n        } else {\n          properties.push(...props)\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop)\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime)\n          }\n        }\n      } else if (!isBuiltInDirective(name)) {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop)\n        // custom dirs may use beforeUpdate so they need to force blocks\n        // to ensure before-update gets called before children update\n        if (hasChildren) {\n          shouldUseBlock = true\n        }\n      }\n    }\n  }\n\n  let propsExpression: PropsExpression | undefined = undefined\n\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n  if (mergeArgs.length) {\n    // close up any not-yet-merged props\n    pushMergeArg()\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc,\n      )\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0]\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc,\n    )\n  }\n\n  // patchFlag analysis\n  if (hasDynamicKeys) {\n    patchFlag |= PatchFlags.FULL_PROPS\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= PatchFlags.CLASS\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= PatchFlags.STYLE\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= PatchFlags.PROPS\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= PatchFlags.NEED_HYDRATION\n    }\n  }\n  if (\n    !shouldUseBlock &&\n    (patchFlag === 0 || patchFlag === PatchFlags.NEED_HYDRATION) &&\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\n  ) {\n    patchFlag |= PatchFlags.NEED_PATCH\n  }\n\n  // pre-normalize props, SSR is skipped for now\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case NodeTypes.JS_OBJECT_EXPRESSION:\n        // means that there is no v-bind,\n        // but still need to deal with dynamic key binding\n        let classKeyIndex = -1\n        let styleKeyIndex = -1\n        let hasDynamicKey = false\n\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key\n          if (isStaticExp(key)) {\n            if (key.content === 'class') {\n              classKeyIndex = i\n            } else if (key.content === 'style') {\n              styleKeyIndex = i\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true\n          }\n        }\n\n        const classProp = propsExpression.properties[classKeyIndex]\n        const styleProp = propsExpression.properties[styleKeyIndex]\n\n        // no dynamic key\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value],\n            )\n          }\n          if (\n            styleProp &&\n            // the static style is compiled into an object,\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n            (hasStyleBinding ||\n              (styleProp.value.type === NodeTypes.SIMPLE_EXPRESSION &&\n                styleProp.value.content.trim()[0] === `[`) ||\n              // v-bind:style and style both exist,\n              // v-bind:style with static literal object\n              styleProp.value.type === NodeTypes.JS_ARRAY_EXPRESSION)\n          ) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value],\n            )\n          }\n        } else {\n          // dynamic key binding, wrap with `normalizeProps`\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression],\n          )\n        }\n        break\n      case NodeTypes.JS_CALL_EXPRESSION:\n        // mergeProps call, do nothing\n        break\n      default:\n        // single v-bind\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression,\n            ]),\n          ],\n        )\n        break\n    }\n  }\n\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock,\n  }\n}\n\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties: Property[]): Property[] {\n  const knownProps: Map<string, Property> = new Map()\n  const deduped: Property[] = []\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i]\n    // dynamic keys are always allowed\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\n      deduped.push(prop)\n      continue\n    }\n    const name = prop.key.content\n    const existing = knownProps.get(name)\n    if (existing) {\n      if (name === 'style' || name === 'class' || isOn(name)) {\n        mergeAsArray(existing, prop)\n      }\n      // unexpected duplicate, should have emitted error during parse\n    } else {\n      knownProps.set(name, prop)\n      deduped.push(prop)\n    }\n  }\n  return deduped\n}\n\nfunction mergeAsArray(existing: Property, incoming: Property) {\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\n    existing.value.elements.push(incoming.value)\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc,\n    )\n  }\n}\n\nexport function buildDirectiveArgs(\n  dir: DirectiveNode,\n  context: TransformContext,\n): ArrayExpression {\n  const dirArgs: ArrayExpression['elements'] = []\n  const runtime = directiveImportMap.get(dir)\n  if (runtime) {\n    // built-in directive with runtime\n    dirArgs.push(context.helperString(runtime))\n  } else {\n    // user directive.\n    // see if we have directives exposed via <script setup>\n    const fromSetup =\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\n    if (fromSetup) {\n      dirArgs.push(fromSetup)\n    } else {\n      // inject statement for resolving directive\n      context.helper(RESOLVE_DIRECTIVE)\n      context.directives.add(dir.name)\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\n    }\n  }\n  const { loc } = dir\n  if (dir.exp) dirArgs.push(dir.exp)\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`)\n    }\n    dirArgs.push(dir.arg)\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`)\n      }\n      dirArgs.push(`void 0`)\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc)\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(modifier =>\n          createObjectProperty(modifier, trueExpression),\n        ),\n        loc,\n      ),\n    )\n  }\n  return createArrayExpression(dirArgs, dir.loc)\n}\n\nfunction stringifyDynamicPropNames(props: string[]): string {\n  let propsNamesString = `[`\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i])\n    if (i < l - 1) propsNamesString += ', '\n  }\n  return propsNamesString + `]`\n}\n\nfunction isComponentTag(tag: string) {\n  return tag === 'component' || tag === 'Component'\n}\n", "import type { NodeTransform, TransformContext } from '../transform'\nimport {\n  type CallExpression,\n  type ExpressionNode,\n  NodeTypes,\n  type SlotOutletNode,\n  createCallExpression,\n  createFunctionExpression,\n  createSimpleExpression,\n} from '../ast'\nimport { isSlotOutlet, isStaticArgOf, isStaticExp } from '../utils'\nimport { type PropsExpression, buildProps } from './transformElement'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport { RENDER_SLOT } from '../runtimeHelpers'\nimport { camelize } from '@vue/shared'\nimport { processExpression } from './transformExpression'\n\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node\n    const { slotName, slotProps } = processSlotOutlet(node, context)\n\n    const slotArgs: CallExpression['arguments'] = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      '{}',\n      'undefined',\n      'true',\n    ]\n    let expectedLen = 2\n\n    if (slotProps) {\n      slotArgs[2] = slotProps\n      expectedLen = 3\n    }\n\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc)\n      expectedLen = 4\n    }\n\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5\n    }\n    slotArgs.splice(expectedLen) // remove unused arguments\n\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc,\n    )\n  }\n}\n\ninterface SlotOutletProcessResult {\n  slotName: string | ExpressionNode\n  slotProps: PropsExpression | undefined\n}\n\nexport function processSlotOutlet(\n  node: SlotOutletNode,\n  context: TransformContext,\n): SlotOutletProcessResult {\n  let slotName: string | ExpressionNode = `\"default\"`\n  let slotProps: PropsExpression | undefined = undefined\n\n  const nonNameProps = []\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n    if (p.type === NodeTypes.ATTRIBUTE) {\n      if (p.value) {\n        if (p.name === 'name') {\n          slotName = JSON.stringify(p.value.content)\n        } else {\n          p.name = camelize(p.name)\n          nonNameProps.push(p)\n        }\n      }\n    } else {\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n        if (p.exp) {\n          slotName = p.exp\n        } else if (p.arg && p.arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n          const name = camelize(p.arg.content)\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc)\n          if (!__BROWSER__) {\n            slotName = p.exp = processExpression(p.exp, context)\n          }\n        }\n      } else {\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content)\n        }\n        nonNameProps.push(p)\n      }\n    }\n  }\n\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false,\n    )\n    slotProps = props\n\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\n          directives[0].loc,\n        ),\n      )\n    }\n  }\n\n  return {\n    slotName,\n    slotProps,\n  }\n}\n", "import type { DirectiveTransform, DirectiveTransformResult } from '../transform'\nimport {\n  type DirectiveNode,\n  ElementTypes,\n  type ExpressionNode,\n  NodeTypes,\n  type SimpleExpressionNode,\n  createCompoundExpression,\n  createObjectProperty,\n  createSimpleExpression,\n} from '../ast'\nimport { camelize, toHandlerKey } from '@vue/shared'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport { processExpression } from './transformExpression'\nimport { validateBrowserExpression } from '../validateExpression'\nimport { hasScopeRef, isFnExpression, isMemberExpression } from '../utils'\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\n\nexport interface VOnDirectiveNode extends DirectiveNode {\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\n  // codegen for the entire props object. This transform here is only for v-on\n  // *with* args.\n  arg: ExpressionNode\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\n  // skipped by transformExpression as a special case.\n  exp: SimpleExpressionNode | undefined\n}\n\nexport const transformOn: DirectiveTransform = (\n  dir,\n  node,\n  context,\n  augmentor,\n) => {\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\n  }\n  let eventName: ExpressionNode\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\n    if (arg.isStatic) {\n      let rawName = arg.content\n      if (__DEV__ && rawName.startsWith('vnode')) {\n        context.onError(createCompilerError(ErrorCodes.X_VNODE_HOOKS, arg.loc))\n      }\n      if (rawName.startsWith('vue:')) {\n        rawName = `vnode-${rawName.slice(4)}`\n      }\n      const eventString =\n        node.tagType !== ElementTypes.ELEMENT ||\n        rawName.startsWith('vnode') ||\n        !/[A-Z]/.test(rawName)\n          ? // for non-element and vnode lifecycle event listeners, auto convert\n            // it to camelCase. See issue #2249\n            toHandlerKey(camelize(rawName))\n          : // preserve case for plain element listeners that have uppercase\n            // letters, as these may be custom elements' custom events\n            `on:${rawName}`\n      eventName = createSimpleExpression(eventString, true, arg.loc)\n    } else {\n      // #2388\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`,\n      ])\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\n    eventName.children.push(`)`)\n  }\n\n  // handler processing\n  let exp: ExpressionNode | undefined = dir.exp as\n    | SimpleExpressionNode\n    | undefined\n  if (exp && !exp.content.trim()) {\n    exp = undefined\n  }\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp, context)\n    const isInlineStatement = !(isMemberExp || isFnExpression(exp, context))\n    const hasMultipleStatements = exp.content.includes(`;`)\n\n    // process the expression since it's been skipped\n    if (!__BROWSER__ && context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`)\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements,\n      )\n      isInlineStatement && context.removeIdentifiers(`$event`)\n      // with scope analysis, the function is hoistable if it has no reference\n      // to scope variables.\n      shouldCache =\n        context.cacheHandlers &&\n        // unnecessary to cache inside v-once\n        !context.inVOnce &&\n        // runtime constants don't need to be cached\n        // (this is analyzed by compileScript in SFC <script setup>)\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\n        // #1541 bail if this is a member exp handler passed to a component -\n        // we need to use the original function to preserve arity,\n        // e.g. <transition> relies on checking cb.length to determine\n        // transition end handling. Inline function is ok since its arity\n        // is preserved even when cached.\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\n        // bail if the function references closure variables (v-for, v-slot)\n        // it must be passed fresh to avoid stale values.\n        !hasScopeRef(exp, context.identifiers)\n      // If the expression is optimizable and is a member expression pointing\n      // to a function, turn it into invocation (and wrap in an arrow function\n      // below) so that it always accesses the latest value when called - thus\n      // avoiding the need to be patched.\n      if (shouldCache && isMemberExp) {\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\n        }\n      }\n    }\n\n    if (__DEV__ && __BROWSER__) {\n      validateBrowserExpression(\n        exp as SimpleExpressionNode,\n        context,\n        false,\n        hasMultipleStatements,\n      )\n    }\n\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([\n        `${\n          isInlineStatement\n            ? !__BROWSER__ && context.isTS\n              ? `($event: any)`\n              : `$event`\n            : `${\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\n              }(...args)`\n        } => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`,\n      ])\n    }\n  }\n\n  let ret: DirectiveTransformResult = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc),\n      ),\n    ],\n  }\n\n  // apply extended compiler augmentor\n  if (augmentor) {\n    ret = augmentor(ret)\n  }\n\n  if (shouldCache) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline handlers on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value)\n  }\n\n  // mark the key as handler for props normalization check\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\n  return ret\n}\n", "import type { NodeTransform } from '../transform'\nimport {\n  type CallExpression,\n  type CompoundExpressionNode,\n  ConstantTypes,\n  ElementTypes,\n  NodeTypes,\n  createCallExpression,\n  createCompoundExpression,\n} from '../ast'\nimport { isText } from '../utils'\nimport { CREATE_TEXT } from '../runtimeHelpers'\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\nimport { getConstantType } from './cacheStatic'\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nexport const transformText: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ROOT ||\n    node.type === NodeTypes.ELEMENT ||\n    node.type === NodeTypes.FOR ||\n    node.type === NodeTypes.IF_BRANCH\n  ) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return () => {\n      const children = node.children\n      let currentContainer: CompoundExpressionNode | undefined = undefined\n      let hasText = false\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child)) {\n          hasText = true\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j]\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc,\n                )\n              }\n              // merge adjacent text node into current\n              currentContainer.children.push(` + `, next)\n              children.splice(j, 1)\n              j--\n            } else {\n              currentContainer = undefined\n              break\n            }\n          }\n        }\n      }\n\n      if (\n        !hasText ||\n        // if this is a plain element with a single text child, leave it\n        // as-is since the runtime has dedicated fast path for this by directly\n        // setting textContent of the element.\n        // for component root it's always normalized anyway.\n        (children.length === 1 &&\n          (node.type === NodeTypes.ROOT ||\n            (node.type === NodeTypes.ELEMENT &&\n              node.tagType === ElementTypes.ELEMENT &&\n              // #3756\n              // custom directives can potentially add DOM elements arbitrarily,\n              // we need to avoid setting textContent of the element at runtime\n              // to avoid accidentally overwriting the DOM elements added\n              // by the user through custom directives.\n              !node.props.find(\n                p =>\n                  p.type === NodeTypes.DIRECTIVE &&\n                  !context.directiveTransforms[p.name],\n              ) &&\n              // in compat mode, <template> tags with no special directives\n              // will be rendered as a fragment so its children must be\n              // converted into vnodes.\n              !(__COMPAT__ && node.tag === 'template'))))\n      ) {\n        return\n      }\n\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\n      // runtime normalization.\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\n          const callArgs: CallExpression['arguments'] = []\n          // createTextVNode defaults to single whitespace, so if it is a\n          // single space the code could be an empty call to save bytes.\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\n            callArgs.push(child)\n          }\n          // mark dynamic text with flag so it gets patched inside a block\n          if (\n            !context.ssr &&\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\n          ) {\n            callArgs.push(\n              PatchFlags.TEXT +\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``),\n            )\n          }\n          children[i] = {\n            type: NodeTypes.TEXT_CALL,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs,\n            ),\n          }\n        }\n      }\n    }\n  }\n}\n", "import type { NodeTransform } from '../transform'\nimport { findDir } from '../utils'\nimport { type ElementNode, type ForNode, type IfNode, NodeTypes } from '../ast'\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\n\nconst seen = new WeakSet()\n\nexport const transformOnce: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\n    if (seen.has(node) || context.inVOnce || context.inSSR) {\n      return\n    }\n    seen.add(node)\n    context.inVOnce = true\n    context.helper(SET_BLOCK_TRACKING)\n    return () => {\n      context.inVOnce = false\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true /* isVNode */,\n          true /* inVOnce */,\n        )\n      }\n    }\n  }\n}\n", "import type { DirectiveTransform } from '../transform'\nimport {\n  ConstantTypes,\n  ElementTypes,\n  type ExpressionNode,\n  NodeTypes,\n  type Property,\n  createCompoundExpression,\n  createObjectProperty,\n  createSimpleExpression,\n} from '../ast'\nimport { ErrorCodes, createCompilerError } from '../errors'\nimport {\n  hasScopeRef,\n  isMemberExpression,\n  isSimpleIdentifier,\n  isStaticExp,\n} from '../utils'\nimport { IS_REF } from '../runtimeHelpers'\nimport { BindingTypes } from '../options'\nimport { camelize } from '@vue/shared'\n\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\n  const { exp, arg } = dir\n  if (!exp) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc),\n    )\n    return createTransformProps()\n  }\n\n  // we assume v-model directives are always parsed\n  // (not artificially created by a transform)\n  const rawExp = exp.loc.source.trim()\n  const expString =\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\n\n  // im SFC <script setup> inline mode, the exp may have been transformed into\n  // _unref(exp)\n  const bindingType = context.bindingMetadata[rawExp]\n\n  // check props\n  if (\n    bindingType === BindingTypes.PROPS ||\n    bindingType === BindingTypes.PROPS_ALIASED\n  ) {\n    context.onError(createCompilerError(ErrorCodes.X_V_MODEL_ON_PROPS, exp.loc))\n    return createTransformProps()\n  }\n\n  const maybeRef =\n    !__BROWSER__ &&\n    context.inline &&\n    (bindingType === BindingTypes.SETUP_LET ||\n      bindingType === BindingTypes.SETUP_REF ||\n      bindingType === BindingTypes.SETUP_MAYBE_REF)\n\n  if (!expString.trim() || (!isMemberExpression(exp, context) && !maybeRef)) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc),\n    )\n    return createTransformProps()\n  }\n\n  if (\n    !__BROWSER__ &&\n    context.prefixIdentifiers &&\n    isSimpleIdentifier(expString) &&\n    context.identifiers[expString]\n  ) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc),\n    )\n    return createTransformProps()\n  }\n\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\n  const eventName = arg\n    ? isStaticExp(arg)\n      ? `onUpdate:${camelize(arg.content)}`\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\n    : `onUpdate:modelValue`\n\n  let assignmentExp: ExpressionNode\n  const eventArg = context.isTS ? `($event: any)` : `$event`\n  if (maybeRef) {\n    if (bindingType === BindingTypes.SETUP_REF) {\n      // v-model used on known ref.\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`,\n      ])\n    } else {\n      // v-model used on a potentially ref binding in <script setup> inline mode.\n      // the assignment needs to check whether the binding is actually a ref.\n      const altAssignment =\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`,\n      ])\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`,\n    ])\n  }\n\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp!),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp),\n  ]\n\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\n  if (\n    !__BROWSER__ &&\n    context.prefixIdentifiers &&\n    !context.inVOnce &&\n    context.cacheHandlers &&\n    !hasScopeRef(exp, context.identifiers)\n  ) {\n    props[1].value = context.cache(props[1].value)\n  }\n\n  // modelModifiers: { foo: true, \"bar-baz\": true }\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\n    const modifiers = dir.modifiers\n      .map(m => m.content)\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\n      .join(`, `)\n    const modifiersKey = arg\n      ? isStaticExp(arg)\n        ? `${arg.content}Modifiers`\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\n      : `modelModifiers`\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          ConstantTypes.CAN_CACHE,\n        ),\n      ),\n    )\n  }\n\n  return createTransformProps(props)\n}\n\nfunction createTransformProps(props: Property[] = []) {\n  return { props }\n}\n", "import type { NodeTransform } from '../transform'\nimport { findDir } from '../utils'\nimport {\n  ElementTypes,\n  type MemoExpression,\n  NodeTypes,\n  type PlainElementNode,\n  convertToBlock,\n  createCallExpression,\n  createFunctionExpression,\n} from '../ast'\nimport { WITH_MEMO } from '../runtimeHelpers'\n\nconst seen = new WeakSet()\n\nexport const transformMemo: NodeTransform = (node, context) => {\n  if (node.type === NodeTypes.ELEMENT) {\n    const dir = findDir(node, 'memo')\n    if (!dir || seen.has(node)) {\n      return\n    }\n    seen.add(node)\n    return () => {\n      const codegenNode =\n        node.codegenNode ||\n        (context.currentNode as PlainElementNode).codegenNode\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\n        // non-component sub tree should be turned into a block\n        if (node.tagType !== ElementTypes.COMPONENT) {\n          convertToBlock(codegenNode, context)\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp!,\n          createFunctionExpression(undefined, codegenNode),\n          `_cache`,\n          String(context.cached.length),\n        ]) as MemoExpression\n        // increment cache count\n        context.cached.push(null)\n      }\n    }\n  }\n}\n", "import type { CompilerOptions } from './options'\nimport { baseParse } from './parser'\nimport {\n  type DirectiveTransform,\n  type NodeTransform,\n  transform,\n} from './transform'\nimport { type CodegenResult, generate } from './codegen'\nimport type { RootNode } from './ast'\nimport { extend, isString } from '@vue/shared'\nimport { transformIf } from './transforms/vIf'\nimport { transformFor } from './transforms/vFor'\nimport { transformExpression } from './transforms/transformExpression'\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\nimport { transformElement } from './transforms/transformElement'\nimport { transformOn } from './transforms/vOn'\nimport { transformBind } from './transforms/vBind'\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\nimport { transformText } from './transforms/transformText'\nimport { transformOnce } from './transforms/vOnce'\nimport { transformModel } from './transforms/vModel'\nimport { transformFilter } from './compat/transformFilter'\nimport { ErrorCodes, createCompilerError, defaultOnError } from './errors'\nimport { transformMemo } from './transforms/vMemo'\n\nexport type TransformPreset = [\n  NodeTransform[],\n  Record<string, DirectiveTransform>,\n]\n\nexport function getBaseTransformPreset(\n  prefixIdentifiers?: boolean,\n): TransformPreset {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...(__COMPAT__ ? [transformFilter] : []),\n      ...(!__BROWSER__ && prefixIdentifiers\n        ? [\n            // order is important\n            trackVForSlotScopes,\n            transformExpression,\n          ]\n        : __BROWSER__ && __DEV__\n          ? [transformExpression]\n          : []),\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText,\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel,\n    },\n  ]\n}\n\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nexport function baseCompile(\n  source: string | RootNode,\n  options: CompilerOptions = {},\n): CodegenResult {\n  const onError = options.onError || defaultOnError\n  const isModuleMode = options.mode === 'module'\n  /* v8 ignore start */\n  if (__BROWSER__) {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\n    } else if (isModuleMode) {\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\n    }\n  }\n  /* v8 ignore stop */\n\n  const prefixIdentifiers =\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\n  }\n\n  const resolvedOptions = extend({}, options, {\n    prefixIdentifiers,\n  })\n  const ast = isString(source) ? baseParse(source, resolvedOptions) : source\n  const [nodeTransforms, directiveTransforms] =\n    getBaseTransformPreset(prefixIdentifiers)\n\n  if (!__BROWSER__ && options.isTS) {\n    const { expressionPlugins } = options\n    if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\n      options.expressionPlugins = [...(expressionPlugins || []), 'typescript']\n    }\n  }\n\n  transform(\n    ast,\n    extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...(options.nodeTransforms || []), // user transforms\n      ],\n      directiveTransforms: extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}, // user transforms\n      ),\n    }),\n  )\n\n  return generate(ast, resolvedOptions)\n}\n", "import type { DirectiveTransform } from '../transform'\n\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\n", "import { registerRuntimeHelpers } from '@vue/compiler-core'\n\nexport const V_MODEL_RADIO: unique symbol = Symbol(__DEV__ ? `vModelRadio` : ``)\nexport const V_MODEL_CHECKBOX: unique symbol = Symbol(\n  __DEV__ ? `vModelCheckbox` : ``,\n)\nexport const V_MODEL_TEXT: unique symbol = Symbol(__DEV__ ? `vModelText` : ``)\nexport const V_MODEL_SELECT: unique symbol = Symbol(\n  __DEV__ ? `vModelSelect` : ``,\n)\nexport const V_MODEL_DYNAMIC: unique symbol = Symbol(\n  __DEV__ ? `vModelDynamic` : ``,\n)\n\nexport const V_ON_WITH_MODIFIERS: unique symbol = Symbol(\n  __DEV__ ? `vOnModifiersGuard` : ``,\n)\nexport const V_ON_WITH_KEYS: unique symbol = Symbol(\n  __DEV__ ? `vOnKeysGuard` : ``,\n)\n\nexport const V_SHOW: unique symbol = Symbol(__DEV__ ? `vShow` : ``)\n\nexport const TRANSITION: unique symbol = Symbol(__DEV__ ? `Transition` : ``)\nexport const TRANSITION_GROUP: unique symbol = Symbol(\n  __DEV__ ? `TransitionGroup` : ``,\n)\n\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`,\n})\n", "/* eslint-disable no-restricted-globals */\n\nlet decoder: HTMLDivElement\n\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\n  if (!decoder) {\n    decoder = document.createElement('div')\n  }\n  if (asAttr) {\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\n    return decoder.children[0].getAttribute('foo')!\n  } else {\n    decoder.innerHTML = raw\n    return decoder.textContent!\n  }\n}\n", "import { Namespaces, NodeTypes, type ParserOptions } from '@vue/compiler-core'\nimport { isHTMLTag, isMathMLTag, isSVGTag, isVoidTag } from '@vue/shared'\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\n\nexport const parserOptions: ParserOptions = {\n  parseMode: 'html',\n  isVoidTag,\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\n  isPreTag: tag => tag === 'pre',\n  isIgnoreNewlineTag: tag => tag === 'pre' || tag === 'textarea',\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : undefined,\n\n  isBuiltInComponent: tag => {\n    if (tag === 'Transition' || tag === 'transition') {\n      return TRANSITION\n    } else if (tag === 'TransitionGroup' || tag === 'transition-group') {\n      return TRANSITION_GROUP\n    }\n  },\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent, rootNamespace) {\n    let ns = parent ? parent.ns : rootNamespace\n    if (parent && ns === Namespaces.MATH_ML) {\n      if (parent.tag === 'annotation-xml') {\n        if (tag === 'svg') {\n          return Namespaces.SVG\n        }\n        if (\n          parent.props.some(\n            a =>\n              a.type === NodeTypes.ATTRIBUTE &&\n              a.name === 'encoding' &&\n              a.value != null &&\n              (a.value.content === 'text/html' ||\n                a.value.content === 'application/xhtml+xml'),\n          )\n        ) {\n          ns = Namespaces.HTML\n        }\n      } else if (\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\n        tag !== 'mglyph' &&\n        tag !== 'malignmark'\n      ) {\n        ns = Namespaces.HTML\n      }\n    } else if (parent && ns === Namespaces.SVG) {\n      if (\n        parent.tag === 'foreignObject' ||\n        parent.tag === 'desc' ||\n        parent.tag === 'title'\n      ) {\n        ns = Namespaces.HTML\n      }\n    }\n\n    if (ns === Namespaces.HTML) {\n      if (tag === 'svg') {\n        return Namespaces.SVG\n      }\n      if (tag === 'math') {\n        return Namespaces.MATH_ML\n      }\n    }\n    return ns\n  },\n}\n", "import {\n  ConstantTypes,\n  type NodeTransform,\n  NodeTypes,\n  type SimpleExpressionNode,\n  type SourceLocation,\n  createSimpleExpression,\n} from '@vue/compiler-core'\nimport { parseStringStyle } from '@vue/shared'\n\n// Parse inline CSS strings for static style attributes into an object.\n// This is a NodeTransform since it works on the static `style` attribute and\n// converts it into a dynamic equivalent:\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\n// It is then processed by `transformElement` and included in the generated\n// props.\nexport const transformStyle: NodeTransform = node => {\n  if (node.type === NodeTypes.ELEMENT) {\n    node.props.forEach((p, i) => {\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\n        // replace p with an expression node\n        node.props[i] = {\n          type: NodeTypes.DIRECTIVE,\n          name: `bind`,\n          arg: createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc,\n        }\n      }\n    })\n  }\n}\n\nconst parseInlineCSS = (\n  cssText: string,\n  loc: SourceLocation,\n): SimpleExpressionNode => {\n  const normalized = parseStringStyle(cssText)\n  return createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    ConstantTypes.CAN_STRINGIFY,\n  )\n}\n", "import {\n  type CompilerError,\n  ErrorCodes,\n  type SourceLocation,\n  createCompilerError,\n} from '@vue/compiler-core'\n\nexport interface DOMCompilerError extends CompilerError {\n  code: DOMErrorCodes\n}\n\nexport function createDOMCompilerError(\n  code: DOMErrorCodes,\n  loc?: SourceLocation,\n) {\n  return createCompilerError(\n    code,\n    loc,\n    __DEV__ || !__BROWSER__ ? DOMErrorMessages : undefined,\n  ) as DOMCompilerError\n}\n\nexport enum DOMErrorCodes {\n  X_V_HTML_NO_EXPRESSION = 53 /* ErrorCodes.__EXTEND_POINT__ */,\n  X_V_HTML_WITH_CHILDREN,\n  X_V_TEXT_NO_EXPRESSION,\n  X_V_TEXT_WITH_CHILDREN,\n  X_V_MODEL_ON_INVALID_ELEMENT,\n  X_V_MODEL_ARG_ON_ELEMENT,\n  X_V_MODEL_ON_FILE_INPUT_ELEMENT,\n  X_V_MODEL_UNNECESSARY_VALUE,\n  X_V_SHOW_NO_EXPRESSION,\n  X_TRANSITION_INVALID_CHILDREN,\n  X_IGNORED_SIDE_EFFECT_TAG,\n  __EXTEND_POINT__,\n}\n\nif (__TEST__) {\n  // esbuild cannot infer enum increments if first value is from another\n  // file, so we have to manually keep them in sync. this check ensures it\n  // errors out if there are collisions.\n  if (DOMErrorCodes.X_V_HTML_NO_EXPRESSION < ErrorCodes.__EXTEND_POINT__) {\n    throw new Error(\n      `DOMErrorCodes need to be updated to ${\n        ErrorCodes.__EXTEND_POINT__ + 1\n      } to match extension point from core ErrorCodes.`,\n    )\n  }\n}\n\nexport const DOMErrorMessages: { [code: number]: string } = {\n  [DOMErrorCodes.X_V_HTML_NO_EXPRESSION]: `v-html is missing expression.`,\n  [DOMErrorCodes.X_V_HTML_WITH_CHILDREN]: `v-html will override element children.`,\n  [DOMErrorCodes.X_V_TEXT_NO_EXPRESSION]: `v-text is missing expression.`,\n  [DOMErrorCodes.X_V_TEXT_WITH_CHILDREN]: `v-text will override element children.`,\n  [DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT]: `v-model argument is not supported on plain elements.`,\n  [DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [DOMErrorCodes.X_V_SHOW_NO_EXPRESSION]: `v-show is missing expression.`,\n  [DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN]: `<Transition> expects exactly one child element or component.`,\n  [DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`,\n}\n", "import {\n  type DirectiveTransform,\n  createObjectProperty,\n  createSimpleExpression,\n} from '@vue/compiler-core'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\n\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc),\n    )\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc),\n    )\n    node.children.length = 0\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`innerHTML`, true, loc),\n        exp || createSimpleExpression('', true),\n      ),\n    ],\n  }\n}\n", "import {\n  type DirectiveTransform,\n  TO_DISPLAY_STRING,\n  createCallExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  getConstantType,\n} from '@vue/compiler-core'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\n\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc),\n    )\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc),\n    )\n    node.children.length = 0\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`textContent`, true),\n        exp\n          ? getConstantType(exp, context) > 0\n            ? exp\n            : createCallExpression(\n                context.helperString(TO_DISPLAY_STRING),\n                [exp],\n                loc,\n              )\n          : createSimpleExpression('', true),\n      ),\n    ],\n  }\n}\n", "import {\n  type DirectiveTransform,\n  ElementTypes,\n  NodeTypes,\n  transformModel as baseTransform,\n  findDir,\n  findProp,\n  hasDynamicKeyVBind,\n  isStaticArgOf,\n} from '@vue/compiler-core'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\nimport {\n  V_MODEL_CHECKBOX,\n  V_MODEL_DYNAMIC,\n  V_MODEL_RADIO,\n  V_MODEL_SELECT,\n  V_MODEL_TEXT,\n} from '../runtimeHelpers'\n\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\n  const baseResult = baseTransform(dir, node, context)\n  // base transform has errors OR component v-model (only need props)\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\n    return baseResult\n  }\n\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\n        dir.arg.loc,\n      ),\n    )\n  }\n\n  function checkDuplicatedValue() {\n    const value = findDir(node, 'bind')\n    if (value && isStaticArgOf(value.arg, 'value')) {\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\n          value.loc,\n        ),\n      )\n    }\n  }\n\n  const { tag } = node\n  const isCustomElement = context.isCustomElement(tag)\n  if (\n    tag === 'input' ||\n    tag === 'textarea' ||\n    tag === 'select' ||\n    isCustomElement\n  ) {\n    let directiveToUse = V_MODEL_TEXT\n    let isInvalidType = false\n    if (tag === 'input' || isCustomElement) {\n      const type = findProp(node, `type`)\n      if (type) {\n        if (type.type === NodeTypes.DIRECTIVE) {\n          // :type=\"foo\"\n          directiveToUse = V_MODEL_DYNAMIC\n        } else if (type.value) {\n          switch (type.value.content) {\n            case 'radio':\n              directiveToUse = V_MODEL_RADIO\n              break\n            case 'checkbox':\n              directiveToUse = V_MODEL_CHECKBOX\n              break\n            case 'file':\n              isInvalidType = true\n              context.onError(\n                createDOMCompilerError(\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\n                  dir.loc,\n                ),\n              )\n              break\n            default:\n              // text type\n              __DEV__ && checkDuplicatedValue()\n              break\n          }\n        }\n      } else if (hasDynamicKeyVBind(node)) {\n        // element has bindings with dynamic keys, which can possibly contain\n        // \"type\".\n        directiveToUse = V_MODEL_DYNAMIC\n      } else {\n        // text type\n        __DEV__ && checkDuplicatedValue()\n      }\n    } else if (tag === 'select') {\n      directiveToUse = V_MODEL_SELECT\n    } else {\n      // textarea\n      __DEV__ && checkDuplicatedValue()\n    }\n    // inject runtime directive\n    // by returning the helper symbol via needRuntime\n    // the import will replaced a resolveDirective call.\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse)\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\n        dir.loc,\n      ),\n    )\n  }\n\n  // native vmodel doesn't need the `modelValue` props since they are also\n  // passed to the runtime as `binding.value`. removing it reduces code size.\n  baseResult.props = baseResult.props.filter(\n    p =>\n      !(\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\n        p.key.content === 'modelValue'\n      ),\n  )\n\n  return baseResult\n}\n", "import {\n  CompilerDeprecationTypes,\n  type DirectiveTransform,\n  type ExpressionNode,\n  NodeTypes,\n  type SimpleExpressionNode,\n  type SourceLocation,\n  type TransformContext,\n  transformOn as baseTransform,\n  checkCompatEnabled,\n  createCallExpression,\n  createCompoundExpression,\n  createObjectProperty,\n  createSimpleExpression,\n  isStaticExp,\n} from '@vue/compiler-core'\nimport { V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS } from '../runtimeHelpers'\nimport { capitalize, makeMap } from '@vue/shared'\n\nconst isEventOptionModifier = /*@__PURE__*/ makeMap(`passive,once,capture`)\nconst isNonKeyModifier = /*@__PURE__*/ makeMap(\n  // event propagation management\n  `stop,prevent,self,` +\n    // system modifiers + exact\n    `ctrl,shift,alt,meta,exact,` +\n    // mouse\n    `middle`,\n)\n// left & right could be mouse or key modifiers based on event type\nconst maybeKeyModifier = /*@__PURE__*/ makeMap('left,right')\nconst isKeyboardEvent = /*@__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`)\n\nconst resolveModifiers = (\n  key: ExpressionNode,\n  modifiers: SimpleExpressionNode[],\n  context: TransformContext,\n  loc: SourceLocation,\n) => {\n  const keyModifiers = []\n  const nonKeyModifiers = []\n  const eventOptionModifiers = []\n\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i].content\n\n    if (\n      __COMPAT__ &&\n      modifier === 'native' &&\n      checkCompatEnabled(\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\n        context,\n        loc,\n      )\n    ) {\n      eventOptionModifiers.push(modifier)\n    } else if (isEventOptionModifier(modifier)) {\n      // eventOptionModifiers: modifiers for addEventListener() options,\n      // e.g. .passive & .capture\n      eventOptionModifiers.push(modifier)\n    } else {\n      // runtimeModifiers: modifiers that needs runtime guards\n      if (maybeKeyModifier(modifier)) {\n        if (isStaticExp(key)) {\n          if (\n            isKeyboardEvent((key as SimpleExpressionNode).content.toLowerCase())\n          ) {\n            keyModifiers.push(modifier)\n          } else {\n            nonKeyModifiers.push(modifier)\n          }\n        } else {\n          keyModifiers.push(modifier)\n          nonKeyModifiers.push(modifier)\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier)\n        } else {\n          keyModifiers.push(modifier)\n        }\n      }\n    }\n  }\n\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers,\n  }\n}\n\nconst transformClick = (key: ExpressionNode, event: string) => {\n  const isStaticClick =\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\n  return isStaticClick\n    ? createSimpleExpression(event, true)\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\n      ? createCompoundExpression([\n          `(`,\n          key,\n          `) === \"onClick\" ? \"${event}\" : (`,\n          key,\n          `)`,\n        ])\n      : key\n}\n\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\n  return baseTransform(dir, node, context, baseResult => {\n    const { modifiers } = dir\n    if (!modifiers.length) return baseResult\n\n    let { key, value: handlerExp } = baseResult.props[0]\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\n      resolveModifiers(key, modifiers, context, dir.loc)\n\n    // normalize click.right and click.middle since they don't actually fire\n    if (nonKeyModifiers.includes('right')) {\n      key = transformClick(key, `onContextmenu`)\n    }\n    if (nonKeyModifiers.includes('middle')) {\n      key = transformClick(key, `onMouseup`)\n    }\n\n    if (nonKeyModifiers.length) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers),\n      ])\n    }\n\n    if (\n      keyModifiers.length &&\n      // if event name is dynamic, always wrap with keys guard\n      (!isStaticExp(key) || isKeyboardEvent(key.content.toLowerCase()))\n    ) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers),\n      ])\n    }\n\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\n      key = isStaticExp(key)\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\n    }\n\n    return {\n      props: [createObjectProperty(key, handlerExp)],\n    }\n  })\n}\n", "import type { DirectiveTransform } from '@vue/compiler-core'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\nimport { V_SHOW } from '../runtimeHelpers'\n\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\n  const { exp, loc } = dir\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc),\n    )\n  }\n\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW),\n  }\n}\n", "import {\n  type ComponentNode,\n  ElementTypes,\n  type IfBranchNode,\n  type NodeTransform,\n  NodeTypes,\n} from '@vue/compiler-core'\nimport { TRANSITION } from '../runtimeHelpers'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\n\nexport const transformTransition: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.COMPONENT\n  ) {\n    const component = context.isBuiltInComponent(node.tag)\n    if (component === TRANSITION) {\n      return () => {\n        if (!node.children.length) {\n          return\n        }\n\n        // warn multiple transition children\n        if (hasMultipleChildren(node)) {\n          context.onError(\n            createDOMCompilerError(\n              DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN,\n              {\n                start: node.children[0].loc.start,\n                end: node.children[node.children.length - 1].loc.end,\n                source: '',\n              },\n            ),\n          )\n        }\n\n        // check if it's s single child w/ v-show\n        // if yes, inject \"persisted: true\" to the transition props\n        const child = node.children[0]\n        if (child.type === NodeTypes.ELEMENT) {\n          for (const p of child.props) {\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'show') {\n              node.props.push({\n                type: NodeTypes.ATTRIBUTE,\n                name: 'persisted',\n                nameLoc: node.loc,\n                value: undefined,\n                loc: node.loc,\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction hasMultipleChildren(node: ComponentNode | IfBranchNode): boolean {\n  // #1352 filter out potential comment nodes.\n  const children = (node.children = node.children.filter(\n    c =>\n      c.type !== NodeTypes.COMMENT &&\n      !(c.type === NodeTypes.TEXT && !c.content.trim()),\n  ))\n  const child = children[0]\n  return (\n    children.length !== 1 ||\n    child.type === NodeTypes.FOR ||\n    (child.type === NodeTypes.IF && child.branches.some(hasMultipleChildren))\n  )\n}\n", "import { ElementTypes, type NodeTransform, NodeTypes } from '@vue/compiler-core'\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\n\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.ELEMENT &&\n    (node.tag === 'script' || node.tag === 'style')\n  ) {\n    __DEV__ &&\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG,\n          node.loc,\n        ),\n      )\n    context.removeNode()\n  }\n}\n", "/**\n * Copied from https://github.com/MananTank/validate-html-nesting\n * with ISC license\n *\n * To avoid runtime dependency on validate-html-nesting\n * This file should not change very often in the original repo\n * but we may need to keep it up-to-date from time to time.\n */\n\n/**\n * returns true if given parent-child nesting is valid HTML\n */\nexport function isValidHTMLNesting(parent: string, child: string): boolean {\n  // if we know the list of children that are the only valid children for the given parent\n  if (parent in onlyValidChildren) {\n    return onlyValidChildren[parent].has(child)\n  }\n\n  // if we know the list of parents that are the only valid parents for the given child\n  if (child in onlyValidParents) {\n    return onlyValidParents[child].has(parent)\n  }\n\n  // if we know the list of children that are NOT valid for the given parent\n  if (parent in knownInvalidChildren) {\n    // check if the child is in the list of invalid children\n    // if so, return false\n    if (knownInvalidChildren[parent].has(child)) return false\n  }\n\n  // if we know the list of parents that are NOT valid for the given child\n  if (child in knownInvalidParents) {\n    // check if the parent is in the list of invalid parents\n    // if so, return false\n    if (knownInvalidParents[child].has(parent)) return false\n  }\n\n  return true\n}\n\nconst headings = new Set(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])\nconst emptySet = new Set([])\n\n/**\n * maps element to set of elements that can be it's children, no other */\nconst onlyValidChildren: Record<string, Set<string>> = {\n  head: new Set([\n    'base',\n    'basefront',\n    'bgsound',\n    'link',\n    'meta',\n    'title',\n    'noscript',\n    'noframes',\n    'style',\n    'script',\n    'template',\n  ]),\n  optgroup: new Set(['option']),\n  select: new Set(['optgroup', 'option', 'hr']),\n  // table\n  table: new Set(['caption', 'colgroup', 'tbody', 'tfoot', 'thead']),\n  tr: new Set(['td', 'th']),\n  colgroup: new Set(['col']),\n  tbody: new Set(['tr']),\n  thead: new Set(['tr']),\n  tfoot: new Set(['tr']),\n  // these elements can not have any children elements\n  script: emptySet,\n  iframe: emptySet,\n  option: emptySet,\n  textarea: emptySet,\n  style: emptySet,\n  title: emptySet,\n}\n\n/** maps elements to set of elements which can be it's parent, no other */\nconst onlyValidParents: Record<string, Set<string>> = {\n  // sections\n  html: emptySet,\n  body: new Set(['html']),\n  head: new Set(['html']),\n  // table\n  td: new Set(['tr']),\n  colgroup: new Set(['table']),\n  caption: new Set(['table']),\n  tbody: new Set(['table']),\n  tfoot: new Set(['table']),\n  col: new Set(['colgroup']),\n  th: new Set(['tr']),\n  thead: new Set(['table']),\n  tr: new Set(['tbody', 'thead', 'tfoot']),\n  // data list\n  dd: new Set(['dl', 'div']),\n  dt: new Set(['dl', 'div']),\n  // other\n  figcaption: new Set(['figure']),\n  // li: new Set([\"ul\", \"ol\"]),\n  summary: new Set(['details']),\n  area: new Set(['map']),\n} as const\n\n/** maps element to set of elements that can not be it's children, others can */\nconst knownInvalidChildren: Record<string, Set<string>> = {\n  p: new Set([\n    'address',\n    'article',\n    'aside',\n    'blockquote',\n    'center',\n    'details',\n    'dialog',\n    'dir',\n    'div',\n    'dl',\n    'fieldset',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'hgroup',\n    'hr',\n    'li',\n    'main',\n    'nav',\n    'menu',\n    'ol',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'ul',\n  ]),\n  svg: new Set([\n    'b',\n    'blockquote',\n    'br',\n    'code',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'embed',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    'li',\n    'menu',\n    'meta',\n    'ol',\n    'p',\n    'pre',\n    'ruby',\n    's',\n    'small',\n    'span',\n    'strong',\n    'sub',\n    'sup',\n    'table',\n    'u',\n    'ul',\n    'var',\n  ]),\n} as const\n\n/** maps element to set of elements that can not be it's parent, others can */\nconst knownInvalidParents: Record<string, Set<string>> = {\n  a: new Set(['a']),\n  button: new Set(['button']),\n  dd: new Set(['dd', 'dt']),\n  dt: new Set(['dd', 'dt']),\n  form: new Set(['form']),\n  li: new Set(['li']),\n  h1: headings,\n  h2: headings,\n  h3: headings,\n  h4: headings,\n  h5: headings,\n  h6: headings,\n}\n", "import {\n  type CompilerError,\n  ElementTypes,\n  type NodeTransform,\n  NodeTypes,\n} from '@vue/compiler-core'\nimport { isValidHTMLNesting } from '../htmlNesting'\n\nexport const validateHtmlNesting: NodeTransform = (node, context) => {\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.ELEMENT &&\n    context.parent &&\n    context.parent.type === NodeTypes.ELEMENT &&\n    context.parent.tagType === ElementTypes.ELEMENT &&\n    !isValidHTMLNesting(context.parent.tag, node.tag)\n  ) {\n    const error = new SyntaxError(\n      `<${node.tag}> cannot be child of <${context.parent.tag}>, ` +\n        'according to HTML specifications. ' +\n        'This can cause hydration errors or ' +\n        'potentially disrupt future functionality.',\n    ) as CompilerError\n    error.loc = node.loc\n    context.onWarn(error)\n  }\n}\n", "import {\n  type CodegenResult,\n  type CompilerOptions,\n  type DirectiveTransform,\n  type NodeTransform,\n  type ParserOptions,\n  type RootNode,\n  baseCompile,\n  baseParse,\n  noopDirectiveTransform,\n} from '@vue/compiler-core'\nimport { parserOptions } from './parserOptions'\nimport { transformStyle } from './transforms/transformStyle'\nimport { transformVHtml } from './transforms/vHtml'\nimport { transformVText } from './transforms/vText'\nimport { transformModel } from './transforms/vModel'\nimport { transformOn } from './transforms/vOn'\nimport { transformShow } from './transforms/vShow'\nimport { transformTransition } from './transforms/Transition'\nimport { stringifyStatic } from './transforms/stringifyStatic'\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\nimport { validateHtmlNesting } from './transforms/validateHtmlNesting'\nimport { extend } from '@vue/shared'\n\nexport { parserOptions }\n\nexport const DOMNodeTransforms: NodeTransform[] = [\n  transformStyle,\n  ...(__DEV__ ? [transformTransition, validateHtmlNesting] : []),\n]\n\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\n  cloak: noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel, // override compiler-core\n  on: transformOn, // override compiler-core\n  show: transformShow,\n}\n\nexport function compile(\n  src: string | RootNode,\n  options: CompilerOptions = {},\n): CodegenResult {\n  return baseCompile(\n    src,\n    extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...(options.nodeTransforms || []),\n      ],\n      directiveTransforms: extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {},\n      ),\n      transformHoist: __BROWSER__ ? null : stringifyStatic,\n    }),\n  )\n}\n\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\n  return baseParse(template, extend({}, parserOptions, options))\n}\n\nexport * from './runtimeHelpers'\nexport { transformStyle } from './transforms/transformStyle'\nexport {\n  createDOMCompilerError,\n  DOMErrorCodes,\n  DOMErrorMessages,\n} from './errors'\nexport * from '@vue/compiler-core'\n", "// This entry is the \"full-build\" that includes both the runtime\n// and the compiler, and supports on-the-fly compilation of the template option.\nimport { initDev } from './dev'\nimport {\n  type CompilerError,\n  type CompilerOptions,\n  compile,\n} from '@vue/compiler-dom'\nimport {\n  type RenderFunction,\n  registerRuntimeCompiler,\n  warn,\n} from '@vue/runtime-dom'\nimport * as runtimeDom from '@vue/runtime-dom'\nimport {\n  NOOP,\n  extend,\n  genCacheKey,\n  generateCodeFrame,\n  isString,\n} from '@vue/shared'\nimport type { InternalRenderFunction } from 'packages/runtime-core/src/component'\n\nif (__DEV__) {\n  initDev()\n}\n\nconst compileCache: Record<string, RenderFunction> = Object.create(null)\n\nfunction compileToFunction(\n  template: string | HTMLElement,\n  options?: CompilerOptions,\n): RenderFunction {\n  if (!isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML\n    } else {\n      __DEV__ && warn(`invalid template option: `, template)\n      return NOOP\n    }\n  }\n\n  const key = genCacheKey(template, options)\n  const cached = compileCache[key]\n  if (cached) {\n    return cached\n  }\n\n  if (template[0] === '#') {\n    const el = document.querySelector(template)\n    if (__DEV__ && !el) {\n      warn(`Template element not found or is empty: ${template}`)\n    }\n    // __UNSAFE__\n    // Reason: potential execution of JS expressions in in-DOM template.\n    // The user must make sure the in-DOM template is trusted. If it's rendered\n    // by the server, the template should not contain any user data.\n    template = el ? el.innerHTML : ``\n  }\n\n  const opts = extend(\n    {\n      hoistStatic: true,\n      onError: __DEV__ ? onError : undefined,\n      onWarn: __DEV__ ? e => onError(e, true) : NOOP,\n    } as CompilerOptions,\n    options,\n  )\n\n  if (!opts.isCustomElement && typeof customElements !== 'undefined') {\n    opts.isCustomElement = tag => !!customElements.get(tag)\n  }\n\n  const { code } = compile(template, opts)\n\n  function onError(err: CompilerError, asWarning = false) {\n    const message = asWarning\n      ? err.message\n      : `Template compilation error: ${err.message}`\n    const codeFrame =\n      err.loc &&\n      generateCodeFrame(\n        template as string,\n        err.loc.start.offset,\n        err.loc.end.offset,\n      )\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\n  }\n\n  // The wildcard import results in a huge object with every export\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\n  // In the global build we know `Vue` is available globally so we can avoid\n  // the wildcard object.\n  const render = (\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\n  ) as RenderFunction\n\n  // mark the function as runtime compiled\n  ;(render as InternalRenderFunction)._rc = true\n\n  return (compileCache[key] = render)\n}\n\nregisterRuntimeCompiler(compileToFunction)\n\nexport { compileToFunction as compile }\nexport * from '@vue/runtime-dom'\n"],
  "mappings": "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IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,IAAG,GAAE,IAAG,MAAK,GAAE,KAAI,MAAK,IAAG,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,MAAK,OAAM,IAAG,MAAK,GAAE,KAAI,GAAE,MAAK,IAAG,MAAK,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",
  "names": ["Position", "constructor", "line", "col", "index", "column", "SourceLocation", "start", "end", "filename", "identifierName", "createPositionWithColumnOffset", "position", "columnOffset", "code", "ModuleErrors", "ImportMetaOutsideModule", "message", "ImportOutsideModule", "NodeDescriptions", "ArrayPattern", "AssignmentExpression", "AssignmentPattern", "ArrowFunctionExpression", "ConditionalExpression", "CatchClause", "ForOfStatement", "ForInStatement", "ForStatement", "FormalParameters", "Identifier", "ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ObjectPattern", "ParenthesizedExpression", "RestElement", "UpdateExpression", "true", "false", "VariableDeclarator", "YieldExpression", "toNodeDescription", "node", "type", "prefix", "StandardErrors", "AccessorIsGenerator", "kind", "ArgumentsInClass", "AsyncFunctionInSingleStatementContext", "AwaitBindingIdentifier", "AwaitBindingIdentifierInStaticBlock", "AwaitExpressionFormalParameter", "AwaitUsingNotInAsyncContext", "AwaitNotInAsyncContext", "BadGetterArity", "BadSetterArity", "BadSetterRestParameter", "ConstructorClassField", "ConstructorClassPrivateField", "ConstructorIsAccessor", "ConstructorIsAsync", "ConstructorIsGenerator", "DeclarationMissingInitializer", "DecoratorArgumentsOutsideParentheses", "DecoratorBeforeExport", "DecoratorsBeforeAfterExport", "DecoratorConstructor", "DecoratorExportClass", "DecoratorSemicolon", "DecoratorStaticBlock", "DeferImportRequiresNamespace", "DeletePrivateField", "DestructureNamedImport", "DuplicateConstructor", "DuplicateDefaultExport", "DuplicateExport", "exportName", "DuplicateProto", "DuplicateRegExpFlags", "DynamicImportPhaseRequiresImportExpressions", "phase", "ElementAfterRest", "EscapedCharNotAnIdentifier", "ExportBindingIsString", "localName", "ExportDefaultFromAsIdentifier", "ForInOfLoopInitializer", "ForInUsing", "ForOfAsync", "ForOfLet", "GeneratorInSingleStatementContext", "IllegalBreakContinue", "IllegalLanguageModeDirective", "IllegalReturn", "ImportAttributesUseAssert", "ImportBindingIsString", "importName", "ImportCallArity", "ImportCallNotNewExpression", "ImportCallSpreadArgument", "ImportJSONBindingNotDefault", "ImportReflectionHasAssertion", "ImportReflectionNotBinding", "IncompatibleRegExpUVFlags", "InvalidBigIntLiteral", "InvalidCodePoint", "InvalidCoverInitializedName", "InvalidDecimal", "InvalidDigit", "radix", "InvalidEscapeSequence", "InvalidEscapeSequenceTemplate", "InvalidEscapedReservedWord", "reservedWord", "InvalidIdentifier", "InvalidLhs", "ancestor", "InvalidLhsBinding", "InvalidLhsOptionalChaining", "InvalidNumber", "InvalidOrMissingExponent", "InvalidOrUnexpectedToken", "unexpected", "InvalidParenthesizedAssignment", "InvalidPrivateFieldResolution", "InvalidPropertyBindingPattern", "InvalidRecordProperty", "InvalidRestAssignmentPattern", "LabelRedeclaration", "labelName", "LetInLexicalBinding", "LineTerminatorBeforeArrow", "MalformedRegExpFlags", "MissingClassName", "MissingEqInAssignment", "MissingSemicolon", "MissingPlugin", "missingPlugin", "map", "name", "JSON", "stringify", "join", "MissingOneOfPlugins", "MissingUnicodeEscape", "MixingCoalesceWithLogical", "ModuleAttributeDifferentFromType", "ModuleAttributeInvalidValue", "ModuleAttributesWithDuplicateKeys", "key", "ModuleExportNameHasLoneSurrogate", "surrogateCharCode", "toString", "ModuleExportUndefined", "MultipleDefaultsInSwitch", "NewlineAfterThrow", "NoCatchOrFinally", "NumberIdentifier", "NumericSeparatorInEscapeSequence", "ObsoleteAwaitStar", "OptionalChainingNoNew", "OptionalChainingNoTemplate", "OverrideOnConstructor", "ParamDupe", "PatternHasAccessor", "PatternHasMethod", "PrivateInExpectedIn", "PrivateNameRedeclaration", "RecordExpressionBarIncorrectEndSyntaxType", "RecordExpressionBarIncorrectStartSyntaxType", "RecordExpressionHashIncorrectStartSyntaxType", "RecordNoProto", "RestTrailingComma", "SloppyFunction", "SloppyFunctionAnnexB", "SourcePhaseImportRequiresDefault", "StaticPrototype", "SuperNotAllowed", "SuperPrivateField", "TrailingDecorator", "TupleExpressionBarIncorrectEndSyntaxType", "TupleExpressionBarIncorrectStartSyntaxType", "TupleExpressionHashIncorrectStartSyntaxType", "UnexpectedArgumentPlaceholder", "UnexpectedAwaitAfterPipelineBody", "UnexpectedDigitAfterHash", "UnexpectedImportExport", "UnexpectedKeyword", "keyword", "UnexpectedLeadingDecorator", "UnexpectedLexicalDeclaration", "UnexpectedNewTarget", "UnexpectedNumericSeparator", "UnexpectedPrivateField", "UnexpectedReservedWord", "UnexpectedSuper", "UnexpectedToken", "expected", "UnexpectedTokenUnaryExponentiation", "UnexpectedUsingDeclaration", "UnsupportedBind", "UnsupportedDecoratorExport", "UnsupportedDefaultExport", "UnsupportedImport", "UnsupportedMetaProperty", "target", "onlyValidPropertyName", "UnsupportedParameterDecorator", "UnsupportedPropertyDecorator", "UnsupportedSuper", "UnterminatedComment", "UnterminatedRegExp", "UnterminatedString", "UnterminatedTemplate", "UsingDeclarationExport", "UsingDeclarationHasBindingPattern", "VarRedeclaration", "YieldBindingIdentifier", "YieldInParameter", "YieldNotInGeneratorFunction", "ZeroDigitNumericSeparator", "StrictModeErrors", "StrictDelete", "StrictEvalArguments", "referenceName", "StrictEvalArgumentsBinding", "bindingName", "StrictFunction", "StrictNumericEscape", "StrictOctalLiteral", "StrictWith", "UnparenthesizedPipeBodyDescriptions", "Set", "Object", "assign", "PipeBodyIsTighter", "PipeTopicRequiresHackPipes", "PipeTopicUnbound", "PipeTopicUnconfiguredToken", "token", "PipeTopicUnused", "PipeUnparenthesizedBody", "PipelineBodyNoArrow", "PipelineBodySequenceExpression", "PipelineHeadSequenceExpression", "PipelineTopicUnused", "PrimaryTopicNotAllowed", "PrimaryTopicRequiresSmartPipeline", "defineHidden", "obj", "value", "defineProperty", "enumerable", "configurable", "toParseErrorConstructor", "toMessage", "reasonCode", "syntaxPlugin", "hasMissingPlugin", "oldReasonCodes", "AccessorCannotDeclareThisParameter", "AccessorCannotHaveTypeParameters", "ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference", "SetAccessorCannotHaveOptionalParameter", "SetAccessorCannotHaveRestParameter", "SetAccessorCannotHaveReturnType", "loc", "details", "error", "SyntaxError", "pos", "clone", "overrides", "_overrides$loc", "get", "set", "writable", "ParseErrorEnum", "argument", "Array", "isArray", "parseErrorTemplates", "ParseErrorConstructors", "keys", "template", "_ref", "rest", "_objectWithoutPropertiesLoose", "_excluded", "Errors", "PipelineOperatorErrors", "createDefaultOptions", "sourceType", "sourceFilename", "undefined", "startIndex", "startColumn", "startLine", "allowAwaitOutsideFunction", "allowReturnOutsideFunction", "allowNewTargetOutsideFunction", "allowImportExportEverywhere", "allowSuperOutsideMethod", "allowUndeclaredExports", "allowYieldOutsideFunction", "plugins", "strictMode", "ranges", "tokens", "createImportExpressions", "createParenthesizedExpressions", "errorRecovery", "attachComment", "annexB", "getOptions", "opts", "options", "Error", "toUnenumerable", "object", "toESTreeLocation", "estree", "superClass", "ESTreeParserMixin", "parse", "file", "optionFlags", "parseRegExpLiteral", "pattern", "flags", "regex", "RegExp", "_", "estreeParseLiteral", "parseBigIntLiteral", "bigInt", "BigInt", "_unused", "bigint", "String", "parseDecimalLiteral", "decimal", "parseLiteral", "parseStringLiteral", "parseNumericLiteral", "parseNullLiteral", "parseBooleanLiteral", "estreeParseChainExpression", "endLoc", "chain", "startNodeAtNode", "expression", "finishNodeAt", "directiveToStmt", "directive", "castNodeTo", "raw", "extra", "expressionValue", "stmt", "rawValue", "fillOptionalPropertiesForTSESLint", "cloneEstreeStringLiteral", "range", "cloned", "create", "prototype", "initFunction", "isAsync", "checkDeclaration", "isObjectProperty", "getObjectOrClassMethodParams", "method", "params", "isValidDirective", "_stmt$expression$extr", "parenthesized", "parseBlockBody", "allowDirectives", "topLevel", "afterBlockParse", "directiveStatements", "directives", "d", "body", "concat", "parsePrivateName", "getPluginOption", "convertPrivateNameToPrivateIdentifier", "getPrivateNameSV", "id", "isPrivateName", "parseFunctionBody", "allowExpression", "isMethod", "parseMethod", "isGenerator", "isConstructor", "allowDirectSuper", "inClassScope", "funcNode", "startNode", "typeParameters", "resetStartLocationFromNode", "valueNode", "computed", "shorthand", "finishNode", "nameIsConstructor", "parseClassProperty", "args", "propertyNode", "parseClassPrivateProperty", "parseClassAccessorProperty", "accessorPropertyNode", "abstract", "hasPlugin", "parseObjectProperty", "prop", "startLoc", "isPattern", "refExpressionErrors", "finishObjectProperty", "isValidLVal", "isUnparenthesizedInAssign", "binding", "isAssignable", "isBinding", "toAssignable", "isLHS", "classScope", "usePrivateName", "toAssignableObjectExpressionProp", "isLast", "raise", "finishCallExpression", "unfinished", "optional", "callee", "_ref2", "source", "arguments", "attributes", "toReferencedArguments", "parseExport", "decorators", "exportStartLoc", "state", "lastTokStartLoc", "exported", "specifiers", "length", "_declaration$decorato", "declaration", "resetStartLocation", "stopParseSubscript", "base", "optionalChainMember", "parseMember", "isOptionalMemberExpression", "hasPropertyAsPrivateName", "isObjectMethod", "result", "cloneIdentifier", "cloneStringLiteral", "resetEndLocation", "lastTokEndLoc", "TokContext", "preserveSpace", "types", "brace", "j_oTag", "j_cTag", "j_expr", "beforeExpr", "startsExpr", "isLoop", "isAssign", "postfix", "ExportedTokenType", "label", "conf", "rightAssociative", "binop", "updateContext", "keywords", "Map", "createKeyword", "createToken", "createBinop", "tokenTypeCounter", "tokenTypes", "tokenLabels", "tokenBinops", "tokenBeforeExprs", "tokenStartsExprs", "tokenPrefixes", "_options$binop", "_options$beforeExpr", "_options$startsExpr", "_options$prefix", "push", "createKeywordLike", "_options$binop2", "_options$beforeExpr2", "_options$startsExpr2", "_options$prefix2", "tt", "bracketL", "bracketHashL", "bracketBarL", "bracketR", "bracketBarR", "braceL", "braceBarL", "braceHashL", "braceR", "braceBarR", "parenL", "parenR", "comma", "semi", "colon", "doubleColon", "dot", "question", "questionDot", "arrow", "ellipsis", "backQuote", "dollarBraceL", "templateTail", "templateNonTail", "at", "hash", "interpreterDirective", "eq", "slashAssign", "xorAssign", "moduloAssign", "incDec", "bang", "tilde", "doubleCaret", "doubleAt", "pipeline", "nullishCoalescing", "logicalOR", "logicalAND", "bitwiseOR", "bitwiseXOR", "bitwiseAND", "equality", "lt", "gt", "relational", "bitShift", "bitShiftL", "bitShiftR", "plusMin", "modulo", "star", "slash", "exponent", "_in", "_instanceof", "_break", "_case", "_catch", "_continue", "_debugger", "_default", "_else", "_finally", "_function", "_if", "_return", "_switch", "_throw", "_try", "_var", "_const", "_with", "_new", "_this", "_super", "_class", "_extends", "_export", "_import", "_null", "_true", "_false", "_typeof", "_void", "_delete", "_do", "_for", "_while", "_as", "_assert", "_async", "_await", "_defer", "_from", "_get", "_let", "_meta", "_of", "_sent", "_set", "_source", "_static", "_using", "_yield", "_asserts", "_checks", "_exports", "_global", "_implements", "_intrinsic", "_infer", "_is", "_mixins", "_proto", "_require", "_satisfies", "_keyof", "_readonly", "_unique", "_abstract", "_declare", "_enum", "_module", "_namespace", "_interface", "_type", "_opaque", "placeholder", "string", "num", "regexp", "privateName", "eof", "jsxName", "jsxText", "jsxTagStart", "jsxTagEnd", "tokenIsIdentifier", "tokenKeywordOrIdentifierIsKeyword", "tokenIsKeywordOrIdentifier", "tokenIsLiteralPropertyName", "tokenComesBeforeExpression", "tokenCanStartExpression", "tokenIsAssignment", "tokenIsFlowInterfaceOrTypeOrOpaque", "tokenIsLoop", "tokenIsKeyword", "tokenIsOperator", "tokenIsPostfix", "tokenIsPrefix", "tokenIsTSTypeOperator", "tokenIsTSDeclarationStart", "tokenLabelName", "tokenOperatorPrecedence", "tokenIsRightAssociative", "tokenIsTemplate", "getExportedToken", "context", "pop", "tc", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "i", "isIdentifierStart", "test", "fromCharCode", "isIdentifierChar", "reservedWords", "strict", "strictBind", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "isIteratorStart", "current", "next", "next2", "reservedWordLikeSet", "canBeReservedWord", "Scope", "names", "firstLexicalName", "ScopeHandler", "parser", "scopeStack", "undefinedExports", "inTopLevel", "currentScope", "inFunction", "currentVarScopeFlags", "allowSuper", "currentThisScopeFlags", "inClass", "inClassAndNotInNonArrowFunction", "inStaticBlock", "ScopeFlag", "inNonArrowFunction", "treatFunctionsAsVar", "treatFunctionsAsVarInScope", "createScope", "enter", "exit", "scope", "declareName", "bindingType", "checkRedeclarationInScope", "maybeExportDefined", "delete", "isRedeclaredInScope", "checkLocalExport", "topLevelScope", "FlowScope", "declareFunctions", "FlowScopeHandler", "add", "reservedTypes", "FlowErrors", "AmbiguousConditionalArrow", "AmbiguousDeclareModuleKind", "AssignReservedType", "reservedType", "DeclareClassElement", "DeclareClassFieldInitializer", "DuplicateDeclareModuleExports", "EnumBooleanMemberNotInitialized", "memberName", "enumName", "EnumDuplicateMemberName", "EnumInconsistentMemberValues", "EnumInvalidExplicitType", "invalidEnumType", "EnumInvalidExplicitTypeUnknownSupplied", "EnumInvalidMemberInitializerPrimaryType", "explicitType", "EnumInvalidMemberInitializerSymbolType", "EnumInvalidMemberInitializerUnknownType", "EnumInvalidMemberName", "suggestion", "EnumNumberMemberNotInitialized", "EnumStringMemberInconsistentlyInitialized", "GetterMayNotHaveThisParam", "ImportReflectionHasImportType", "ImportTypeShorthandOnlyInPureImport", "InexactInsideExact", "InexactInsideNonObject", "InexactVariance", "InvalidNonTypeImportInDeclareModule", "MissingTypeParamDefault", "NestedDeclareModule", "NestedFlowComment", "PatternIsOptional", "SetterMayNotHaveThisParam", "SpreadVariance", "ThisParamAnnotationRequired", "ThisParamBannedInConstructor", "ThisParamMayNotBeOptional", "ThisParamMustBeFirst", "ThisParamNoDefault", "TypeBeforeInitializer", "TypeCastInPattern", "UnexpectedExplicitInexactInObject", "UnexpectedReservedType", "UnexpectedReservedUnderscore", "UnexpectedSpaceBetweenModuloChecks", "UnexpectedSpreadType", "UnexpectedSubtractionOperand", "UnexpectedTokenAfterTypeParameter", "UnexpectedTypeParameterBeforeAsyncArrowFunction", "UnsupportedDeclareExportKind", "unsupportedExportKind", "UnsupportedStatementInDeclareModule", "UnterminatedFlowComment", "isEsModuleType", "bodyElement", "hasTypeImportKind", "importKind", "exportSuggestions", "const", "let", "interface", "partition", "list", "list1", "list2", "FLOW_PRAGMA_REGEX", "flow", "FlowParserMixin", "flowPragma", "getScopeHandler", "shouldParseTypes", "finishToken", "val", "addComment", "comment", "matches", "exec", "flowParseTypeInitialiser", "tok", "oldInType", "inType", "expect", "flowParseType", "flowParsePredicate", "moduloLoc", "expectContextual", "eat", "parseExpression", "flowParseTypeAndPredicateInitialiser", "predicate", "match", "flowParseDeclareClass", "flowParseInterfaceish", "flowParseDeclareFunction", "parseIdentifier", "typeNode", "typeContainer", "flowParseTypeParameterDeclaration", "tmp", "flowParseFunctionTypeParams", "this", "returnType", "typeAnnotation", "semicolon", "flowParseDeclare", "insideModule", "flowParseDeclareVariable", "eatContextual", "flowParseDeclareModuleExports", "flowParseDeclareModule", "isContextual", "flowParseDeclareTypeAlias", "flowParseDeclareOpaqueType", "flowParseDeclareInterface", "flowParseDeclareExportDeclaration", "flowParseTypeAnnotatableIdentifier", "parseExprAtom", "bodyNode", "parseImport", "hasModuleExport", "forEach", "default", "isLet", "exportKind", "flowParseTypeAnnotation", "finished", "flowParseTypeAlias", "flowParseOpaqueType", "isClass", "flowParseRestrictedIdentifier", "extends", "flowParseInterfaceExtends", "implements", "mixins", "flowParseObjectType", "allowStatic", "allowExact", "allowSpread", "allowProto", "allowInexact", "flowParseQualifiedTypeIdentifier", "flowParseTypeParameterInstantiation", "flowParseInterface", "checkNotUnderscore", "checkReservedType", "liberal", "right", "declare", "supertype", "impltype", "flowParseTypeParameter", "requireDefault", "nodeStartLoc", "variance", "flowParseVariance", "ident", "bound", "defaultRequired", "typeParameter", "flowInTopLevelContext", "cb", "curContext", "oldContext", "flowParseTypeParameterInstantiationInExpression", "reScan_lt", "oldNoAnonFunctionType", "noAnonFunctionType", "reScan_lt_gt", "flowParseTypeParameterInstantiationCallOrNew", "flowParseTypeOrImplicitInstantiation", "flowParseInterfaceType", "flowParseObjectPropertyKey", "flowParseObjectTypeIndexer", "isStatic", "static", "lookahead", "flowParseObjectTypeInternalSlot", "flowParseObjectTypeMethodish", "startNodeAt", "flowParseFunctionTypeParam", "flowParseObjectTypeCallProperty", "nodeStart", "callProperties", "properties", "indexers", "internalSlots", "endDelim", "exact", "inexact", "protoStartLoc", "inexactStartLoc", "propOrInexact", "flowParseObjectTypeProperty", "flowObjectTypeSemicolon", "out", "isInexactToken", "proto", "flowCheckGetterSetterParams", "property", "paramCount", "node2", "qualification", "flowParseGenericType", "flowParseTypeofType", "flowParsePrimaryType", "flowParseTupleType", "first", "lh", "isThis", "reinterpretTypeAsFunctionTypeParam", "flowIdentToTypeAnnotation", "isGroupedType", "parseLiteralAtNode", "createIdentifier", "flowParsePostfixType", "seenOptionalIndexedAccess", "canInsertSemicolon", "elementType", "objectType", "indexType", "flowParsePrefixType", "flowParseAnonFunctionWithoutParens", "param", "flowParseIntersectionType", "flowParseUnionType", "allowPrimitiveOverride", "typeCastToParameter", "allowExpressionBody", "forwardNoArrowParamsConversionAt", "parseFunctionBodyAndFinish", "parseStatementLike", "flowParseEnumDeclaration", "parseExpressionStatement", "expr", "shouldParseExportDeclaration", "containsEsc", "isExportDefaultSpecifier", "parseExportDefaultExpression", "parseConditional", "maybeInArrowParameters", "nextCh", "lookaheadCharCode", "setOptionalParametersError", "originalNoArrowAt", "noArrowAt", "consequent", "failed", "tryParseConditionalConsequent", "valid", "invalid", "getArrowLikeExpressions", "alternate", "parseMaybeAssign", "noArrowParamsConversionAt", "parseMaybeAssignAllowIn", "disallowInvalid", "stack", "arrows", "finishArrowValidation", "every", "_node$extra", "toAssignableList", "trailingCommaLoc", "checkParams", "includes", "offsetToSourcePos", "parseParenItem", "newNode", "typeCastNode", "assertModuleNodeAllowed", "parseExportDeclaration", "declarationNode", "parseExportSpecifiers", "parseExportFrom", "eatExportStar", "maybeParseExportNamespaceSpecifier", "hasNamespace", "parseClassId", "isStatement", "optionalId", "parseClassMember", "classBody", "member", "parseClassMemberFromModifier", "isIterator", "readIterator", "readWord1", "fullWord", "curPosition", "getTokenFromCode", "input", "charCodeAt", "finishOp", "left", "exprList", "toReferencedList", "isParenthesizedExpr", "_expr$extra", "parseArrayLike", "close", "canBePattern", "isTuple", "elements", "isParenthesized", "isClassMethod", "isClassProperty", "isNonstaticConstructor", "pushClassMethod", "allowsDirectSuper", "isThisParam", "pushClassPrivateMethod", "parseClassSuper", "superTypeParameters", "implemented", "checkGetterSetterParams", "parsePropertyNamePrefixOperator", "parseObjPropValue", "isAccessor", "parseFunctionParamType", "parseMaybeDefault", "checkImportReflection", "module", "parseImportSpecifierLocal", "specifier", "local", "finishImportSpecifier", "isPotentialImportPhase", "isExport", "ch", "applyImportPhase", "parseImportSpecifier", "importedIsString", "isInTypeOnlyImport", "isMaybeTypeOnly", "firstIdent", "imported", "specifierTypeKind", "isLookaheadContextual", "as_ident", "specifierIsTypeImport", "checkReservedWord", "parseBindingAtom", "parseFunctionParams", "parseVarId", "decl", "parseAsyncArrowFromCallExpression", "call", "shouldParseAsyncArrow", "afterLeftParse", "_jsx", "jsx", "tryParse", "currentContext", "_jsx2", "_jsx3", "abort", "_arrowExpression$extr", "arrowExpression", "maybeUnwrapTypeCastExpression", "aborted", "async", "failState", "thrown", "parseArrow", "shouldParseArrow", "setArrowFunctionParameters", "allowDuplicates", "isArrowFunction", "strictModeChanged", "parseParenAndDistinguishExpression", "canBeArrow", "sourceToOffsetPos", "parseSubscripts", "noCalls", "parseCallExpressionArguments", "parseAsyncArrowWithTypeParameters", "parseSubscript", "subscriptState", "isLookaheadToken_lt", "stop", "typeArguments", "parseNewCallee", "targs", "parseArrowExpression", "readToken_mult_modulo", "hasFlowComment", "nextToken", "readToken_pipe_amp", "parseTopLevel", "program", "fileNode", "skipBlockComment", "skipFlowComment", "hasFlowCommentCompletion", "commentSkip", "shiftToFirstNonWhiteSpace", "ch2", "ch3", "slice", "indexOf", "flowEnumErrorBooleanMemberNotInitialized", "flowEnumErrorInvalidMemberInitializer", "enumContext", "flowEnumErrorNumberMemberNotInitialized", "flowEnumErrorStringMemberInconsistentlyInitialized", "flowEnumMemberInit", "endOfInit", "literal", "flowEnumMemberRaw", "init", "flowEnumCheckExplicitTypeMismatch", "expectedType", "flowEnumMembers", "seenNames", "members", "booleanMembers", "numberMembers", "stringMembers", "defaultedMembers", "hasUnknownMembers", "memberNode", "toUpperCase", "flowEnumStringMembers", "initializedMembers", "flowEnumParseExplicitType", "flowEnumBody", "nameLoc", "empty", "boolsLen", "numsLen", "strsLen", "defaultedLen", "jsxParseOpeningElementAfterName", "nextTokenStart", "afterNext", "readToken_lt", "readToken_gt", "entities", "__proto__", "quot", "amp", "apos", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "copy", "ordf", "laquo", "not", "shy", "reg", "macr", "deg", "plusmn", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "sup1", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "Agrave", "Aacute", "Acirc", "Atilde", "Auml", "Aring", "AElig", "Ccedil", "Egrave", "Eacute", "Ecirc", "Euml", "Igrave", "Iacute", "Icirc", "Iuml", "ETH", "Ntilde", "Ograve", "Oacute", "Ocirc", "Otilde", "Ouml", "times", "Oslash", "Ugrave", "Uacute", "Ucirc", "Uuml", "Yacute", "THORN", "szlig", "agrave", "aacute", "acirc", "atilde", "auml", "aring", "aelig", "ccedil", "egrave", "eacute", "ecirc", "euml", "igrave", "iacute", "icirc", "iuml", "eth", "ntilde", "ograve", "oacute", "ocirc", "otilde", "ouml", "divide", "oslash", "ugrave", "uacute", "ucirc", "uuml", "yacute", "thorn", "yuml", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "lineBreak", "lineBreakG", "isNewLine", "hasNewLine", "skipWhiteSpace", "skipWhiteSpaceInLine", "isWhitespace", "JsxErrors", "AttributeIsEmpty", "MissingClosingTagElement", "openingTagName", "MissingClosingTagFragment", "UnexpectedSequenceExpression", "HTMLEntity", "UnsupportedJsxValue", "UnterminatedJsxContent", "UnwrappedAdjacentJSXElements", "isFragment", "getQualifiedJSXName", "namespace", "JSXParserMixin", "jsxReadToken", "chunkStart", "canStartJSXElement", "jsxReadEntity", "jsxReadNewLine", "normalizeCRLF", "curLine", "lineStart", "jsxReadString", "quote", "startPos", "codePointAtPos", "codePoint", "readInt", "fromCodePoint", "count", "desc", "entity", "XHTMLEntities", "jsxReadWord", "jsxParseIdentifier", "jsxParseNamespacedName", "jsxParseElementName", "jsxParseAttributeValue", "setContext", "jsxParseExpressionContainer", "jsxParseEmptyExpression", "jsxParseSpreadChild", "previousContext", "jsxParseAttribute", "jsxParseOpeningElementAt", "selfClosing", "jsxParseClosingElementAt", "jsxParseElementAt", "children", "openingElement", "closingElement", "contents", "openingFragment", "closingFragment", "jsxParseElement", "newContext", "replaceToken", "skipSpace", "prevType", "splice", "TypeScriptScope", "tsNames", "TypeScriptScopeHandler", "importsStack", "hasImport", "allowShadow", "len", "isConst", "wasConst", "ProductionParameterHandler", "stacks", "currentFlags", "hasAwait", "hasYield", "hasReturn", "hasIn", "functionFlags", "BaseParser", "sawUnambiguousESM", "ambiguousScriptDifferentAst", "sourcePos", "offsetPos", "pluginConfig", "pluginName", "pluginOptions", "actualOptions", "plugin", "_this$plugins$get", "setTrailingComments", "comments", "trailingComments", "unshift", "setLeadingComments", "leadingComments", "setInnerComments", "innerComments", "adjustInnerComments", "commentWS", "lastElement", "CommentsParser", "commentsLen", "processComment", "commentStack", "commentStackLength", "lastCommentWS", "leadingNode", "commentEnd", "containingNode", "finalizeComment", "trailingNode", "commentStart", "finalizeRemainingComments", "resetPreviousNodeTrailingComments", "resetPreviousIdentifierLeadingComments", "takeSurroundingComments", "State", "errors", "potentialArrowAt", "topicContext", "maxNumOfResolvableTopics", "maxTopicIndex", "labels", "ct", "firstInvalidTemplateEscapePos", "strictErrors", "tokensLength", "v", "isAmbientContext", "inAbstractClass", "inDisallowConditionalTypesContext", "soloAwait", "inFSharpPipelineDirectBody", "hasTopLevelAwait", "isDigit", "forbiddenNumericSeparatorSiblings", "decBinOct", "hex", "isAllowedNumericSeparatorSibling", "bin", "oct", "dec", "readStringContents", "initialPos", "initialLineStart", "initialCurLine", "firstInvalidLoc", "unterminated", "isStringEnd", "res", "readEscapedChar", "str", "containsInvalid", "inTemplate", "throwOnInvalid", "readHexChar", "readCodePoint", "strictNumericEscape", "octalStr", "octal", "parseInt", "forceLen", "n", "invalidEscapeSequence", "allowNumSeparator", "bailOnError", "forbiddenSiblings", "isAllowedSibling", "total", "e", "Infinity", "prev", "numericSeparatorInEscapeSequence", "Number", "isNaN", "unexpectedNumericSeparator", "_isDigit", "invalidDigit", "invalidCodePoint", "buildPosition", "VALID_REGEX_FLAGS", "Token", "Tokenizer", "isLookahead", "errorHandlers_readInt", "errorBuilder", "errorHandlers_readCodePoint", "errorHandlers_readStringContents_string", "recordStrictModeErrors", "errorHandlers_readStringContents_template", "pushToken", "checkKeywordEscapes", "createLookaheadState", "old", "curr", "nextTokenStartSince", "lastIndex", "lookaheadCharCodeSince", "nextTokenInLineStart", "nextTokenInLineStartSince", "lookaheadInLineCharCode", "cp", "trail", "setStrict", "toParseError", "clear", "skipLineComment", "startSkip", "spaceStart", "loop", "commentWhitespace", "readToken_numberSign", "readToken_interpreter", "nextPos", "expectPlugin", "readToken_dot", "readNumber", "readToken_slash", "width", "readToken_caret", "proposal", "topicToken", "lookaheadCh", "codePointAt", "readToken_atSign", "readToken_plus_min", "size", "readToken_eq_excl", "readToken_question", "readTemplateToken", "readRadixNumber", "readString", "readWord", "readRegexp", "escaped", "content", "mods", "char", "isBigInt", "replace", "startsWithDot", "isFloat", "hasExponent", "isOctal", "hasLeadingZero", "integer", "underscorePos", "isDecimal", "parseFloat", "readTemplateContinuation", "opening", "firstCode", "escStart", "identifierCheck", "esc", "keywordTypes", "raiseOverwrite", "expectOnePlugin", "pluginNames", "some", "ClassScope", "privateNames", "loneAccessors", "undefinedPrivateNames", "ClassScopeHandler", "oldClassScope", "from", "declarePrivateName", "redefined", "accessor", "oldStatic", "newStatic", "oldKind", "newKind", "ExpressionScope", "canBeArrowParameterDeclaration", "isCertainlyParameterDeclaration", "ArrowHeadParsingScope", "declarationErrors", "recordDeclarationError", "ParsingErrorClass", "clearDeclarationError", "iterateErrors", "iterator", "ExpressionScopeHandler", "recordParameterInitializerError", "origin", "recordArrowParameterBindingError", "recordAsyncArrowParametersError", "validateAsPattern", "newParameterDeclarationScope", "newArrowHeadScope", "newAsyncArrowScope", "newExpressionScope", "UtilParser", "addExtra", "isUnparsedContextual", "nameStart", "nameEnd", "hasPrecedingLineBreak", "hasFollowingLineBreak", "isLineTerminator", "allowAsi", "fn", "oldState", "abortSignal", "checkExpressionErrors", "andThrow", "shorthandAssignLoc", "doubleProtoLoc", "privateKeyLoc", "optionalParametersLoc", "hasErrors", "isLiteralPropertyName", "initializeScopes", "oldLabels", "oldExportedIdentifiers", "exportedIdentifiers", "oldInModule", "oldScope", "oldProdParam", "prodParam", "oldExpressionScope", "expressionScope", "enterInitialScopes", "paramFlags", "checkDestructuringPrivate", "ExpressionErrors", "Node", "NodePrototype", "__clone", "NodeUtils", "locationNode", "unwrapParenthesizedExpression", "LValParser", "_node$extra3", "last", "_node$extra2", "operator", "arg", "checkToRestConversion", "elt", "toAssignableListItem", "element", "toReferencedListDeep", "parseSpread", "parseRestBinding", "parseBindingList", "ParseBindingListFlags", "parseObjectLike", "closeCharCode", "allowEmpty", "elts", "checkCommaAfterRest", "parseDecorator", "parseBindingElement", "parseBindingRestProperty", "parseBindingProperty", "parsePropertyName", "checkLVal", "checkClashes", "hasParenthesizedAncestor", "_expression$extra", "checkIdentifier", "validity", "ParseErrorClass", "isParenthesizedExpression", "nextAncestor", "child", "declareNameFromIdentifier", "identifier", "allowPattern", "nonNull", "x", "assert", "TSErrors", "AbstractMethodHasImplementation", "methodName", "AbstractPropertyHasInitializer", "propertyName", "AccessorCannotBeOptional", "ClassMethodHasDeclare", "ClassMethodHasReadonly", "ConstructorHasTypeParameters", "DeclareAccessor", "DeclareClassFieldHasInitializer", "DeclareFunctionHasImplementation", "DuplicateAccessibilityModifier", "modifier", "DuplicateModifier", "EmptyHeritageClauseType", "EmptyTypeArguments", "EmptyTypeParameters", "ExpectedAmbientAfterExportDeclare", "ImportAliasHasImportType", "IncompatibleModifiers", "modifiers", "IndexSignatureHasAbstract", "IndexSignatureHasAccessibility", "IndexSignatureHasDeclare", "IndexSignatureHasOverride", "IndexSignatureHasStatic", "InitializerNotAllowedInAmbientContext", "InvalidHeritageClauseType", "InvalidModifierOnTypeMember", "InvalidModifierOnTypeParameter", "InvalidModifierOnTypeParameterPositions", "InvalidModifiersOrder", "orderedModifiers", "InvalidPropertyAccessAfterInstantiationExpression", "InvalidTupleMemberLabel", "MissingInterfaceName", "NonAbstractClassHasAbstractMethod", "NonClassMethodPropertyHasAbstractModifer", "OptionalTypeBeforeRequired", "OverrideNotInSubClass", "PrivateElementHasAbstract", "PrivateElementHasAccessibility", "ReadonlyForMethodSignature", "ReservedArrowTypeParam", "ReservedTypeAssertion", "SingleTypeParameterWithoutTrailingComma", "typeParameterName", "StaticBlockCannotHaveModifier", "TupleOptionalAfterType", "TypeAnnotationAfterAssign", "TypeImportCannotSpecifyDefaultAndNamed", "TypeModifierIsUsedInTypeExports", "TypeModifierIsUsedInTypeImports", "UnexpectedParameterModifier", "UnexpectedReadonly", "UnexpectedTypeAnnotation", "UnexpectedTypeCastInParameter", "UnsupportedImportTypeArgument", "UnsupportedParameterPropertyKind", "UnsupportedSignatureParameterKind", "keywordTypeFromName", "tsIsAccessModifier", "tsIsVarianceAnnotations", "typescript", "TypeScriptParserMixin", "tsParseInOutModifiers", "tsParseModifiers", "bind", "allowedModifiers", "disallowedModifiers", "errorTemplate", "tsParseConstModifier", "tsParseInOutConstModifiers", "tsIsIdentifier", "tsTokenCanFollowModifier", "tsNextTokenOnSameLineAndCanFollowModifier", "tsNextTokenCanFollowModifier", "tsParseModifier", "stopOnStartOfClassStaticBlock", "tsIsStartOfStaticBlocks", "tsTryParse", "modified", "enforceOrder", "before", "after", "incompatible", "mod1", "mod2", "accessibility", "hasOwnProperty", "tsIsListTerminator", "tsParseList", "parseElement", "tsParseDelimitedList", "refTrailingCommaPos", "tsParseDelimitedListWorker", "expectSuccess", "trailingCommaPos", "tsParseBracketedList", "bracket", "skipFirstToken", "tsParseImportType", "tsParseImportTypeOptions", "qualifier", "tsParseEntityName", "tsParseEntityNameFlags", "tsParseTypeArguments", "withProperty", "tsParseImportTypeWithPropertyValue", "parsePropertyDefinition", "tsParseTypeReference", "typeName", "tsParseThisTypePredicate", "lhs", "parameterName", "tsParseTypeAnnotation", "asserts", "tsParseThisTypeNode", "tsParseTypeQuery", "exprName", "tsParseTypeParameter", "parseModifiers", "tsParseTypeParameterName", "constraint", "tsEatThenParseType", "tsTryParseTypeParameters", "tsParseTypeParameters", "tsFillSignature", "returnToken", "signature", "returnTokenRequired", "paramsKey", "returnTypeKey", "tsParseBindingListForSignature", "tsParseTypeOrTypePredicateAnnotation", "tsParseTypeMemberSemicolon", "tsParseSignatureMember", "tsIsUnambiguouslyIndexSignature", "tsTryParseIndexSignature", "tsLookAhead", "parameters", "tsTryParseTypeAnnotation", "tsParsePropertyOrMethodSignature", "readonly", "firstParameter", "tsParseTypeMember", "idx", "tsParseTypeLiteral", "tsParseObjectTypeMembers", "tsIsStartOfMappedType", "tsParseMappedType", "tsExpectThenParseType", "nameType", "tsParseType", "tsTryParseType", "tsParseTupleType", "elementTypes", "tsParseTupleElementType", "seenOptionalElement", "elementNode", "restStartLoc", "labeled", "isWord", "chAfterWord", "wordName", "typeOrLabel", "tsParseNonArrayType", "labeledNode", "optionalTypeNode", "restNode", "tsParseParenthesizedType", "tsParseFunctionOrConstructorType", "tsInAllowConditionalTypesContext", "tsParseLiteralTypeNode", "tsParseTemplateLiteralType", "parseTemplate", "parseTemplateSubstitution", "tsParseThisTypeOrThisTypePredicate", "thisKeyword", "parseMaybeUnary", "nodeType", "tsParseArrayTypeOrHigher", "tsParseTypeOperator", "tsParseTypeOperatorOrHigher", "tsCheckTypeAnnotationForReadOnly", "tsParseInferType", "tsParseConstraintForInferType", "tsInDisallowConditionalTypesContext", "isTypeOperator", "tsParseUnionOrIntersectionType", "parseConstituentType", "hasLeadingOperator", "tsParseIntersectionTypeOrHigher", "tsParseUnionTypeOrHigher", "tsIsStartOfFunctionType", "tsIsUnambiguouslyStartOfFunctionType", "tsSkipParameterStart", "previousErrorCount", "_unused2", "tsInType", "t", "tsParseTypePredicateAsserts", "thisTypePredicate", "typePredicateVariable", "tsParseTypePredicatePrefix", "tsTryParseTypeOrTypePredicateAnnotation", "eatColon", "tsParseNonConditionalType", "checkType", "extendsType", "trueType", "falseType", "isAbstractConstructorSignature", "tsParseTypeAssertion", "tsParseHeritageClause", "originalStartLoc", "delimitedList", "tsParseInterfaceDeclaration", "tsParseTypeAliasDeclaration", "tsInTopLevelContext", "oldInDisallowConditionalTypesContext", "tsNextThenParseType", "tsParseEnumMember", "initializer", "tsParseEnumDeclaration", "tsParseEnumBody", "tsParseModuleBlock", "parseBlockOrModuleBlockBody", "tsParseModuleOrNamespaceDeclaration", "nested", "inner", "tsParseAmbientExternalModuleDeclaration", "global", "tsParseImportEqualsDeclaration", "maybeDefaultIdentifier", "moduleReference", "tsParseModuleReference", "tsIsExternalModuleReference", "tsParseExternalModuleReference", "f", "tsTryParseAndCatch", "tsTryParseDeclare", "nany", "startType", "tsInAmbientContext", "parseFunctionStatement", "parseClass", "parseVarStatement", "tsParseDeclaration", "tsTryParseExportDeclaration", "tsParseExpressionStatement", "mod", "tsCheckLineTerminator", "tsParseAbstractDeclaration", "tsTryParseGenericAsyncArrowFunction", "oldMaybeInArrowParameters", "tsParseTypeArgumentsInExpression", "tsIsDeclarationStart", "override", "pp", "parameter", "isSimpleParameter", "tsDisallowOptionalPattern", "bodilessType", "registerFunctionStatementId", "tsCheckForInvalidTypeCasts", "items", "isInParens", "nonNullExpression", "isOptionalCall", "missingParenErrorLoc", "atPossibleAsyncArrow", "asyncArrowFn", "parseTaggedTemplateExpression", "tokenType", "_callee$extra", "parseExprOp", "leftStartLoc", "minPrec", "isSatisfies", "checkKeywords", "checkDuplicateExports", "importNode", "parseMaybeImportPhase", "parseImportSpecifiersAndAfter", "nodeImportEquals", "isAbstractClass", "cls", "allowMissingInitializer", "declarations", "isValidAmbientConstInitializer", "parseStatementContent", "parseAccessModifier", "tsHasSomeModifiers", "callParseClassMemberWithIsStatic", "parseClassStaticBlock", "parseClassMemberWithIsStatic", "hadSuperClass", "parsePostMemberNameModifiers", "methodOrProp", "isDeclare", "isIdentifier", "parseClassPropertyAnnotation", "definite", "declareClassPrivateMethodInScope", "_typeCast", "_typeCast2", "typeCast", "_typeParameters", "reportReservedArrowTypeParam", "trailingComma", "sawUnary", "toAssignableParenthesizedExpression", "parseMaybeDecoratorArguments", "canHaveLeadingDecorator", "getGetterSetterExpectedParamCount", "baseCount", "firstParam", "hasContextParam", "parseCatchClauseParam", "oldIsAmbientContext", "oldStrict", "oldInAbstractClass", "maybeTakeDecorators", "hasEstreePlugin", "methodFn", "shouldParseAsAmbientContext", "getExpression", "parseExportSpecifier", "isString", "isInTypeExport", "parseTypeOnlyImportExportSpecifier", "isImport", "isInTypeOnlyImportExport", "leftOfAsKey", "rightOfAsKey", "leftOfAs", "rightOfAs", "hasTypeSpecifier", "canParseAsKeyword", "firstAs", "secondAs", "parseModuleExportName", "kindKey", "_node$directive", "_node$decorators", "_node$optional", "_node$typeAnnotation", "_node$accessibility", "_node$decorators2", "_node$override", "_node$readonly", "_node$static", "_node$declare", "_node$returnType", "_node$typeParameters", "_node$optional2", "_node$optional3", "_node$accessibility2", "_node$readonly2", "_node$static2", "_node$declare2", "_node$definite", "_node$readonly3", "_node$typeAnnotation2", "_node$accessibility3", "_node$decorators3", "_node$override2", "_node$optional4", "_node$id", "_node$abstract", "_node$declare3", "_node$decorators4", "_node$implements", "_node$superTypeArgume", "_node$typeParameters2", "_node$declare4", "_node$definite2", "_node$const", "_node$declare5", "_node$computed", "_node$qualifier", "_node$options", "_node$declare6", "_node$extends", "_node$declare7", "_node$global", "_node$const2", "_node$in", "_node$out", "superTypeArguments", "in", "isPossiblyLiteralEnum", "expressions", "isUncomputedMemberExpressionChain", "isNumber", "isNegativeNumber", "PlaceholderErrors", "ClassNameIsRequired", "UnexpectedSpace", "placeholders", "PlaceholdersParserMixin", "parsePlaceholder", "expectedNode", "assertNoSpace", "finishPlaceholder", "chStartsBindingIdentifier", "verifyBreakContinue", "isBreak", "parseStatementOrSloppyAnnexBFunctionDeclaration", "stmtPlaceholder", "parseBlock", "createNewLexicalScope", "parseFunctionId", "requireId", "parseClassBody", "startsWith", "maybeParseExportDefaultSpecifier", "_specifiers", "checkExport", "filter", "hasStarImport", "maybeParseStarImportSpecifier", "parseNamedImportSpecifiers", "parseImportSource", "v8intrinsic", "V8IntrinsicMixin", "parseV8Intrinsic", "v8IntrinsicStartLoc", "parseIdentifierName", "PIPELINE_PROPOSALS", "TOPIC_TOKENS", "validatePlugins", "pluginsMap", "decoratorsBeforeExport", "allowCallParenthesized", "_pluginsMap$get2", "proposalList", "p", "tokenList", "_pluginsMap$get", "syntaxType", "moduleAttributesVersionPluginOption", "version", "deprecatedAssertSyntax", "RECORD_AND_TUPLE_SYNTAX_TYPES", "missingPlugins", "mixinPlugins", "mixinPluginNames", "ExpressionParser", "checkProto", "isRecord", "sawProto", "shouldExitDescending", "disallowIn", "disallowInAnd", "parseExpressionBase", "allowInAnd", "parseMaybeAssignDisallowIn", "isYield", "parseYield", "ownExpressionErrors", "parseMaybeConditional", "isAmbiguousPrefixOrIdentifier", "parseExprOps", "parseMaybeUnaryOrPrivate", "op", "prec", "checkPipelineAtInfixOperator", "logical", "coalesce", "parseExprOpRightExpr", "finishedNode", "nextOp", "withTopicBindingContext", "parseHackPipeBody", "withSoloAwaitPermittingContext", "parseFSharpPipelineBody", "parseSmartPipelineBodyInStyle", "parseExprOpBaseRightExpr", "_body$extra", "requiredParentheses", "topicReferenceWasUsedInCurrentContext", "checkExponentialAfterUnary", "isAwait", "recordAwaitIfAllowed", "parseAwait", "update", "isDelete", "parseUpdate", "updateExpressionNode", "parseExprSubscripts", "maybeAsyncArrow", "parseBind", "parseCoverCallAndAsyncArrowHead", "parseNoCallExpr", "tag", "quasi", "allowPlaceholder", "nodeForExtra", "oldInFSharpPipelineDirectBody", "addTrailingCommaExtraToNode", "parseExprListItem", "_call$extra", "parseSuper", "parseImportMetaProperty", "parseImportCall", "parseDo", "parseFunctionOrFunctionSent", "parseDecorators", "parseNewOrNewTarget", "parseTopicReferenceThenEqualsSign", "parseTopicReference", "pipeProposal", "parseModuleExpression", "parseAsyncFunctionExpression", "parseAsyncArrowUnaryFunction", "topicTokenType", "topicTokenValue", "finishTopicReference", "testTopicReferenceConfiguration", "topicReferenceIsAllowedInCurrentContext", "registerTopicReference", "meta", "parseMetaProperty", "parseFunction", "isSource", "innerStartLoc", "spreadStartLoc", "optionalCommaStartLoc", "spreadNodeStartLoc", "innerEndLoc", "arrowNode", "wrapParenthesis", "parenExpression", "metaProp", "parseNew", "parseExprList", "parseTemplateElement", "isTagged", "elemStart", "elem", "isTail", "endOffset", "elemEnd", "cooked", "tail", "curElt", "quasis", "substitutions", "maybeAsyncOrAccessorProp", "keyName", "_params", "parseObjectMethod", "finishedProp", "generator", "isExpression", "hasStrictModeDirective", "nonSimple", "isSimpleParamList", "formalParameters", "reservedTest", "isAwaitAllowed", "delegating", "delegate", "childExpr", "isSimpleReference", "checkSmartPipeTopicBodyEarlyErrors", "callback", "outerContextTopicState", "withSmartMixTopicForbiddingContext", "outerContextSoloAwaitState", "prodParamToSet", "ParamKind", "prodParamToClear", "ret", "revertScopes", "parseProgram", "loopLabel", "switchLabel", "loneSurrogate", "keywordRelationalOperator", "babel7CompatTokens", "hashEndPos", "hashEndLoc", "backquoteEnd", "backquoteEndLoc", "startToken", "templateValue", "templateElementEnd", "templateElementEndLoc", "endToken", "StatementParser", "interpreter", "parseInterpreterDirective", "finishedProgram", "stmtToDirective", "directiveLiteral", "hasFollowingBindingAtom", "endCh", "chStartsBindingPattern", "hasInLineFollowingBindingIdentifierOrBrace", "allowsForUsing", "nextCharAfterOf", "startsAwaitUsing", "parseModuleItem", "ParseStatementFlag", "parseStatementListItem", "allowLabeledFunction", "parseStatement", "allowDeclaration", "allowFunctionDeclaration", "parseBreakContinueStatement", "parseDebuggerStatement", "parseDoWhileStatement", "parseForStatement", "parseIfStatement", "parseReturnStatement", "parseSwitchStatement", "parseThrowStatement", "parseTryStatement", "parseWhileStatement", "parseWithStatement", "parseEmptyStatement", "nextTokenCharCode", "isAsyncFunction", "maybeName", "parseLabeledStatement", "decoratorsEnabledBeforeExport", "maybeDecorators", "classNode", "exportNode", "_classNode$decorators", "allowExport", "paramsStartLoc", "lab", "parseHeaderExpression", "awaitAt", "parseFor", "startsWithLet", "startsWithAwaitUsing", "starsWithUsingDeclaration", "isLetOrUsing", "initNode", "parseVar", "isForIn", "parseForIn", "startsWithAsync", "isForOf", "isHangingDeclaration", "ParseFunctionFlag", "discriminant", "cases", "cur", "sawDefault", "isCase", "block", "handler", "clause", "finalizer", "statementStart", "parsedNonDirective", "await", "isFor", "hangingDeclaration", "isDeclaration", "hadConstructor", "publicMethod", "privateMethod", "publicProp", "privateProp", "accessorProp", "publicMember", "parseClassElementName", "maybeContextualKw", "isPrivate", "maybeQuestionTokenStartLoc", "pushClassPrivateProperty", "pushClassProperty", "pushClassAccessorProperty", "_member$decorators", "parseInitializer", "hasDefault", "parseAfterDefault", "hasStar", "parseAfterNamespace", "isFromRequired", "hasSpecifiers", "maybeParseExportNamedSpecifiers", "hasDeclaration", "maybeParseExportDeclaration", "_node2$declaration", "_ref$specifiers", "isTypeExport", "assertions", "nextType", "hasFrom", "nextAfterFrom", "maybeParseImportAttributes", "checkJSONModuleImport", "checkNames", "isDefault", "isFrom", "_node$specifiers", "_declaration$extra", "nodes", "surrogate", "isJSONModuleImport", "singleBindingType", "_node$assertions", "nonDefaultNamedSpecifier", "find", "phaseIdentifier", "isImportPhase", "isPrecedingIdImportPhase", "parseImportSourceAndAttributes", "maybeParseDefaultImportSpecifier", "parseNext", "_node$specifiers2", "parseImportAttributes", "attrs", "attrNames", "parseModuleAttributes", "useWith", "importSpecifier", "Parser", "_options", "getParser", "ast", "moduleError", "generateExportedTokenTypes", "internalTokenTypes", "tokTypes", "getParserClass", "parserClassCache", "pluginList", "normalize", "SourceMapGenerator", "sourceFile", "map", "comparator", "p", "version", "needle", "section", "SourceMapGenerator", "map", "ErrorTypeStrings", "computed", "devtools", "isRef", "setDevtoolsHook", "warn", "watch", "map", "hasOwnProperty", "val", "TrackOpTypes", "TriggerOpTypes", "computed", "computed", "key", "self", "result", "hasOwnProperty", "isReadonly", "isShallow", "isRef", "isReadonly", "isShallow", "readonly", "isReadonly", "isRef", "isShallow", "ref", "_a", "_b", "source", "effect", "isRef", "cleanup", "seen", "warn", "isRef", "ErrorCodes", "warn", "p", "seen", "NOOP", "version", "warn", "warn", "container", "anchor", "warn", "callHook", "hook", "remove", "key", "vnode", "hooks", "warn", "warn", "ref", "warn", "isRef", "patchProp", "remove", "hydrate", "warn", "ref", "isTemplateNode", "hasWarned", "isText", "next", "parentNode", "hydrate", "resolve", "warn", "hydrate", "ref", "instance", "watch", "getInnerChild", "warn", "p", "getInnerChild", "reset", "warn", "warn", "warn", "warn", "warn", "isFunction", "warn", "warn", "p", "warn", "render", "computed", "isRef", "h", "getCurrentScope", "traverse", "watch", "render", "hydrate", "createApp", "warn", "warn", "warn", "effect", "watch", "warn", "reset", "warn", "track", "trigger", "i", "emit", "warn", "isModelListener", "raw", "emit", "render", "warn", "isOn", "reset", "raw", "warn", "warn", "queuePostFlushCb", "ref", "warn", "effect", "needTransition", "remove", "render", "hydrate", "p", "remove", "vnode", "parentComponent", "container", "namespace", "anchor", "optimized", "parentSuspense", "warn", "ref", "isRef", "warn", "warn", "ref", "uid", "emit", "warn", "reset", "isRef", "computed", "isRef", "computed", "render", "warn", "ErrorTypeStrings", "devtools", "setDevtoolsHook", "warn", "callHook", "h", "resolve", "warn", "watch", "warn", "isBoolean", "compatUtils", "DeprecationTypes", "warn", "warn", "e", "warn", "resolve", "def", "warn", "enterCbKey", "decorate", "warn", "warn", "matches", "isArray", "compatUtils", "DeprecationTypes", "warn", "NOOP", "isComponent", "isComponent", "_a", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "_a", "decoder", "stack", "EntityDecoder", "DecodingMode", "fromCodePoint", "p", "p", "p", "import_parser", "stack", "p", "isSimpleIdentifier", "parseExpression", "stack", "walk", "isComponent", "i", "node", "p", "returnType", "isVNode", "i", "matches", "advancePositionWithMutation", "locStub", "RESOLVE_FILTER", "isText", "isComponent", "p", "import_parser", "raw", "node", "isReferenced", "processExpression", "processExpression", "processExpression", "i", "children", "node", "isComponent", "processExpression", "isComponent", "arg", "checkCompatEnabled", "CompilerDeprecationTypes", "isCompatEnabled", "props", "mergeAsArray", "p", "processExpression", "processExpression", "hasScopeRef", "p", "p", "seen", "TRANSITION", "TRANSITION", "p", "ErrorCodes", "transformModel", "p", "transformOn", "TRANSITION", "p", "transformModel", "transformOn", "compile", "warn", "compile", "render"]
}
