URL 编码（Percent-encoding），也称为 URL 转义，是一种编码机制，用于将非 ASCII 字符或某些 ASCII 字符（比如空格、问号、井号等）转换为可以在 URL 中安全传输的格式。URL 编码用百分号 % 后跟两位十六进制数来表示字符。

在 URL 编码中，非字母数字的字符以及一些特殊字符会被转换成 % 后跟该字符的十六进制表示的ASCII 码。例如，空格会被转换为 %20，因为空格字符的 ASCII 码是 32，十六进制表示为 20。

URL 编码的重要性
字符限制：URL 必须 只包含 字母数字字符以及一些特定的特殊字符。
数据完整性：在 URL 中安全地传输数据，避免字符被误解或导致错误。
兼容性：确保 URL 在不同的系统和浏览器之间能够正确地被解析。



举例详解
假设我们有一个查询字符串，包含用户名和密码，以及用户的城市：

用户名: John Doe
密码: password!
城市: New York

在 URL 中，空格、感叹号和中文字符都需要被编码。以下是如何进行 URL 编码：

空格（ ）编码为 %20
感叹号（!）编码为 %21
中文字符（如 中）通常不是 ASCII 字符，需要转换成对应的 Unicode 编码，例如 中 可以编码为 %E4%B8%AD
编码后的查询字符串可能如下所示：

username=John%20Doe&password=pass%21word&city=New%20York



在 Node.js 中，可以使用 querystring 模块或 encodeURI 和 encodeURIComponent 函数来进行 URL 编码：

使用 querystring 模块
const querystring = require('querystring');

const data = {
  username: 'John Doe',
  password: 'password!',
  city: 'New York'
};

const queryString = querystring.stringify(data);

console.log(queryString);

// 输出: "username=John%20Doe&password=password%21&city=New%20York"


使用 encodeURIComponent 函数
const username = 'John Doe';
const password = 'password!';
const city = 'New York';

console.log(encodeURIComponent(username)); // 输出: "John%20Doe"
console.log(encodeURIComponent(password));  // 输出: "pass%21word"
console.log(encodeURIComponent(city));      // 输出: "New%20York"

encodeURIComponent 用于对单个 URI 组件进行编码，而 encodeURI 用于对整个 URI 进行编码，但不会对某些字符进行编码，这些字符在 URI 中通常保持不变。

URL 编码确保了即使在包含特殊字符的数据中，URL 也能在不同的系统和上下文中安全地传输和解析。



有空可以深切的弄懂！！！！！！！！！！！！！！！！！！